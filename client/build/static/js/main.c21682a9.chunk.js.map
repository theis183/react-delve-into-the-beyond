{"version":3,"sources":["compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","pages/Login.js","utils/storage.js","compnents/SignUpButton/index.js","pages/SignUp.js","pages/CharacterSelect.js","App.js","serviceWorker.js","index.js"],"names":["Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","SignInButton","fetches","state","axios","post","username","email","password","token","get","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isLoading","signInError","signInUsername","signInPassword","handleInputChange","bind","assertThisInitialized","onSignIn","event","_event$target","target","value","setState","defineProperty","then","res","data","console","log","JSON","stringify","success","key","obj","error","localStorage","setItem","err","setInStorage","_this2","valueStr","getItem","parse","getFromStorage","_this$state","react_router","to","onChange","compnents_SignInButton","onClick","href","Component","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","history","push","TextBoxes_Email","compnents_SignUpButton","CharacterSelect","App","react_router_dom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c21682a9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  }\r\n \r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport {getFromStorage, setInStorage} from \"../utils/storage\"\r\nimport {Username, Password} from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        isLoading: true,\r\n        token: '',\r\n        signInError: '',\r\n        signInUsername: '',\r\n        signInPassword: '',\r\n      }\r\n\r\n      this.handleInputChange = this.handleInputChange.bind(this)\r\n      this.onSignIn = this.onSignIn.bind(this)\r\n\r\n      \r\n    }\r\n\r\n    handleInputChange (event){\r\n        const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n}\r\n\r\n    onSignIn (){\r\n        fetches.userSignIn(this.state)\r\n        .then(res => {\r\n            const data = res.data\r\n            console.log(\"Here is the login data\" + JSON.stringify(data))\r\n            if(data.success){\r\n                setInStorage('Delve_Into_Space', {token: data.token})\r\n            }\r\n        }\r\n            )\r\n        /* .then(json => {\r\n            console.log('json' + json)\r\n            if(json.success){\r\n                setInStorage('Main_app', {token: json.token})\r\n                this.setState({\r\n                    token: json.token\r\n                })\r\n            }\r\n\r\n        }) */\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n        \r\n        if (obj && obj.token){\r\n            const {token} = obj\r\n            console.log(\"Here is a token \" + token)\r\n/*             fetch('/api/account/verify?token='+ token)\r\n            .then(res => res.json()) */\r\n            fetches.verifyToken(token)\r\n            .then(res =>{\r\n                console.log(\"Here is a the return call\" + res)\r\n                const data = res.data\r\n                console.log(\"Here is data \" + JSON.stringify(data))\r\n                if(data.success){\r\n                    this.setState({\r\n                        token: token,\r\n                        isLoading: false\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                }\r\n                \r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\nconst {\r\n    isLoading,\r\n    token\r\n    } = this.state\r\n\r\nif (isLoading)\r\n{\r\n    return (\r\n        <div><p>Loading...</p></div>\r\n    )\r\n}\r\n\r\nif(!token){\r\n    return (\r\n        <div>\r\n        <Username onChange={this.handleInputChange}/>\r\n        <Password onChange={this.handleInputChange}/>\r\n        <SignInButton onClick={this.onSignIn}/>\r\n        <a href=\"/SignUp\" >Sign Up</a>\r\n        </div>\r\n    )\r\n}\r\n        return (\r\n\r\n <Redirect to='/CharacterSelect'  />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Username onChange={this.handleInputChange} />\r\n                <Email onChange={this.handleInputChange} />\r\n                <Password onChange={this.handleInputChange} />\r\n                <ConfirmPassword onChange={this.handleInputChange} />\r\n                <SignUpButton onClick={this.onSignUp} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                Create Character Here!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  CharacterSelect","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}