{"version":3,"sources":["utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","compnents/Buttons/index.js","compnents/Header/index.js","compnents/Footer/index.js","compnents/Container/index.js","compnents/Wrapper/index.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","pages/CharacterSelect.js","compnents/Row/index.js","compnents/Tables/index.js","compnents/Sections/index.js","compnents/Timer/index.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","put","get","userId","characterName","characterId","scanRange","coord","distanceFromOrigin","solarSystemId","planetId","actionType","time","actionValue","actionId","starId","LoadGameButton","LongRangeScanButton","MidRangeScanButton","ShortRangeScanButton","LogoutButton","WarpToSolarSystem","TravelToPlanetButton","RetrieveArtifactButton","DockButton","MainOptionsButton","children","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","logout","bind","assertThisInitialized","then","setState","onClick","react_router","to","Component","Footer","Container","Wrapper","compnents_Header","compnents_Footer","Login","isLoading","signInError","signInUsername","signInPassword","handleInputChange","onSignIn","event","_event$target","target","value","defineProperty","_this2","res","data","log","success","history","push","_this3","_this$state","compnents_Wrapper","onChange","compnents_SignInButton","href","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","CharacterSelect","characters","createCharacter","loadGame","window","location","reload","character","res2","account","compnents_CreateCharacterButton","map","_id","NearbySolarSystemsRow","_Component","solarSystem","currentCoord","inherits","createClass","warp","toPrecision","distance","NearbyPlanetRow","_Component2","planet","currentPlanetCoordLoc","currentPlanet","coordLoc","_this4","travel","distanceFromStar","planetType","ArtifactRow","_Component3","_this5","artifact","techLevel","StationRow","_Component4","_this6","station","stationSize","manufacturingLvl","labLvl","NearbySolarSystemsTable","solarSystems","scanResults","currentSolarSystemCoord","solarSystemsMap","Row_NearbySolarSystemsRow","scope","NearbyPlanetsTable","midRangeScanResults","planetsMap","planets","Row_NearbyPlanetRow","ArtifactsTable","artifacts","scanResolution","artifactsMap","Math","sqrt","random","signal","Row_ArtifactRow","StationsTable","stations","stationsMap","Row_StationRow","CharacterInformationSection","currency","SolarSystemInformationSection","star","isloading","starType","spectralType","luminosity","mass","temp","PlanetInformationSection","planetTemp","PlanetSummarySection","_this$state2","length","Tables_ArtifactsTable","Tables_StationsTable","ShipInformationSection","ship","shipName","role","shipClass","acceleration","wormHoleFactor","miningLasers","miningLaserYield","Timer","seconds","prevState","handeler","interval","setInterval","tick","clearInterval","Game","characterCurrency","solarSystemDistanceFromOrigin","solarSystemCoord","planetCoord","longRangeScanResults","shortRangeScanResults","action","actionCompletionTime","screenFocus","longRangeScan","midRangeScan","shortRangeScan","warpTo","travelTo","handleActionCompletion","resolveTravelTo","resolveWarpTo","setScreenFocus","parseFloat","found","actionRes","actionData","_this7","_this8","characterRes","characterData","_this9","currentSS","_this10","shipInst","_this11","_this$state3","div","class","Sections_SolarSystemInformationSection","Sections_ShipInformationSection","Sections_PlanetInformationSection","compnents_Timer","Date","getTime","now","Tables_NearbySolarSystemsTable","Tables_NearbyPlanetsTable","Sections_PlanetSummarySection","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4a6342f.chunk.js","sourcesContent":["export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userLogout: function(token){\r\n    return axios.put(\"/api/account/logout/\" + token)\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  },\r\n\r\n  longRangeScan: function(scanRange, coord, distanceFromOrigin){\r\n    return axios.get(\"/api/longRangeScan/\" + scanRange + \"/\" + distanceFromOrigin + \"/\" + coord[0] + \"/\" + coord[1] + \"/\" + coord[2])\r\n  },\r\n\r\n  midRangeScan: function(solarSystemId){\r\n    return axios.get(\"/api/midRangeScan/\" + solarSystemId)\r\n  },\r\n \r\n  shortRangeScan: function(planetId){\r\n    return axios.get(\"/api/shortRangeScan/\" + planetId)\r\n  },\r\n\r\n  checkAction: function(characterId){\r\n    return axios.get(\"/api/checkAction/\" + characterId)\r\n  },\r\n\r\n  queueAction: function(characterId, actionType, time, actionValue){\r\n    return axios.post(\"/api/queueAction\",{\r\n      characterId: characterId,\r\n      actionType: actionType,\r\n      time: time,\r\n      actionValue: actionValue\r\n    } )\r\n  },\r\n\r\n  getActions: function(characterId){\r\n    return axios.get(\"/api/getActions/\" + characterId)\r\n  },\r\n\r\n  changePlanet: function(planetId, characterId){\r\n    return axios.put(\"api/changePlanet/\" + planetId +\"/\" + characterId )\r\n  },\r\n\r\n  changeSolarSystem: function(solarSystemId, characterId){\r\n    return axios.put(\"/api/changeSolarSystem/\" + solarSystemId + \"/\" + characterId)\r\n  },\r\n\r\n  completeAction: function(actionId){\r\n    return axios.put(\"/api/completeAction/\" + actionId)\r\n  },\r\n\r\n  getStar: function(starId){\r\n    return axios.get(\"/api/getStar/\" + starId)\r\n  }\r\n\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function LongRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Long Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function MidRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-info\" {...props}>Mid Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function ShortRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-info\" {...props}>Short Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\n\r\nexport function LogoutButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Logout</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function WarpToSolarSystem(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Warp</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TravelToPlanetButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Travel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function RetrieveArtifactButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Retrieve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function DockButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Dock</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MainOptionsButton(props){\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-lg btn-dark btn-block\" {...props}>{props.children}</button>        \r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport { LogoutButton } from \"../Buttons\";\r\nimport fetches from \"../../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            login: this.props.login,\r\n            token: this.props.token,\r\n            logout: \"\"\r\n         }\r\n\r\n         this.logout = this.logout.bind(this)\r\n\r\n    }\r\n\r\n    logout(){\r\n        fetches.userLogout(this.state.token)\r\n        .then(this.setState({\r\n            logout: \"true\"\r\n        }))\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div id=\"header\">\r\n            <h2>Delve Into The Beyond</h2>\r\n            {this.state.login === \"true\" ? <LogoutButton onClick={this.logout}> </LogoutButton> : <div></div>}\r\n            {this.state.logout === \"true\" ? <Redirect to='/' /> : <div></div>}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <footer className=\"footer mt-auto\">\r\n            <p>A game by Ian Theis</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function Container(props){\r\n    return(\r\n        <div className='container'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ContainerFluid(props){\r\n    return(\r\n        <div className='container-fluid'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './style.css'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport {Container, ContainerFluid} from \"../Container\"\r\n\r\nfunction Wrapper(props){\r\n    return(\r\n        <div id=\"wrapper\">\r\n             <Header login={props.login} token={props.token}/>\r\n            <Container>\r\n                {props.children}\r\n            </Container>\r\n                    <Footer />                 \r\n</div>\r\n    )}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <Wrapper login=\"false\" token=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Username onChange={this.handleInputChange} />\r\n                            <Password onChange={this.handleInputChange} />\r\n                    <       SignInButton onClick={this.onSignIn} />\r\n                            <a href=\"/SignUp\" >Sign Up</a>\r\n                        </div>\r\n                    </div>  \r\n                </Wrapper>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Wrapper login=\"false\" token=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Username onChange={this.handleInputChange} />\r\n                        <Email onChange={this.handleInputChange} />\r\n                        <Password onChange={this.handleInputChange} />\r\n                        <ConfirmPassword onChange={this.handleInputChange} />\r\n                        <SignUpButton onClick={this.onSignUp} />\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: []\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.loadGame = this.loadGame.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    loadGame(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <CharacterName onChange={this.handleInputChange} />\r\n                        <CreateCharacterButton onClick={this.createCharacter} />\r\n                        {this.state.characters.map((character) =>\r\n                        <div>{character.characterName}\r\n                            <LoadGameButton onClick={event => this.loadGame(event)} value={character._id} />\r\n                                </div>\r\n                             )}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React, { Component } from \"react\";\r\nimport {distance} from \"mathjs\"\r\nimport {WarpToSolarSystem, TravelToPlanetButton, RetrieveArtifactButton, DockButton} from \"../Buttons\"\r\n\r\nexport class NearbySolarSystemsRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystem: props.children.solarSystem,\r\n            currentCoord: props.children.currentCoord\r\n         }\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        var warp = this.props.warp\r\n        return(\r\n          <tr>\r\n            <td>X:{this.state.solarSystem.coord[0].toPrecision(5)} Y:{this.state.solarSystem.coord[1].toPrecision(5)} Z:{this.state.solarSystem.coord[2].toPrecision(5)}</td>\r\n            <td>{this.state.solarSystem.distanceFromOrigin.toPrecision(5)}</td>\r\n            <td>{distance(this.state.solarSystem.coord, this.state.currentCoord).toPrecision(5)}</td>\r\n            <td><WarpToSolarSystem value={this.state.solarSystem._id} \r\n                onClick={() => warp(distance(this.state.solarSystem.coord, this.state.currentCoord) * 149600000000 * 63241, this.state.solarSystem._id)}>\r\n                </WarpToSolarSystem>\r\n            </td>\r\n          </tr>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            planet: props.children.planet,\r\n            currentPlanetCoordLoc: props.children.currentPlanet.coordLoc\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        var travel = this.props.travel\r\n        return(\r\n            <tr>\r\n              <td>X:{this.state.planet.coordLoc[0].toPrecision(5)} Y:{this.state.planet.coordLoc[1].toPrecision(5)})}</td>\r\n              <td>{this.state.planet.distanceFromStar.toPrecision(5)}</td>\r\n              <td>{distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc).toPrecision(5)}</td>\r\n              <td>{this.state.planet.planetType}</td>\r\n              <td><TravelToPlanetButton value={this.state.planet._id} onClick={() => travel(distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc) * 149600000000, this.state.planet._id)}></TravelToPlanetButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class ArtifactRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifact: props.children.artifact,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <tr>\r\n              <td>{this.state.artifact.techLevel}</td>\r\n              <td><RetrieveArtifactButton></RetrieveArtifactButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class StationRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            station: props.children.station,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        const {station} = this.state\r\n        return(\r\n            <tr>\r\n              <td>{station.stationSize}</td>\r\n              <td>{station.manufacturingLvl}</td>\r\n              <td>{station.labLvl}</td>\r\n              <td><DockButton></DockButton></td>\r\n            </tr>\r\n          )}\r\n}","import React, { Component } from \"react\";\r\nimport {NearbySolarSystemsRow, NearbyPlanetRow, ArtifactRow, StationRow} from \"../Row\"\r\n\r\n\r\nexport class NearbySolarSystemsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystems: props.children.scanResults,\r\n            currentCoord: props.children.currentSolarSystemCoord\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        var {currentCoord} = this.state\r\n        var warp = this.props.warp\r\n        var solarSystemsMap = this.state.solarSystems.map(function(solarSystem){\r\n            return <NearbySolarSystemsRow warp={warp}>\r\n                {{\r\n                    \"solarSystem\": solarSystem,\r\n                    \"currentCoord\": currentCoord\r\n                }}\r\n            </NearbySolarSystemsRow>;\r\n          })\r\n        \r\n        return(\r\n    <table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Origin</th>\r\n          <th scope=\"col\">Distance From Current Solar System</th>\r\n          <th scope=\"col\">Warp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {solarSystemsMap}\r\n      </tbody>\r\n    </table>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            midRangeScanResults: props.children.scanResults,\r\n            currentPlanet: props.children.currentPlanet\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {currentPlanet} = this.state\r\n        var travel = this.props.travel\r\n        var planetsMap = this.state.midRangeScanResults.planets.map(function(planet){\r\n            return <NearbyPlanetRow travel={travel}>\r\n                {{\r\n                    \"planet\": planet,\r\n                    \"currentPlanet\": currentPlanet\r\n                }}\r\n            </NearbyPlanetRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Star</th>\r\n          <th scope=\"col\">Distance From Current Planet</th>\r\n          <th scope=\"col\">Planet Type</th>\r\n          <th scope=\"col\">Travel</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {planetsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class ArtifactsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifacts: props.children.artifacts,\r\n            scanResolution: props.children.scanResolution\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {artifacts, scanResolution} = this.state\r\n        var artifactsMap = artifacts.map(function(artifact){\r\n            if((Math.sqrt(Math.random()) * scanResolution) > artifact.signal){\r\n                return ( <ArtifactRow>\r\n                    {{\r\n                        \"artifact\": artifact,\r\n                    }}\r\n                </ArtifactRow>\r\n              )\r\n            }\r\n        }) \r\n            \r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Retrieve</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {artifactsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n        }\r\n\r\n}\r\n\r\nexport class StationsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stations: props.children.stations,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {stations} = this.state\r\n        var stationsMap = stations.map(function(station){\r\n            return <StationRow>\r\n                {{\r\n                    \"station\": station\r\n                }}\r\n            </StationRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Station Size</th>\r\n          <th scope=\"col\">Manufactuaring Level</th>\r\n          <th scope=\"col\">Research Level</th>\r\n          <th scope=\"col\">Dock</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {stationsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\"\r\nimport './style.css'\r\nimport {ArtifactsTable, StationsTable} from \"../Tables\"\r\nimport fetches from \"../../utils/fetches\";\r\n\r\nexport function CharacterInformationSection(props){\r\n    return(\r\n    <div id=\"characterInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h3>Character Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <p>Name: {props.name}</p>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>Currency: ${props.currency}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n    export class SolarSystemInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                solarSystem: props.children.solarSystem,\r\n                star: '',\r\n                isloading: true\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n        componentDidMount(){\r\n            fetches.getStar(this.state.solarSystem.star)\r\n            .then(res =>\r\n                {const data = res.data\r\n                    if (data.success){\r\n                        this.setState({\r\n                            star: data.star,\r\n                            isloading: false\r\n                        })\r\n                    }\r\n                \r\n                })\r\n        }\r\n        render(){\r\n            \r\n            if(this.state.isloading){\r\n                return(<div>Loading...</div>)\r\n            }\r\n            const {solarSystem, star} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Solar System Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Distance From Origin: {solarSystem.distanceFromOrigin.toPrecision(5)} LY</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>System Coordinates: (X:{solarSystem.coord[0].toPrecision(5)}, Y:{solarSystem.coord[1].toPrecision(5)}, Z:{solarSystem.coord[2].toPrecision(5)} ) LY</p>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Star Summary</h3>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Star Type: {star.starType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Spectral Type: {star.spectralType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Luminosity: {star.luminosity.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Mass: {star.mass.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Temperature: {star.temp.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n    export class PlanetInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.planet,\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n \r\n        render(){\r\n            const {planet} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Planet Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Type: {planet.planetType}</p>\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Temp: {planet.planetTemp.toPrecision(5)}</p>\r\n                    </div>                   \r\n                </div>\r\n                <div className='row'>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Distance From Star: {planet.distanceFromStar.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Planet Coordinates: ( X:{planet.coordLoc[0].toPrecision(5)} Y:{planet.coordLoc[1].toPrecision(5)} )</p>\r\n                    </div>\r\n                </div>                    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class PlanetSummarySection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.scanResults,\r\n                scanResolution: props.children.scanResolution\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n    \r\n    \r\n        render(){\r\n            const {planet, scanResolution} = this.state\r\n           return(\r\n           <div>\r\n            {planet.artifacts.length > 0 ? \r\n            <ArtifactsTable>\r\n                {{\r\n                    artifacts: planet.artifacts,\r\n                    scanResolution: scanResolution\r\n                }}\r\n            </ArtifactsTable> :\r\n            <div>Scan did not Detect any Signs of an Artifact</div> }\r\n            {planet.stations.length > 0 ? \r\n            <StationsTable>\r\n                {{\r\n                    stations: planet.stations\r\n                    \r\n                }}\r\n            </StationsTable> :\r\n            <div>Scan did not Detect any Signs of an Orbital Station</div> }\r\n            </div>\r\n           )\r\n        \r\n    }\r\n}\r\n\r\nexport class ShipInformationSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ship: props.children.ship\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const {ship} = this.state\r\n       return(\r\n        <div id=\"shipInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-12'>\r\n                <h3>Ship Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Name: {ship.shipName}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Role: {ship.role}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Class: {ship.shipClass}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Tech Level: {ship.techLevel}</p>\r\n            </div>\r\n            <div className='col-md-4'>\r\n                <p>Acceleration: {ship.acceleration} m/s</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Worm Hole Factor: {ship.wormHoleFactor}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Scan Range: {ship.scanRange} m/s</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Scan Resolution: {ship.scanResolution}</p>\r\n            </div>\r\n        </div>\r\n        { ship.miningLasers > 0 ?\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining Lasers: {ship.miningLasers} </p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Mining Yield: {ship.miningLaserYield} m3/cycle</p>\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining: No Mining Capabilities</p>\r\n            </div>\r\n        </div>}\r\n    </div>\r\n       )\r\n    \r\n}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          seconds: this.props.seconds }\r\n    }\r\n\r\n    tick() {\r\n      this.setState(prevState => ({\r\n        seconds: prevState.seconds - 1\r\n      })\r\n      )\r\n      if(this.state.seconds <= 0){\r\n          this.props.handeler()\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          Time Until Completion: {this.state.seconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Timer","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { LongRangeScanButton, MidRangeScanButton, ShortRangeScanButton, MainOptionsButton } from '../compnents/Buttons'\r\nimport { CharacterInformationSection, SolarSystemInformationSection, PlanetSummarySection, ShipInformationSection, PlanetInformationSection } from '../compnents/Sections'\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Container } from '../compnents/Container'\r\nimport {NearbySolarSystemsTable, NearbyPlanetsTable} from '../compnents/Tables'\r\nimport Timer from \"../compnents/Timer\"\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n            solarSystem: '',\r\n            solarSystemDistanceFromOrigin: '',\r\n            solarSystemCoord: '',\r\n            solarSystemId: '',\r\n            planet: '',\r\n            planetCoord: '',\r\n            planetId: '',\r\n            ship: '',\r\n            acceleration: '',\r\n            scanRange: '',\r\n            scanResolution: '',\r\n            wormHoleFactor: '',\r\n            longRangeScanResults: '',\r\n            midRangeScanResults: '',\r\n            shortRangeScanResults: '',\r\n            action: '',\r\n            actionType: '',\r\n            actionCompletionTime: '',\r\n            actionValue: '',\r\n            screenFocus: '',\r\n            \r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.longRangeScan = this.longRangeScan.bind(this)\r\n        this.midRangeScan = this.midRangeScan.bind(this)\r\n        this.shortRangeScan = this.shortRangeScan.bind(this)\r\n        this.warpTo = this.warpTo.bind(this)\r\n        this.travelTo = this.travelTo.bind(this)\r\n        this.handleActionCompletion = this.handleActionCompletion.bind(this)\r\n        this.resolveTravelTo = this.resolveTravelTo.bind(this)\r\n        this.resolveWarpTo = this.resolveWarpTo.bind(this)\r\n        this.setScreenFocus = this.setScreenFocus.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    longRangeScan() {\r\n        fetches.longRangeScan(this.state.scanRange, this.state.solarSystemCoord, this.state.solarSystemDistanceFromOrigin)\r\n        .then(\r\n            solarSystems => {\r\n                this.setState({\r\n                    longRangeScanResults: solarSystems.data\r\n                })\r\n                console.log(solarSystems.data)\r\n            }\r\n        )\r\n    }\r\n\r\n    midRangeScan() {\r\n        fetches.midRangeScan(this.state.solarSystemId)\r\n        .then( res => {\r\n            this.setState({\r\n            midRangeScanResults: res.data.solarSystem\r\n            })\r\n        })\r\n    }\r\n\r\n    shortRangeScan() {\r\n        fetches.shortRangeScan(this.state.planetId)\r\n        .then(\r\n            res => {\r\n                console.log(\"here is the short scan res \" + res)\r\n                this.setState({\r\n                shortRangeScanResults: res.data.planet\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    warpTo(distance, solarSystemId) {\r\n        console.log(\"Here is the distance to be traveled in a warp \" + distance )\r\n        const {character} = this.state\r\n        const acceleration = parseFloat(this.state.acceleration)\r\n        const wormHoleFactor = parseFloat(this.state.wormHoleFactor)\r\n        console.log(\"Here is the acceleration \" + acceleration)\r\n        console.log(\"Here is the wormHole factor \" + wormHoleFactor)\r\n        const time = Math.sqrt((distance/wormHoleFactor)/acceleration) / 30\r\n        console.log(\"Here is the time in seconds it should take to complete the warp \" + time)\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Warp\", time, solarSystemId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    travelTo(distance, planetId) {\r\n        const {acceleration, character} = this.state\r\n        const time = Math.sqrt(distance/acceleration) / 30\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Travel\", time, planetId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    handleActionCompletion(){\r\n        const {action, actionType, actionValue} = this.state\r\n        if(actionType===\"Travel\"){\r\n            this.resolveTravelTo(actionValue)\r\n        }\r\n        else if(actionType === \"Warp\"){\r\n            this.resolveWarpTo(actionValue)\r\n        }\r\n        fetches.completeAction(action._id)\r\n        .then(res => {\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    action: '',\r\n                    actionType: '',\r\n                    actionCompletionTime: '',\r\n                    actionValue: '',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveTravelTo(planetId){\r\n        fetches.changePlanet(planetId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            planet: characterData.character.currentPlanet,\r\n                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                            planetId: characterData.character.currentPlanet._id,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveWarpTo(solarSystemId){\r\n        fetches.changeSolarSystem(solarSystemId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    longRangeScanResults: '',\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            solarSystem: characterData.character.currentSS,\r\n                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                            solarSystemId: characterData.character.currentSS._id,\r\n                        }, \r\n                        () => {\r\n                            fetches.changePlanet(this.state.solarSystem.planets[0], this.state.character._id)\r\n                            .then(res =>{\r\n                                const data = res.data\r\n                                if(data.success){\r\n                                    fetches.getCharacter(this.state.character._id)\r\n                                    .then(characterRes => {\r\n                                        const characterData = characterRes.data\r\n                                        if (characterData.success) {\r\n                                            this.setState({\r\n                                                planet: characterData.character.currentPlanet,\r\n                                                planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                                planetId: characterData.character.currentPlanet._id,\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                                \r\n                             })\r\n                        }\r\n                        )\r\n                            \r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setScreenFocus(value){\r\n        this.setState({\r\n            screenFocus: value\r\n        })\r\n        console.log(\"Screen set was called\")\r\n    }\r\n                        \r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if (obj.character) {\r\n                            const { character } = obj\r\n                            fetches.getCharacter(character)\r\n                                .then(characterRes => {\r\n                                    const characterData = characterRes.data\r\n                                    if (characterData.success) {\r\n                                        console.log(\"Found Character!\")\r\n                                        console.log(\"Character \" + JSON.stringify(characterData.character))\r\n                                        this.setState({\r\n                                            character: characterData.character,\r\n                                            characterCurrency: characterData.character.currency,\r\n                                            characterName: characterData.character.characterName,\r\n                                            solarSystem: characterData.character.currentSS,\r\n                                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                                            solarSystemId: characterData.character.currentSS._id,\r\n                                            planet: characterData.character.currentPlanet,\r\n                                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                            planetId: characterData.character.currentPlanet._id,\r\n                                            ship: characterData.character.shipInst,\r\n                                            acceleration: characterData.character.shipInst.acceleration,\r\n                                            scanRange: characterData.character.shipInst.scanRange,\r\n                                            scanResolution: characterData.character.shipInst.scanResolution,\r\n                                            wormHoleFactor: characterData.character.shipInst.wormHoleFactor,\r\n                                        })\r\n                                       fetches.getActions(characterData.character._id)\r\n                                       .then(\r\n                                           actionRes => {\r\n                                               const actionData = actionRes.data\r\n                                               if(actionData.success && actionData.found){\r\n                                                    this.setState({\r\n                                                        action: actionData.action,\r\n                                                        actionType: actionData.action.actionType,\r\n                                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                        actionValue: actionData.action.actionValue,\r\n                                                        isLoading: false\r\n                                                    }) \r\n                                               }\r\n                                               else{ this.setState({\r\n                                                   isLoading: false\r\n                                               })} \r\n                                           }\r\n                                       ) \r\n                                    }\r\n                                    else {\r\n                                        console.log(\"Could NOT find Character!\")\r\n                                        this.setState({\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n        //main game return\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                    <div className=\"row\">\r\n                        <div div className=\"col-md-2\">\r\n                            <div class=\"btn-group-vertical\">\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Character\")}>Character</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Ship\")}>Ship</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Inventory\")}>Inventory</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"SolarSystem\")}>Solar System</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Planet\")}>Planet</MainOptionsButton>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                            <div className= 'col-md-10'>\r\n\r\n                            {this.state.screenFocus===\"Character\" ?\r\n                            <CharacterInformationSection\r\n                            name={this.state.characterName}\r\n                            currency={this.state.characterCurrency} />\r\n                            :\r\n                            <div></div>\r\n                            }\r\n\r\n                            {this.state.screenFocus === \"SolarSystem\" ?\r\n                            <SolarSystemInformationSection>\r\n                            {{\r\n                                solarSystem: this.state.solarSystem\r\n                            }}\r\n                            </SolarSystemInformationSection>    \r\n                            : <div></div>}\r\n\r\n                            {this.state.screenFocus === \"Ship\" ?\r\n                            <ShipInformationSection>\r\n                                {{\r\n                                    ship: this.state.ship\r\n                                }}\r\n                            </ShipInformationSection>\r\n                            : <div></div>\r\n                            }\r\n\r\n                            {this.state.screenFocus === \"Planet\" ?\r\n                            <PlanetInformationSection>\r\n                                {{\r\n                                    planet: this.state.planet\r\n                                }}\r\n                            </PlanetInformationSection>\r\n                            : <div></div>\r\n                            }\r\n\r\n                            </div>\r\n                        </div>    \r\n                        <div className='row'>\r\n                        <div className='col-md-12'>\r\n                        <div>{this.state.actionCompletionTime}</div>\r\n                        <div>{this.state.actionType}</div>\r\n                        <div>{this.state.actionValue}</div>\r\n                        {this.state.action ? \r\n                        <Timer seconds={(new Date(this.state.actionCompletionTime).getTime() - Date.now()) / 1000.0}\r\n                        handeler={this.handleActionCompletion}>\r\n                        </Timer> :\r\n                        <div></div>\r\n                        }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            <div class=\"btn-group\" role=\"group\">\r\n                                <LongRangeScanButton onClick={this.longRangeScan} />  \r\n                                <MidRangeScanButton onClick={this.midRangeScan} />\r\n                                <ShortRangeScanButton onClick={this.shortRangeScan} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.longRangeScanResults ? \r\n                                <NearbySolarSystemsTable warp={this.warpTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.longRangeScanResults,\r\n                                        \"currentSolarSystemCoord\": this.state.solarSystemCoord}}\r\n                                </NearbySolarSystemsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.midRangeScanResults ? \r\n                                <NearbyPlanetsTable travel={this.travelTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.midRangeScanResults,\r\n                                        \"currentPlanet\": this.state.planet}}\r\n                                </NearbyPlanetsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.shortRangeScanResults ? \r\n                                <PlanetSummarySection>\r\n                                    {{\r\n                                        \"scanResults\":this.state.shortRangeScanResults,\r\n                                        \"scanResolution\": this.state.scanResolution\r\n                                        }}\r\n                                </PlanetSummarySection> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </Wrapper>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}