{"version":3,"sources":["utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","compnents/Buttons/index.js","pages/CharacterSelect.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","get","userId","characterName","characterId","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isLoading","signInError","signInUsername","signInPassword","handleInputChange","bind","assertThisInitialized","onSignIn","event","_event$target","target","value","setState","defineProperty","_this2","then","res","data","log","success","history","push","_this3","_this$state","react_router","to","onChange","compnents_SignInButton","onClick","href","Component","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","LoadGameButton","CharacterSelect","characters","createCharacter","loadGame","window","location","reload","character","res2","account","compnents_CreateCharacterButton","map","_id","Game","characterCurrency","characterRes","characterData","currency","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a2eb285.chunk.js","sourcesContent":["export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  }\r\n \r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Username onChange={this.handleInputChange} />\r\n                    <Password onChange={this.handleInputChange} />\r\n                    <SignInButton onClick={this.onSignIn} />\r\n                    <a href=\"/SignUp\" >Sign Up</a>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Username onChange={this.handleInputChange} />\r\n                <Email onChange={this.handleInputChange} />\r\n                <Password onChange={this.handleInputChange} />\r\n                <ConfirmPassword onChange={this.handleInputChange} />\r\n                <SignUpButton onClick={this.onSignUp} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React from \"react\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: []\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.loadGame = this.loadGame.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    loadGame(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <CharacterName onChange={this.handleInputChange} />\r\n                <CreateCharacterButton onClick={this.createCharacter} />\r\n                {this.state.characters.map((character) =>\r\n                    <div>{character.characterName}\r\n                        <LoadGameButton onClick={event => this.loadGame(event)} value={character._id} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if(obj.character){\r\n                            const {character} = obj\r\n                            fetches.getCharacter(character)\r\n                            .then(characterRes => {\r\n                                const characterData = characterRes.data\r\n                                if(characterData.success){\r\n                                    console.log(\"Found Character!\")\r\n                                    this.setState({\r\n                                        character: characterData.character,\r\n                                        characterCurrency: characterData.character.currency,\r\n                                        characterName: characterData.character.characterName,\r\n                                        isLoading: false\r\n                                    })\r\n                                }\r\n                                else{\r\n                                    console.log(\"Could NOT find Character!\")\r\n                                    this.setState({\r\n                                        isLoading: false\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        else {this.setState({\r\n                            isLoading:false\r\n                        })}\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character){\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n//main game return\r\n        return(\r\n            <div>\r\n                Name: {this.state.character.characterName}\r\n                Currency: {this.state.character.currency}$\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}