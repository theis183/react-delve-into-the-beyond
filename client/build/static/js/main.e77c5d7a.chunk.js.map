{"version":3,"sources":["compnents/SignInButton/index.js","compnents/SignInForm/index.js","pages/Login.js","utils/storage.js","compnents/TextBoxes/index.js","compnents/SignUpButton/index.js","utils/fetches.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["SignInButton","react_default","a","createElement","type","className","SignInForm","for","id","aria-describedby","compnents_SignInButton","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","token","signInError","signInUsername","signInPassword","_this2","key","valueStr","localStorage","getItem","JSON","parse","err","getFromStorage","fetch","then","res","json","success","setState","_this$state","compnents_SignInForm","href","Component","Username","assign","name","Email","Password","ConfirmPassword","SignUpButton","fetches","axios","post","username","email","password","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","handleInputChange","bind","assertThisInitialized","onSignUp","event","_event$target","target","value","defineProperty","console","log","onChange","TextBoxes_Email","compnents_SignUpButton","onClick","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wRAUeA,MARf,WACA,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,UAAU,gBAAhC,WCceC,MAhBf,WACA,OACAL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOI,IAAI,YAAX,YACAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,UAAU,eAAeG,GAAG,WAAWC,mBAAiB,cAE/ER,EAAAC,EAAAC,cAAA,SAAOI,IAAI,YAAX,YACAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWC,UAAU,eAAeG,GAAG,WAAWC,mBAAiB,cAEnFR,EAAAC,EAAAC,cAACO,EAAD,QC6DWC,cArEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,WAAW,EACXC,MAAO,GACPC,YAAa,GACbC,eAAgB,GAChBC,eAAgB,IARDZ,mFAaC,IAAAa,EAAAV,KACVM,ECpBP,SAAwBK,GAC3B,IAAIA,EACA,OAAO,KAGX,IACI,IAAMC,EAAWC,aAAaC,QAAQH,GACtC,OAAIC,EACOG,KAAKC,MAAMJ,GAEf,KAEX,MAAMK,GACF,OAAO,MDOOC,CAAe,YACzBZ,EACAa,MAAM,6BAA8Bb,GACnCc,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KAAK,SAAAE,GACCA,EAAKC,QACJb,EAAKc,SAAS,CACVlB,MAAOA,EACPD,WAAW,IAIfK,EAAKc,SAAS,CACVnB,WAAW,MAOvBL,KAAKwB,SAAS,CACVnB,WAAU,qCAKb,IAAAoB,EAILzB,KAAKI,MAFTC,EAFSoB,EAETpB,UACAC,EAHSmB,EAGTnB,MAGJ,OAAID,EAGIpB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAITmB,EASJrB,EAAAC,EAAAC,cAAA,sBAPQF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,KAAGwC,KAAK,WAAR,mBA1DYC,4BEHb,SAASC,EAASjC,GACrB,OACAX,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOI,IAAI,YAAX,YACIN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAW,OAAAgC,OAAA,CAAO1C,KAAK,OAAOC,UAAU,eAC5BG,GAAG,WAAWC,mBAAiB,WAC/BsC,KAAK,YACDnC,MAON,SAASoC,EAAMpC,GAClB,OACAX,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOI,IAAI,SAAX,SACIN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAW,OAAAgC,OAAA,CAAO1C,KAAK,QAAQC,UAAU,eAC7BG,GAAG,QAAQC,mBAAiB,QAC5BsC,KAAK,SACDnC,MAON,SAASqC,EAASrC,GACrB,OACAX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOI,IAAI,YAAX,YACAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAW,OAAAgC,OAAA,CAAO1C,KAAK,WAAWC,UAAU,eAChCG,GAAG,WAAWC,mBAAiB,WAC/BsC,KAAK,YACDnC,MAQN,SAASsC,EAAgBtC,GAC5B,OACAX,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOI,IAAI,mBAAX,oBACAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAW,OAAAgC,OAAA,CAAO1C,KAAK,WAAWC,UAAU,eAChCG,GAAG,kBAAkBC,mBAAiB,mBACtCsC,KAAK,mBACDnC,MC9CMuC,MARf,SAAsBvC,GACtB,OACAX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAW,OAAAgC,OAAA,CAAQ1C,KAAK,SAASC,UAAU,gBAAmBO,GAAnD,8BCHewC,EAED,SAAShC,GACnB,OAAOiC,IAAMC,KAAK,qBAAsB,CACpCC,SAAUnC,EAAMmC,SAChBC,MAAOpC,EAAMoC,MACbC,SAAUrC,EAAMqC,YCsDTC,cAxDX,SAAAA,EAAY9C,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,IACf7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,KACDQ,MAAQ,CACTuC,YAAa,GACbJ,SAAU,GACVC,MAAO,GACPC,SAAU,GACVG,gBAAiB,IAPN,IAAAnB,EAiBX5B,EAAKO,MAjBMqB,EAYXkB,YAZWlB,EAaXoB,eAbWpB,EAcXO,MAdWP,EAeXqB,eAfWrB,EAgBXsB,sBAhBW,OAoBflD,EAAKmD,kBAAoBnD,EAAKmD,kBAAkBC,KAAvBnD,OAAAoD,EAAA,EAAApD,CAAAD,IACzBA,EAAKsD,SAAWtD,EAAKsD,SAASF,KAAdnD,OAAAoD,EAAA,EAAApD,CAAAD,IArBDA,iFAyBAuD,GAAM,IAAAC,EACGD,EAAME,OAAtBvB,EADasB,EACbtB,KAAMwB,EADOF,EACPE,MAClBvD,KAAKwB,SAAL1B,OAAA0D,EAAA,EAAA1D,CAAA,GACGiC,EAAOwB,uCAKNnB,EAAmBpC,KAAKI,OACxBqD,QAAQC,IAAI,kDAMR,OACAzE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAU8B,SAAU3D,KAAKgD,oBACzB/D,EAAAC,EAAAC,cAACyE,EAAD,CAAOD,SAAU3D,KAAKgD,oBACtB/D,EAAAC,EAAAC,cAAC8C,EAAD,CAAU0B,SAAU3D,KAAKgD,oBACzB/D,EAAAC,EAAAC,cAAC+C,EAAD,CAAiByB,SAAU3D,KAAKgD,oBAChC/D,EAAAC,EAAAC,cAAC0E,EAAD,CAAcC,QAAS9D,KAAKmD,mBA/CvBvB,aCYNmC,MAXf,WACE,OACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACA/E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzE,IACjCV,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW1B,OCCvB2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7D,KAAK,SAAA8D,GACjCA,EAAaC","file":"static/js/main.e77c5d7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\">LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import React, { Component } from \"react\";\r\nimport SignInButton from \"../SignInButton\"\r\n\r\nfunction SignInForm(){\r\nreturn(\r\n<div>\r\n    <label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\" id=\"Username\" aria-describedby=\"Username\"></input>\r\n    </div>\r\n    <label for=\"Username\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\" id=\"Password\" aria-describedby=\"Password\"></input>\r\n    </div>\r\n    <SignInButton/>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInForm\r\n","import React, { Component } from \"react\";\r\nimport {getFromStorage, setInStorage} from \"../utils/storage\"\r\nimport SignInForm from \"../compnents/SignInForm\"\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        isLoading: true,\r\n        token: '',\r\n        signInError: '',\r\n        signInUsername: '',\r\n        signInPassword: '',\r\n      }\r\n\r\n      \r\n    }\r\n    componentDidMount() {\r\n        const token = getFromStorage(\"Main_app\")\r\n        if (token){\r\n            fetch('/api/account/verify?token='+ token)\r\n            .then(res => res.json)\r\n            .then(json =>{\r\n                if(json.success){\r\n                    this.setState({\r\n                        token: token,\r\n                        isLoading: false\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                }\r\n                \r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\nconst {\r\n    isLoading,\r\n    token\r\n    } = this.state\r\n\r\nif (isLoading)\r\n{\r\n    return (\r\n        <div><p>Loading...</p></div>\r\n    )\r\n}\r\n\r\nif(!token){\r\n    return (\r\n        <div>\r\n        <SignInForm />\r\n        <a href=\"/SignUp\">Sign Up</a>\r\n        </div>\r\n    )\r\n}\r\n        return (\r\n<div>\r\n    account\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/accout/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n \r\n}\r\n\r\n","import React, { Component } from \"react\"\r\nimport {Username, Email, Password, ConfirmPassword} from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          }\r\n    \r\n    \r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n    \r\n        \r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)    \r\n        \r\n    }\r\n\r\n    handleInputChange (event){\r\n        const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    }\r\n\r\n    onSignUp (){\r\n        fetches.userSignUp(this.state)\r\n        console.log(\"made the call\")\r\n    }\r\n    \r\n        render() {\r\n\r\n\r\n            return(\r\n            <div>\r\n                <Username onChange={this.handleInputChange}/>\r\n                <Email onChange={this.handleInputChange}/>\r\n                <Password onChange={this.handleInputChange}/>\r\n                <ConfirmPassword onChange={this.handleInputChange}/>\r\n                <SignUpButton onClick={this.onSignUp}/>\r\n\r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}