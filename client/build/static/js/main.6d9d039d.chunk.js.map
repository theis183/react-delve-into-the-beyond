{"version":3,"sources":["compnents/Images/volcanicPlanet.jpg","utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","compnents/Buttons/index.js","compnents/Header/index.js","compnents/Footer/index.js","compnents/Container/index.js","compnents/Wrapper/index.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","compnents/Row/index.js","compnents/Tables/index.js","pages/CharacterSelect.js","compnents/Sections/index.js","compnents/Timer/index.js","compnents/Images/index.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","put","get","userId","characterName","characterId","scanRange","coord","distanceFromOrigin","solarSystemId","planetId","actionType","time","actionValue","actionId","starId","inventoryId","itemName","itemTechLevel","quantity","techLvl","artifactId","delete","LongRangeScanButton","class","MidRangeScanButton","ShortRangeScanButton","LogoutButton","WarpToSolarSystem","TravelToPlanetButton","RetrieveArtifactButton","DockButton","MainOptionsButton","children","GenericButton","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","logout","bind","assertThisInitialized","then","setState","onClick","react_router","to","Component","Footer","Container","Wrapper","compnents_Header","compnents_Footer","Login","isLoading","signInError","signInUsername","signInPassword","handleInputChange","onSignIn","event","_event$target","target","value","defineProperty","_this2","res","data","log","success","history","push","_this3","_this$state","compnents_Wrapper","onChange","compnents_SignInButton","href","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","NearbySolarSystemsRow","_Component","solarSystem","currentCoord","inherits","createClass","warp","toPrecision","distance","_id","NearbyPlanetRow","_Component2","planet","currentPlanetCoordLoc","currentPlanet","coordLoc","_this4","travel","distanceFromStar","planetType","ArtifactRow","_Component3","_this5","artifact","_this6","recover","techLevel","StationRow","_Component4","_this7","station","stationSize","manufacturingLvl","labLvl","ItemRow","_Component5","_this8","item","volume","property","CharacterSelectionRow","_Component6","_this9","character","shipName","_this10","characterRes","characterData","currentSS","shipInst","load","currency","NearbySolarSystemsTable","solarSystems","scanResults","currentSolarSystemCoord","solarSystemsMap","map","Row_NearbySolarSystemsRow","scope","NearbyPlanetsTable","midRangeScanResults","planetsMap","planets","Row_NearbyPlanetRow","ArtifactsTable","artifacts","scanResolution","artifactsMap","Math","sqrt","random","signal","Row_ArtifactRow","StationsTable","stations","stationsMap","Row_StationRow","InventoryTable","inventory","inventoryMap","items","Row_ItemRow","CharacterSelectionTable","characters","characterMap","Row_CharacterSelectionRow","CharacterSelect","createCharacter","window","location","reload","res2","account","length","compnents_CreateCharacterButton","Tables_CharacterSelectionTable","CharacterInformationSection","SolarSystemInformationSection","star","isloading","starType","spectralType","luminosity","mass","temp","PlanetInformationSection","planetTemp","InventoryInformationSection","ship","Tables_InventoryTable","PlanetSummarySection","_this$state2","Tables_ArtifactsTable","Tables_StationsTable","ShipInformationSection","role","shipClass","acceleration","wormHoleFactor","miningLasers","miningLaserYield","Timer","seconds","prevState","handeler","interval","setInterval","tick","clearInterval","displaySeconds","toString","displayMinutes","floor","Images","Game","characterCurrency","solarSystemDistanceFromOrigin","solarSystemCoord","planetCoord","longRangeScanResults","shortRangeScanResults","action","actionCompletionTime","screenFocus","longRangeScan","midRangeScan","shortRangeScan","warpTo","travelTo","handleActionCompletion","resolveTravelTo","resolveWarpTo","setScreenFocus","recoverArtifact","parseFloat","found","actionRes","actionData","_this11","_this12","_this$state3","div","Sections_InventoryInformationSection","Sections_SolarSystemInformationSection","Sections_ShipInformationSection","Sections_PlanetInformationSection","compnents_Timer","ceil","Date","getTime","now","Tables_NearbySolarSystemsTable","Tables_NearbyPlanetsTable","Sections_PlanetSummarySection","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oZCAjC,SAASC,EAAeC,GAC3B,IAAIA,EACA,OAAO,KAGX,IACI,IAAMC,EAAWC,aAAaC,QAAQH,GACtC,OAAIC,EACOG,KAAKC,MAAMJ,GAEf,KAEX,MAAMK,GACF,OAAO,MAIR,SAASC,EAAaP,EAAKQ,GAC1BR,GACAS,QAAQC,MAAM,kBAGlB,IACIR,aAAaS,QAAQX,EAAKI,KAAKQ,UAAUJ,IAG7C,MAAMF,GACFG,QAAQC,MAAMJ,ICzBf,SAASO,EAASC,GACrB,OACAC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOC,IAAI,YAAX,YACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CAAOC,KAAK,OAAOH,UAAU,eAC5BI,GAAG,WAAWC,mBAAiB,WAC/BC,KAAK,YACDX,MAON,SAASY,EAAMZ,GAClB,OACAC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOC,IAAI,SAAX,SACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CAAOC,KAAK,QAAQH,UAAU,eAC7BI,GAAG,QAAQC,mBAAiB,QAC5BC,KAAK,SACDX,MAON,SAASa,EAASb,GACrB,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,IAAI,YAAX,YACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CAAOC,KAAK,WAAWH,UAAU,eAChCI,GAAG,WAAWC,mBAAiB,WAC/BC,KAAK,YACDX,MAQN,SAASc,EAAgBd,GAC5B,OACAC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOC,IAAI,mBAAX,oBACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CAAOC,KAAK,WAAWH,UAAU,eAChCI,GAAG,kBAAkBC,mBAAiB,mBACtCC,KAAK,mBACDX,MAOF,SAASe,EAAcf,GAC1B,OACAC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SAAOC,IAAI,iBAAX,kBACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,QAAAG,OAAAC,OAAA,CAAOC,KAAK,OAAOH,UAAU,eAC5BI,GAAG,gBAAgBC,mBAAiB,iBACpCC,KAAK,iBACDX,MC7DMgB,MARf,SAAsBhB,GACtB,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,2BCHeiB,EAED,SAASC,GACnB,OAAOC,IAAMC,KAAK,sBAAuB,CACrCC,SAAUH,EAAMG,SAChBC,MAAOJ,EAAMI,MACbC,SAAUL,EAAMK,YANTN,EAUD,SAASC,GACnB,OAAOC,IAAMC,KAAK,sBAAuB,CACrCC,SAAUH,EAAMG,SAChBE,SAAUL,EAAMK,YAbTN,EAiBD,SAASO,GACnB,OAAOL,IAAMM,IAAI,uBAAyBD,IAlB/BP,EAqBA,SAASO,GACpB,OAAOL,IAAMO,IAAI,uBAAyBF,EAAO,KAtBtCP,EA0BJ,SAASU,GAChB,OAAOR,IAAMO,IAAI,qBAAuBC,IA3B7BV,EA8BI,SAASC,GACxB,OAAOC,IAAMC,KAAK,wBAAwB,CACxCQ,cAAeV,EAAMU,cACrBD,OAAQT,EAAMS,UAjCLV,EAqCC,SAASY,GACrB,OAAOV,IAAMO,IAAI,kBAAoBG,IAtC1BZ,EAyCE,SAASa,EAAWC,EAAOC,GACxC,OAAOb,IAAMO,IAAI,sBAAwBI,EAAY,IAAME,EAAqB,IAAMD,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,KA1CnHd,EA6CC,SAASgB,GACrB,OAAOd,IAAMO,IAAI,qBAAuBO,IA9C7BhB,EAiDG,SAASiB,GACvB,OAAOf,IAAMO,IAAI,uBAAyBQ,IAlD/BjB,EAqDA,SAASY,GACpB,OAAOV,IAAMO,IAAI,oBAAsBG,IAtD5BZ,EAyDA,SAASY,EAAaM,EAAYC,EAAMC,GACnD,OAAOlB,IAAMC,KAAK,mBAAmB,CACnCS,YAAaA,EACbM,WAAYA,EACZC,KAAMA,EACNC,YAAaA,KA9DJpB,EAkED,SAASY,GACnB,OAAOV,IAAMO,IAAI,mBAAqBG,IAnE3BZ,EAsEC,SAASiB,EAAUL,GAC/B,OAAOV,IAAMM,IAAI,oBAAsBS,EAAU,IAAML,IAvE5CZ,EA0EM,SAASgB,EAAeJ,GACzC,OAAOV,IAAMM,IAAI,0BAA4BQ,EAAgB,IAAMJ,IA3ExDZ,EA8EG,SAASqB,GACvB,OAAOnB,IAAMM,IAAI,uBAAyBa,IA/E/BrB,EAkFJ,SAASsB,GAChB,OAAOpB,IAAMO,IAAI,gBAAkBa,IAnFxBtB,EAsFC,SAASuB,GACrB,OAAOrB,IAAMO,IAAI,qBAAuBc,IAvF7BvB,EA0FJ,SAASwB,EAAUC,EAAeC,EAAUH,GACnD,OAAOrB,IAAMC,KAAK,sBAClB,CACET,KAAM8B,EACNG,QAASF,EACTC,SAAUA,EACVH,YAAaA,KAhGJvB,EAoGG,SAAS4B,GACvB,OAAO1B,IAAM2B,OAAO,uBAAyBD,sBC5F1C,SAASE,EAAoB/C,GAChC,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAOC,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,0BAAnE,oBAKD,SAASC,EAAmBjD,GAC/B,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAOC,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,0BAAnE,mBAKD,SAASE,EAAqBlD,GACjC,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAOC,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,0BAAnE,qBAMD,SAASG,EAAanD,GACzB,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,eAAeI,GAAG,aAAgBT,GAAlE,WAKD,SAASoD,EAAkBpD,GAC9B,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,SAKD,SAASqD,EAAqBrD,GACjC,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,WAKD,SAASsD,EAAuBtD,GACnC,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,aAKD,SAASuD,EAAWvD,GACvB,OACIC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,SAKD,SAASwD,GAAkBxD,GAC9B,OACIC,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,iCAAoCL,GAAQA,EAAMyD,UAInF,SAASC,GAAc1D,GAC1B,OACIC,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAQA,EAAMyD,cC3C1DE,eAlCX,SAAAA,EAAY3D,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAH,IACfC,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAqD,GAAAM,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgD,MAAON,EAAK5D,MAAMkE,MAClB1C,MAAOoC,EAAK5D,MAAMwB,MAClB2C,OAAQ,IAGXP,EAAKO,OAASP,EAAKO,OAAOC,KAAZ9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IATAA,wEAcf3C,EAAmB6C,KAAK5C,MAAMM,OAC7B8C,KAAKR,KAAKS,SAAS,CAChBJ,OAAQ,2CAKhB,OACIlE,EAAAC,EAAAC,cAAA,OAAKM,GAAG,SAASJ,UAAU,6CACvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,mCACsB,SAArB2D,KAAK5C,MAAMgD,MAAmBjE,EAAAC,EAAAC,cAACgD,EAAD,CAAcqB,QAASV,KAAKK,QAA5B,KAAuDlE,EAAAC,EAAAC,cAAA,YAC/D,SAAtB2D,KAAK5C,MAAMiD,OAAoBlE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUC,GAAG,MAASzE,EAAAC,EAAAC,cAAA,sBA5BjDwE,mBCKNC,OARf,SAAgB5E,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,wCCHL,SAAS0E,GAAU7E,GACtB,OACIC,EAAAC,EAAAC,cAAA,MAAAG,OAAAC,OAAA,CAAKF,UAAU,aAAgBL,GAC9BA,EAAMyD,UCWAqB,OAXf,SAAiB9E,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,WACHR,EAAAC,EAAAC,cAAC4E,GAAD,CAAQb,MAAOlE,EAAMkE,MAAO1C,MAAOxB,EAAMwB,QAC1CvB,EAAAC,EAAAC,cAAC0E,GAAD,CAAWpE,GAAG,YACTT,EAAMyD,UAEHxD,EAAAC,EAAAC,cAAC6E,GAAD,QC6GLC,eA/GX,SAAAA,EAAYjF,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAmB,IACfrB,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA2E,GAAAhB,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgE,WAAW,EACX1D,MAAO,GACP2D,YAAa,GACbC,eAAgB,GAChBC,eAAgB,IAGpBzB,EAAK0B,kBAAoB1B,EAAK0B,kBAAkBlB,KAAvB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACzBA,EAAK2B,SAAW3B,EAAK2B,SAASnB,KAAd9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IAZDA,iFAiBD4B,GAAO,IAAAC,EACGD,EAAME,OAAtB/E,EADa8E,EACb9E,KAAMgF,EADOF,EACPE,MACd7B,KAAKS,SAALjE,OAAAsF,EAAA,EAAAtF,CAAA,GACKK,EAAOgF,uCAIL,IAAAE,EAAA/B,KACP7C,EAAmB6C,KAAK5C,OACnBoD,KAAK,SAAAwB,GACF,IAAMC,EAAOD,EAAIC,KACjBpG,QAAQqG,IAAI,yBAA2B1G,KAAKQ,UAAUiG,IAClDA,EAAKE,UACLxG,EAAa,mBAAoB,CAC7B+B,MAAOuE,EAAKvE,MACZG,OAAQoE,EAAKpE,SAEjBkE,EAAK7F,MAAMkG,QAAQC,KAAK,uBAKpCxG,QAAQqG,IAAI,uDAGI,IAAAI,EAAAtC,KACVpE,EAAMT,EAAe,oBAG3B,GAFAU,QAAQqG,IAAI,+BAAiCtG,GAEzCA,GAAOA,EAAI8B,MAAO,KACVA,EAAU9B,EAAV8B,MACR7B,QAAQqG,IAAI,mBAAqBxE,GACjCP,EAAoBO,GACf8C,KAAK,SAAAwB,GACFnG,QAAQqG,IAAI,4BAA8BF,GAC1C,IAAMC,EAAOD,EAAIC,KACjBpG,QAAQqG,IAAI,gBAAkB1G,KAAKQ,UAAUiG,IACzCA,EAAKE,QACLG,EAAK7B,SAAS,CACV/C,MAAOA,EACP0D,WAAW,IAIfkB,EAAK7B,SAAS,CACVW,WAAW,WAO3BpB,KAAKS,SAAS,CACVW,WAAW,qCAKd,IAAAmB,EAIDvC,KAAK5C,MAFLgE,EAFCmB,EAEDnB,UACA1D,EAHC6E,EAGD7E,MAGJ,OAAI0D,EAEIjF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAIRqB,EAkBDvB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUC,GAAG,qBAhBTzE,EAAAC,EAAAC,cAACmG,GAAD,CAASpC,MAAM,QAAQ1C,MAAM,IACzBvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACJ,EAAD,CAAUwG,SAAUzC,KAAKwB,oBACzBrF,EAAAC,EAAAC,cAACU,EAAD,CAAU0F,SAAUzC,KAAKwB,oBACzBrF,EAAAC,EAAAC,cAACqG,EAAD,CAAchC,QAASV,KAAKyB,WAC5BtF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,KAAGsG,KAAK,WAAR,0BAlGR9B,aCAL+B,OARf,SAAsB1G,GACtB,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,aC4Ee2G,eAzEX,SAAAA,EAAY3G,GAAO,IAAA4D,EAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA6C,IACf/C,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAqG,GAAA1C,KAAAH,KAAM9D,KACDkB,MAAQ,CACT0F,YAAa,GACbvF,SAAU,GACVC,MAAO,GACPC,SAAU,GACVsF,gBAAiB,IAPN,IAAAR,EAiBXzC,EAAK1C,MAjBMmF,EAYXO,YAZWP,EAaXS,eAbWT,EAcXzF,MAdWyF,EAeXU,eAfWV,EAgBXW,sBAhBW,OAoBfpD,EAAK0B,kBAAoB1B,EAAK0B,kBAAkBlB,KAAvB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACzBA,EAAKqD,SAAWrD,EAAKqD,SAAS7C,KAAd9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IArBDA,iFAyBD4B,GAAO,IAAAC,EACGD,EAAME,OAAtB/E,EADa8E,EACb9E,KAAMgF,EADOF,EACPE,MACd7B,KAAKS,SAALjE,OAAAsF,EAAA,EAAAtF,CAAA,GACKK,EAAOgF,uCAIL,IAAAE,EAAA/B,KACPnE,QAAQqG,IAAI,mBACZ/E,EAAmB6C,KAAK5C,OACnBoD,KAAK,SAAAwB,GACF,IAAMC,EAAOD,EAAIC,KACjBpG,QAAQqG,IAAI,mBAAqB1G,KAAKQ,UAAUiG,IAC5CA,EAAKE,UACLtG,QAAQqG,IAAI,UACZH,EAAK7F,MAAMkG,QAAQC,KAAK,yCAQpC,OACIlG,EAAAC,EAAAC,cAACmG,GAAD,CAASpC,MAAM,QAAQ1C,MAAM,IACzBvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACJ,EAAD,CAAUwG,SAAUzC,KAAKwB,oBACzBrF,EAAAC,EAAAC,cAAC+G,EAAD,CAAOX,SAAUzC,KAAKwB,oBACtBrF,EAAAC,EAAAC,cAACU,EAAD,CAAU0F,SAAUzC,KAAKwB,oBACzBrF,EAAAC,EAAAC,cAACW,EAAD,CAAiByF,SAAUzC,KAAKwB,oBAChCrF,EAAAC,EAAAC,cAACgH,GAAD,CAAc3C,QAASV,KAAKmD,aAIpChH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,KAAGsG,KAAK,KAAR,wBAhEH9B,aCGNyC,OARf,SAA+BpH,GAC/B,OACAC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAAG,OAAAC,OAAA,CAAQC,KAAK,SAASH,UAAU,gBAAmBL,GAAnD,+BCAaqH,GAAb,SAAAC,GACI,SAAAD,EAAYrH,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAuD,IACfzD,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA+G,GAAApD,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTqG,YAAavH,EAAMyD,SAAS8D,YAC5BC,aAAcxH,EAAMyD,SAAS+D,cALlB5D,EADvB,OAAAtD,OAAAmH,EAAA,EAAAnH,CAAA+G,EAAAC,GAAAhH,OAAAoH,EAAA,EAAApH,CAAA+G,EAAA,EAAAnI,IAAA,SAAAyG,MAAA,WAaa,IAAAE,EAAA/B,KACD6D,EAAO7D,KAAK9D,MAAM2H,KACtB,OACI1H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eAAO2D,KAAK5C,MAAMqG,YAAYxF,MAAM,GAAG6F,YAAY,GAAnD,MAA0D9D,KAAK5C,MAAMqG,YAAYxF,MAAM,GAAG6F,YAAY,GAAtG,MAA6G9D,KAAK5C,MAAMqG,YAAYxF,MAAM,GAAG6F,YAAY,IACzJ3H,EAAAC,EAAAC,cAAA,UAAK2D,KAAK5C,MAAMqG,YAAYvF,mBAAmB4F,YAAY,IAC3D3H,EAAAC,EAAAC,cAAA,UAAK0H,aAAS/D,KAAK5C,MAAMqG,YAAYxF,MAAO+B,KAAK5C,MAAMsG,cAAcI,YAAY,IACjF3H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACiD,EAAD,CAAmBuC,MAAO7B,KAAK5C,MAAMqG,YAAYO,IACjDtD,QAAS,kBAAMmD,EAAuE,OAAlEE,aAAShC,EAAK3E,MAAMqG,YAAYxF,MAAO8D,EAAK3E,MAAMsG,cAA+B,MAAO3B,EAAK3E,MAAMqG,YAAYO,cArBvJT,EAAA,CAA2C1C,aA8B9BoD,GAAb,SAAAC,GACI,SAAAD,EAAY/H,GAAO,IAAAoG,EAAA,OAAA9F,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAiE,IACf3B,EAAA9F,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAyH,GAAA9D,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT+G,OAAQjI,EAAMyD,SAASwE,OACvBC,sBAAuBlI,EAAMyD,SAAS0E,cAAcC,UALzChC,EADvB,OAAA9F,OAAAmH,EAAA,EAAAnH,CAAAyH,EAAAC,GAAA1H,OAAAoH,EAAA,EAAApH,CAAAyH,EAAA,EAAA7I,IAAA,SAAAyG,MAAA,WAWa,IAAA0C,EAAAvE,KACDwE,EAASxE,KAAK9D,MAAMsI,OACxB,OACIrI,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,eAAO2D,KAAK5C,MAAM+G,OAAOG,SAAS,GAAGR,YAAY,GAAjD,MAAwD9D,KAAK5C,MAAM+G,OAAOG,SAAS,GAAGR,YAAY,IAClG3H,EAAAC,EAAAC,cAAA,UAAK2D,KAAK5C,MAAM+G,OAAOM,iBAAiBX,YAAY,IACpD3H,EAAAC,EAAAC,cAAA,UAAK0H,aAAS/D,KAAK5C,MAAM+G,OAAOG,SAAUtE,KAAK5C,MAAMgH,uBAAuBN,YAAY,IACxF3H,EAAAC,EAAAC,cAAA,UAAK2D,KAAK5C,MAAM+G,OAAOO,YACvBvI,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACkD,EAAD,CAAsBsC,MAAO7B,KAAK5C,MAAM+G,OAAOH,IAAKtD,QAAS,kBAAM8D,EAAgF,OAAzET,aAASQ,EAAKnH,MAAM+G,OAAOG,SAAUC,EAAKnH,MAAMgH,uBAAuCG,EAAKnH,MAAM+G,OAAOH,cAnBvMC,EAAA,CAAqCpD,aAyBxB8D,GAAb,SAAAC,GACI,SAAAD,EAAYzI,GAAO,IAAA2I,EAAA,OAAArI,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA2E,IACfE,EAAArI,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAmI,GAAAxE,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT0H,SAAU5I,EAAMyD,SAASmF,UAJdD,EADvB,OAAArI,OAAAmH,EAAA,EAAAnH,CAAAmI,EAAAC,GAAApI,OAAAoH,EAAA,EAAApH,CAAAmI,EAAA,EAAAvJ,IAAA,SAAAyG,MAAA,WAUa,IAAAkD,EAAA/E,KACDgF,EAAUhF,KAAK9D,MAAM8I,QACzB,OACI7I,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAK2D,KAAK5C,MAAM0H,SAASG,WACzB9I,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACmD,EAAD,CAAwBkB,QAAS,WAAMsE,EAAQD,EAAK3H,MAAM0H,mBAf9EH,EAAA,CAAiC9D,aAqBpBqE,GAAb,SAAAC,GACI,SAAAD,EAAYhJ,GAAO,IAAAkJ,EAAA,OAAA5I,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAkF,IACfE,EAAA5I,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA0I,GAAA/E,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTiI,QAASnJ,EAAMyD,SAAS0F,SAJbD,EADvB,OAAA5I,OAAAmH,EAAA,EAAAnH,CAAA0I,EAAAC,GAAA3I,OAAAoH,EAAA,EAAApH,CAAA0I,EAAA,EAAA9J,IAAA,SAAAyG,MAAA,WAUa,IACGwD,EAAYrF,KAAK5C,MAAjBiI,QACR,OACIlJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKgJ,EAAQC,aACbnJ,EAAAC,EAAAC,cAAA,UAAKgJ,EAAQE,kBACbpJ,EAAAC,EAAAC,cAAA,UAAKgJ,EAAQG,QACbrJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACoD,EAAD,YAjBpByF,EAAA,CAAgCrE,aAuBnB4E,GAAb,SAAAC,GACI,SAAAD,EAAYvJ,GAAO,IAAAyJ,EAAA,OAAAnJ,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAyF,IACfE,EAAAnJ,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAiJ,GAAAtF,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTwI,KAAM1J,EAAMyD,SAASiG,MAJVD,EADvB,OAAAnJ,OAAAmH,EAAA,EAAAnH,CAAAiJ,EAAAC,GAAAlJ,OAAAoH,EAAA,EAAApH,CAAAiJ,EAAA,EAAArK,IAAA,SAAAyG,MAAA,WAUa,IACG+D,EAAS5F,KAAK5C,MAAdwI,KACR,OACIzJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKuJ,EAAK/I,MACVV,EAAAC,EAAAC,cAAA,UAAKuJ,EAAK9G,SACV3C,EAAAC,EAAAC,cAAA,UAAKuJ,EAAKC,QACV1J,EAAAC,EAAAC,cAAA,UAAKuJ,EAAK/D,OACV1F,EAAAC,EAAAC,cAAA,UAAKb,KAAKQ,UAAU4J,EAAKE,WACzB3J,EAAAC,EAAAC,cAAA,UAAKuJ,EAAK/G,UACV1C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuD,GAAD,uBApBpB6F,EAAA,CAA6B5E,aA0BhBkF,GAAb,SAAAC,GACI,SAAAD,EAAY7J,GAAO,IAAA+J,EAAA,OAAAzJ,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA+F,IACfE,EAAAzJ,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAuJ,GAAA5F,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT8I,UAAWhK,EAAMyD,SAASuG,UAC1BC,SAAU,GACVjI,mBAAoB,GACpBkD,WAAW,GAPA6E,EADvB,OAAAzJ,OAAAmH,EAAA,EAAAnH,CAAAuJ,EAAAC,GAAAxJ,OAAAoH,EAAA,EAAApH,CAAAuJ,EAAA,EAAA3K,IAAA,oBAAAyG,MAAA,WAcwB,IAAAuE,EAAApG,KAChB7C,EAAqB6C,KAAK5C,MAAM8I,UAAUlC,KAAKxD,KAAK,SAAA6F,GAChD,IAAMC,EAAgBD,EAAapE,KAC/BqE,EAAcnE,SACdiE,EAAK3F,SAAS,CACVvC,mBAAoBoI,EAAcJ,UAAUK,UAAUrI,mBACtDiI,SAAUG,EAAcJ,UAAUM,SAASL,SAC3C/E,WAAW,QArB/B,CAAAhG,IAAA,SAAAyG,MAAA,WA4BQ,GAAG7B,KAAK5C,MAAMgE,UACV,OACIjF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBARH,IAAAkG,EAY+CvC,KAAK5C,MAAjD8I,EAZH3D,EAYG2D,UAAWhI,EAZdqE,EAYcrE,mBAAoBiI,EAZlC5D,EAYkC4D,SACnCM,EAAOzG,KAAK9D,MAAMuK,KACtB,OACItK,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAK6J,EAAUpI,eACf3B,EAAAC,EAAAC,cAAA,eAAO6J,EAAUQ,UACjBvK,EAAAC,EAAAC,cAAA,UAAK8J,GACLhK,EAAAC,EAAAC,cAAA,UAAK6B,EAAmB4F,YAAY,GAApC,OACA3H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACuD,GAAD,CAAec,QAAS,SAACgB,GAAD,OAAW+E,EAAK/E,IAAQG,MAAOqE,EAAUlC,KAAjE,mBA/CpB+B,EAAA,CAA2ClF,aC9H9B8F,GAAb,SAAAnD,GACI,SAAAmD,EAAYzK,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA2G,IACf7G,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAmK,GAAAxG,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTwJ,aAAc1K,EAAMyD,SAASkH,YAC7BnD,aAAcxH,EAAMyD,SAASmH,yBALlBhH,EADvB,OAAAtD,OAAAmH,EAAA,EAAAnH,CAAAmK,EAAAnD,GAAAhH,OAAAoH,EAAA,EAAApH,CAAAmK,EAAA,EAAAvL,IAAA,SAAAyG,MAAA,WAcY,IACC6B,EAAgB1D,KAAK5C,MAArBsG,aACDG,EAAO7D,KAAK9D,MAAM2H,KAClBkD,EAAkB/G,KAAK5C,MAAMwJ,aAAaI,IAAI,SAASvD,GACvD,OAAOtH,EAAAC,EAAAC,cAAC4K,GAAD,CAAuBpD,KAAMA,GAC/B,CACGJ,YAAeA,EACfC,aAAgBA,MAK5B,OACJvH,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,eACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,yBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,sCACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,UAGJ/K,EAAAC,EAAAC,cAAA,aACK0K,QArCXJ,EAAA,CAA6C9F,aA4ChCsG,GAAb,SAAAjD,GACI,SAAAiD,EAAYjL,GAAO,IAAA6F,EAAA,OAAAvF,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAmH,IACfpF,EAAAvF,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA2K,GAAAhH,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgK,oBAAqBlL,EAAMyD,SAASkH,YACpCxC,cAAenI,EAAMyD,SAAS0E,eALnBtC,EADvB,OAAAvF,OAAAmH,EAAA,EAAAnH,CAAA2K,EAAAjD,GAAA1H,OAAAoH,EAAA,EAAApH,CAAA2K,EAAA,EAAA/L,IAAA,SAAAyG,MAAA,WAaY,IACCwC,EAAiBrE,KAAK5C,MAAtBiH,cACDG,EAASxE,KAAK9D,MAAMsI,OACpB6C,EAAarH,KAAK5C,MAAMgK,oBAAoBE,QAAQN,IAAI,SAAS7C,GACjE,OAAOhI,EAAAC,EAAAC,cAACkL,GAAD,CAAiB/C,OAAQA,GAC3B,CACGL,OAAUA,EACVE,cAAiBA,MAI7B,OACRlI,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,eACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,uBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,gCACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,eACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,YAGJ/K,EAAAC,EAAAC,cAAA,aACKgL,QApCXF,EAAA,CAAwCtG,aA4C3B2G,GAAb,SAAA5C,GACI,SAAA4C,EAAYtL,GAAO,IAAAoG,EAAA,OAAA9F,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAwH,IACflF,EAAA9F,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAgL,GAAArH,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTqK,UAAWvL,EAAMyD,SAAS8H,UAC1BC,eAAgBxL,EAAMyD,SAAS+H,gBALpBpF,EADvB,OAAA9F,OAAAmH,EAAA,EAAAnH,CAAAgL,EAAA5C,GAAApI,OAAAoH,EAAA,EAAApH,CAAAgL,EAAA,EAAApM,IAAA,SAAAyG,MAAA,WAcQ,IAAImD,EAAUhF,KAAK9D,MAAM8I,QADrBzC,EAE8BvC,KAAK5C,MAAlCqK,EAFDlF,EAECkF,UAAWC,EAFZnF,EAEYmF,eACZC,EAAeF,EAAUT,IAAI,SAASlC,GACtC,GAAI8C,KAAKC,KAAKD,KAAKE,UAAYJ,EAAkB5C,EAASiD,OACtD,OAAS5L,EAAAC,EAAAC,cAAC2L,GAAD,CAAahD,QAASA,GAC1B,CACGF,SAAYA,MAO5B,OACR3I,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,aACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,cAGJ/K,EAAAC,EAAAC,cAAA,aACKsL,QApCXH,EAAA,CAAoC3G,aA4CvBoH,GAAb,SAAA9C,GACI,SAAA8C,EAAY/L,GAAO,IAAAqI,EAAA,OAAA/H,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAiI,IACf1D,EAAA/H,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAyL,GAAA9H,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT8K,SAAUhM,EAAMyD,SAASuI,UAJd3D,EADvB,OAAA/H,OAAAmH,EAAA,EAAAnH,CAAAyL,EAAA9C,GAAA3I,OAAAoH,EAAA,EAAApH,CAAAyL,EAAA,EAAA7M,IAAA,SAAAyG,MAAA,WAYY,IAEAsG,EADanI,KAAK5C,MAAjB8K,SACsBlB,IAAI,SAAS3B,GACpC,OAAOlJ,EAAAC,EAAAC,cAAC+L,GAAD,KACF,CACG/C,QAAWA,MAIvB,OACRlJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,gBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,wBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,kBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,UAGJ/K,EAAAC,EAAAC,cAAA,aACK8L,QAhCXF,EAAA,CAAmCpH,aAwCtBwH,GAAb,SAAA3C,GACI,SAAA2C,EAAYnM,GAAO,IAAA2I,EAAA,OAAArI,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAqI,IACfxD,EAAArI,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA6L,GAAAlI,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTkL,UAAWpM,EAAMyD,SAAS2I,WAJfzD,EADvB,OAAArI,OAAAmH,EAAA,EAAAnH,CAAA6L,EAAA3C,GAAAlJ,OAAAoH,EAAA,EAAApH,CAAA6L,EAAA,EAAAjN,IAAA,SAAAyG,MAAA,WAYY,IAEA0G,EADcvI,KAAK5C,MAAlBkL,UACwBE,MAAMxB,IAAI,SAASpB,GAC5C,OAAOzJ,EAAAC,EAAAC,cAACoM,GAAD,KACF,CACG7C,KAAQA,MAIpB,OACRzJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,QACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,aACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,eACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,cACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,cACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,YACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,aAGJ/K,EAAAC,EAAAC,cAAA,aACKkM,QAnCXF,EAAA,CAAoCxH,aA2CvB6H,GAAb,SAAA1C,GACI,SAAA0C,EAAYxM,GAAO,IAAA6I,EAAA,OAAAvI,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA0I,IACf3D,EAAAvI,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAkM,GAAAvI,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTuL,WAAYzM,EAAMyD,SAASgJ,YAJhB5D,EADvB,OAAAvI,OAAAmH,EAAA,EAAAnH,CAAAkM,EAAA1C,GAAAxJ,OAAAoH,EAAA,EAAApH,CAAAkM,EAAA,EAAAtN,IAAA,SAAAyG,MAAA,WAYY,IACC8G,EAAc3I,KAAK5C,MAAnBuL,WACDlC,EAAOzG,KAAK9D,MAAMuK,KAClBmC,EAAeD,EAAW3B,IAAI,SAASd,GACvC,OAAO/J,EAAAC,EAAAC,cAACwM,GAAD,CAAuBpC,KAAMA,GAC/B,CACGP,UAAaA,MAIzB,OACR/J,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCACXJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,kBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,YACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,QACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,wBACA/K,EAAAC,EAAAC,cAAA,MAAI6K,MAAM,OAAV,eAGJ/K,EAAAC,EAAAC,cAAA,aACKuM,QAlCXF,EAAA,CAA6C7H,aCvF9BiI,eAzHX,SAAAA,EAAY5M,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA8I,IACfhJ,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAsM,GAAA3I,KAAAH,KAAM9D,KACDkB,MAAQ,CACTgE,WAAW,EACX1D,MAAO,GACPG,OAAQ,GACRC,cAAe,GACf6K,WAAY,IAGhB7I,EAAK0B,kBAAoB1B,EAAK0B,kBAAkBlB,KAAvB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACzBA,EAAKiJ,gBAAkBjJ,EAAKiJ,gBAAgBzI,KAArB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACvBA,EAAK2G,KAAO3G,EAAK2G,KAAKnG,KAAV9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IAZGA,iFAgBD4B,GAAO,IAAAC,EACGD,EAAME,OAAtB/E,EADa8E,EACb9E,KAAMgF,EADOF,EACPE,MACd7B,KAAKS,SAALjE,OAAAsF,EAAA,EAAAtF,CAAA,GACKK,EAAOgF,8CAKZ1E,EAAwB6C,KAAK5C,OACxBoD,KAAKwI,OAAOC,SAASC,uCAGzBxH,GACD,IAAM9F,EAAMT,EAAe,oBACnBuC,EAAkB9B,EAAlB8B,MAAOG,EAAWjC,EAAXiC,OACTE,EAAc2D,EAAME,OAAOC,MACjChG,QAAQqG,IAAI,4BAA8BR,EAAME,QAChD/F,QAAQqG,IAAI,+CAAiDnE,GAC7DpC,EAAa,mBAAoB,CAC7B+B,MAAOA,EACPG,OAAQA,EACRqI,UAAWnI,IAEfiC,KAAK9D,MAAMkG,QAAQC,KAAK,qDAGR,IAAAN,EAAA/B,KACVpE,EAAMT,EAAe,oBAC3B,GAAIS,GAAOA,EAAI8B,OAAS9B,EAAIiC,OAAQ,KACxBH,EAAkB9B,EAAlB8B,MAAOG,EAAWjC,EAAXiC,OACfV,EAAoBO,GACf8C,KAAK,SAAAwB,GACWA,EAAIC,KACRE,SACLJ,EAAKtB,SAAS,CACV/C,MAAOA,EACPG,OAAQA,EACRuD,WAAW,IAEfjE,EAAgBU,GACX2C,KAAK,SAAA2I,GACF,IACMR,EADWQ,EAAKlH,KACMmH,QAAQT,WACV,IAAtBA,EAAWU,QACXtH,EAAKtB,SAAS,CACVkI,WAAYA,OAM5B5G,EAAKtB,SAAS,CACVW,WAAW,WAO3BpB,KAAKS,SAAS,CACVW,WAAW,qCAKd,IAAAmB,EAKDvC,KAAK5C,MAHLgE,EAFCmB,EAEDnB,UACA1D,EAHC6E,EAGD7E,MACAG,EAJC0E,EAID1E,OAGJ,OAAIuD,EAEIjF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAIRqB,GAAUG,EAOX1B,EAAAC,EAAAC,cAACmG,GAAD,CAASpC,MAAM,OAAO1C,MAAOsC,KAAK5C,MAAMM,OACpCvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACY,EAAD,CAAewF,SAAUzC,KAAKwB,oBAC9BrF,EAAAC,EAAAC,cAACiN,GAAD,CAAuB5I,QAASV,KAAK+I,kBACnC/I,KAAK5C,MAAMuL,WAAYxM,EAAAC,EAAAC,cAACkN,GAAD,CAAyB9C,KAAMzG,KAAKyG,MACxD,CACGkC,WAAY3I,KAAK5C,MAAMuL,aAG7BxM,EAAAC,EAAAC,cAAA,eAfVF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUC,GAAG,aAjGCC,mBCLvB,SAAS2I,GAA4BtN,GACxC,OACAC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,uBAAuBJ,UAAU,wBACrCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,iCAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,kBAAUH,EAAMW,OAEpBV,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,uBAAeH,EAAMwK,aAM1B,IAAM+C,GAAb,SAAAjG,GACI,SAAAiG,EAAYvN,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAyJ,IACf3J,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAiN,GAAAtJ,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTqG,YAAavH,EAAMyD,SAAS8D,YAC5BiG,KAAM,GACNC,WAAW,GANA7J,EADvB,OAAAtD,OAAAmH,EAAA,EAAAnH,CAAAiN,EAAAjG,GAAAhH,OAAAoH,EAAA,EAAApH,CAAAiN,EAAA,EAAArO,IAAA,oBAAAyG,MAAA,WAauB,IAAAE,EAAA/B,KACf7C,EAAgB6C,KAAK5C,MAAMqG,YAAYiG,MACtClJ,KAAK,SAAAwB,GACD,IAAMC,EAAOD,EAAIC,KACVA,EAAKE,SACLJ,EAAKtB,SAAS,CACViJ,KAAMzH,EAAKyH,KACXC,WAAW,QApBnC,CAAAvO,IAAA,SAAAyG,MAAA,WA4BQ,GAAG7B,KAAK5C,MAAMuM,UACV,OAAOxN,EAAAC,EAAAC,cAAA,yBAHP,IAAAkG,EAKwBvC,KAAK5C,MAA1BqG,EALHlB,EAKGkB,YAAaiG,EALhBnH,EAKgBmH,KACpB,OACAvN,EAAAC,EAAAC,cAAA,OAAKM,GAAG,wBAAwBJ,UAAU,wBACtCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,oCAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,kCAA0BoH,EAAYvF,mBAAmB4F,YAAY,GAArE,QAEJ3H,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,mCAA2BoH,EAAYxF,MAAM,GAAG6F,YAAY,GAA5D,OAAoEL,EAAYxF,MAAM,GAAG6F,YAAY,GAArG,OAA6GL,EAAYxF,MAAM,GAAG6F,YAAY,GAA9I,WAGR3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,4BAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,uBAAeqN,EAAKE,WAExBzN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,2BAAmBqN,EAAKG,eAE5B1N,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,wBAAgBqN,EAAKI,WAAWhG,YAAY,MAGpD3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,kBAAUqN,EAAKK,KAAKjG,YAAY,KAEpC3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,yBAAiBqN,EAAKM,KAAKlG,YAAY,WApE3D2F,EAAA,CAAmD5I,aA4EtCoJ,GAAb,SAAA/F,GACI,SAAA+F,EAAY/N,GAAO,IAAAoG,EAAA,OAAA9F,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAiK,IACf3H,EAAA9F,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAyN,GAAA9J,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT+G,OAAQjI,EAAMyD,SAASwE,QAJZ7B,EADvB,OAAA9F,OAAAmH,EAAA,EAAAnH,CAAAyN,EAAA/F,GAAA1H,OAAAoH,EAAA,EAAApH,CAAAyN,EAAA,EAAA7O,IAAA,SAAAyG,MAAA,WAYY,IACGsC,EAAUnE,KAAK5C,MAAf+G,OACP,OACAhI,EAAAC,EAAAC,cAAA,OAAKM,GAAG,wBAAwBJ,UAAU,wBACtCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,8BAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,yBAAiB8H,EAAOO,aAE5BvI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,yBAAiB8H,EAAO+F,WAAWpG,YAAY,MAGvD3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,gCAAwB8H,EAAOM,iBAAiBX,YAAY,KAEhE3H,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,oCAA4B8H,EAAOG,SAAS,GAAGR,YAAY,GAA3D,MAAkEK,EAAOG,SAAS,GAAGR,YAAY,GAAjG,aAlCpBmG,EAAA,CAA8CpJ,aA0CjCsJ,GAAb,SAAAvF,GACI,SAAAuF,EAAYjO,GAAO,IAAAqI,EAAA,OAAA/H,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAmK,IACf5F,EAAA/H,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA2N,GAAAhK,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgN,KAAMlO,EAAMyD,SAASyK,KACrB9B,UAAW,GACXqB,WAAW,GANApF,EADvB,OAAA/H,OAAAmH,EAAA,EAAAnH,CAAA2N,EAAAvF,GAAApI,OAAAoH,EAAA,EAAApH,CAAA2N,EAAA,EAAA/O,IAAA,oBAAAyG,MAAA,WAauB,IAAAgD,EAAA7E,KACf7C,EAAqB6C,KAAK5C,MAAMgN,KAAK9B,WACpC9H,KAAK,SAAAwB,GACD,IAAMC,EAAOD,EAAIC,KACVA,EAAKE,QACL0C,EAAKpE,SAAS,CACV6H,UAAWrG,EAAKqG,UAChBqB,WAAW,IAGd9N,QAAQqG,IAAI,qCAvBjC,CAAA9G,IAAA,SAAAyG,MAAA,WA4BQ,GAAG7B,KAAK5C,MAAMuM,UACV,OAAOxN,EAAAC,EAAAC,cAAA,sBAFP,IAIGiM,EAAatI,KAAK5C,MAAlBkL,UACP,OACInM,EAAAC,EAAAC,cAACgO,GAAD,KACK,CACG/B,UAAWA,QAnC/B6B,EAAA,CAAiDtJ,aA0CpCyJ,GAAb,SAAAnF,GACI,SAAAmF,EAAYpO,GAAO,IAAA6I,EAAA,OAAAvI,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAsK,IACfvF,EAAAvI,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAA8N,GAAAnK,KAAAH,KAAM9D,KAEDkB,MAAQ,CACT+G,OAAQjI,EAAMyD,SAASkH,YACvBa,eAAgBxL,EAAMyD,SAAS+H,gBALpB3C,EADvB,OAAAvI,OAAAmH,EAAA,EAAAnH,CAAA8N,EAAAnF,GAAA3I,OAAAoH,EAAA,EAAApH,CAAA8N,EAAA,EAAAlP,IAAA,SAAAyG,MAAA,WAcY,IAAA0I,EAC6BvK,KAAK5C,MAA/B+G,EADHoG,EACGpG,OAAQuD,EADX6C,EACW7C,eACX1C,EAAUhF,KAAK9D,MAAM8I,QAC1B,OACA7I,EAAAC,EAAAC,cAAA,WACE8H,EAAOsD,UAAU4B,OAAS,EAC3BlN,EAAAC,EAAAC,cAACmO,GAAD,CAAgBxF,QAASA,GACpB,CACGyC,UAAWtD,EAAOsD,UAClBC,eAAgBA,IAGxBvL,EAAAC,EAAAC,cAAA,2DACC8H,EAAO+D,SAASmB,OAAS,EAC1BlN,EAAAC,EAAAC,cAACoO,GAAD,KACK,CACGvC,SAAU/D,EAAO+D,WAIzB/L,EAAAC,EAAAC,cAAA,uEAlCRiO,EAAA,CAA0CzJ,aAyCjC6J,GAAb,SAAAhF,GACI,SAAAgF,EAAYxO,GAAO,IAAAkJ,EAAA,OAAA5I,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA0K,IACftF,EAAA5I,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAkO,GAAAvK,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgN,KAAMlO,EAAMyD,SAASyK,MAJVhF,EADvB,OAAA5I,OAAAmH,EAAA,EAAAnH,CAAAkO,EAAAhF,GAAAlJ,OAAAoH,EAAA,EAAApH,CAAAkO,EAAA,EAAAtP,IAAA,SAAAyG,MAAA,WAaY,IACGuI,EAAQpK,KAAK5C,MAAbgN,KACR,OACCjO,EAAAC,EAAAC,cAAA,OAAKM,GAAG,kBAAkBJ,UAAU,wBACpCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,4BAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,kBAAU+N,EAAKjE,WAEnBhK,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,kBAAU+N,EAAKO,OAEnBxO,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,mBAAW+N,EAAKQ,aAGxBzO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,wBAAgB+N,EAAKnF,YAEzB9I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,0BAAkB+N,EAAKS,aAAvB,SAEJ1O,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,8BAAsB+N,EAAKU,kBAGnC3O,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,wBAAgB+N,EAAKpM,UAArB,QAEJ7B,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,6BAAqB+N,EAAK1C,kBAGhC0C,EAAKW,aAAe,EACtB5O,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,2BAAmB+N,EAAKW,aAAxB,MAEJ5O,EAAAC,EAAAC,cAAA,OAAKE,UAAY,YACbJ,EAAAC,EAAAC,cAAA,0BAAkB+N,EAAKY,iBAAvB,eAIR7O,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,kDAhEhBqO,EAAA,CAA4C7J,aCtL7BoK,eAxCX,SAAAA,EAAY/O,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAiL,IACjBnL,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAyO,GAAA9K,KAAAH,KAAM9D,KACDkB,MAAQ,CACT8N,QAASpL,EAAK5D,MAAMgP,SAHPpL,sEAQjBE,KAAKS,SAAS,SAAA0K,GAAS,MAAK,CAC1BD,QAASC,EAAUD,QAAU,KAG5BlL,KAAK5C,MAAM8N,SAAW,GACrBlL,KAAK9D,MAAMkP,uDAIG,IAAArJ,EAAA/B,KAClBA,KAAKqL,SAAWC,YAAY,kBAAMvJ,EAAKwJ,QAAQ,oDAI/CC,cAAcxL,KAAKqL,2CAGZ,IACAH,EAAWlL,KAAK5C,MAAhB8N,QACHO,GAAkBP,EAAU,IAAIQ,WAC9BC,EAAiB/D,KAAKgE,MAAMV,EAAU,IAAIQ,WAIhD,OAHGR,EAAU,GAAK,KAChBO,EAAiB,IAAMA,GAGvBtP,EAAAC,EAAAC,cAAA,qCAC0BsP,EAAiB,IAAMF,UAnCrC5K,mBCQLgL,ICoiBAC,eAhiBX,SAAAA,EAAY5P,GAAO,IAAA4D,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAA8L,IACfhM,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAsP,GAAA3L,KAAAH,KAAM9D,KAEDkB,MAAQ,CACTgE,WAAW,EACX1D,MAAO,GACPwI,UAAW,GACXpI,cAAe,GACfiO,kBAAmB,GACnBtI,YAAa,GACbuI,8BAA+B,GAC/BC,iBAAkB,GAClB9N,cAAe,GACfgG,OAAQ,GACR+H,YAAa,GACb9N,SAAU,GACVgM,KAAM,GACNS,aAAc,GACd7M,UAAW,GACX0J,eAAgB,GAChBoD,eAAgB,GAChBqB,qBAAsB,GACtB/E,oBAAqB,GACrBgF,sBAAuB,GACvBC,OAAQ,GACRhO,WAAY,GACZiO,qBAAsB,GACtB/N,YAAa,GACbgO,YAAa,GACbjE,UAAW,IAIfxI,EAAK0B,kBAAoB1B,EAAK0B,kBAAkBlB,KAAvB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACzBA,EAAK0M,cAAgB1M,EAAK0M,cAAclM,KAAnB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACrBA,EAAK2M,aAAe3M,EAAK2M,aAAanM,KAAlB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACpBA,EAAK4M,eAAiB5M,EAAK4M,eAAepM,KAApB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACtBA,EAAK6M,OAAS7M,EAAK6M,OAAOrM,KAAZ9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACdA,EAAK8M,SAAW9M,EAAK8M,SAAStM,KAAd9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IAChBA,EAAK+M,uBAAyB/M,EAAK+M,uBAAuBvM,KAA5B9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IAC9BA,EAAKgN,gBAAkBhN,EAAKgN,gBAAgBxM,KAArB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACvBA,EAAKiN,cAAgBjN,EAAKiN,cAAczM,KAAnB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACrBA,EAAKkN,eAAiBlN,EAAKkN,eAAe1M,KAApB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IACtBA,EAAKmN,gBAAkBnN,EAAKmN,gBAAgB3M,KAArB9D,OAAA+D,EAAA,EAAA/D,CAAAsD,IA3CRA,iFAgDD4B,GAAO,IAAAC,EACGD,EAAME,OAAtB/E,EADa8E,EACb9E,KAAMgF,EADOF,EACPE,MACd7B,KAAKS,SAALjE,OAAAsF,EAAA,EAAAtF,CAAA,GACKK,EAAOgF,4CAIA,IAAAE,EAAA/B,KACZ7C,EAAsB6C,KAAK5C,MAAMY,UAAWgC,KAAK5C,MAAM6O,iBAAkBjM,KAAK5C,MAAM4O,+BAC/ExL,KACG,SAAAoG,GACI7E,EAAKtB,SAAS,CACV0L,qBAAsBvF,EAAa3E,OAEvCpG,QAAQqG,IAAI0E,EAAa3E,+CAK1B,IAAAK,EAAAtC,KACX7C,EAAqB6C,KAAK5C,MAAMe,eAC3BqC,KAAK,SAAAwB,GACFM,EAAK7B,SAAS,CACV2G,oBAAqBpF,EAAIC,KAAKwB,yDAK7B,IAAAc,EAAAvE,KACb7C,EAAuB6C,KAAK5C,MAAMgB,UAC7BoC,KACG,SAAAwB,GACInG,QAAQqG,IAAI,8BAAgCF,GAC5CuC,EAAK9D,SAAS,CACV2L,sBAAuBpK,EAAIC,KAAKkC,0CAM7CJ,EAAU5F,GAAe,IAAA0G,EAAA7E,KAC5BnE,QAAQqG,IAAI,iDAAmD6B,GADnC,IAEpBmC,EAAclG,KAAK5C,MAAnB8I,UACF2E,EAAeqC,WAAWlN,KAAK5C,MAAMyN,cACrCC,EAAiBoC,WAAWlN,KAAK5C,MAAM0N,gBAC7CjP,QAAQqG,IAAI,4BAA8B2I,GAC1ChP,QAAQqG,IAAI,+BAAiC4I,GAC7C,IAAMxM,EAAOsJ,KAAKC,KAAM9D,EAAW+G,EAAkBD,GAAgB,GACrEhP,QAAQqG,IAAI,mEAAqE5D,GACjFnB,EAAoB+I,EAAUlC,KACzBxD,KAAK,SAAAwB,GACEA,EAAIC,KAAKE,UAAYH,EAAIC,KAAKkL,QAC9BtR,QAAQqG,IAAI,4DACZ/E,EAAoB+I,EAAUlC,IAAK,OAAQ1F,EAAMH,GAC5CqC,KACG,WACI3E,QAAQqG,IAAI,oCACZ/E,EAAmB+I,EAAUlC,KAAKxD,KAC9B,SAAA4M,GACI,IAAMC,EAAaD,EAAUnL,KACzBoL,EAAWlL,SAAWkL,EAAWF,OACjCtI,EAAKpE,SAAS,CACV4L,OAAQgB,EAAWhB,OACnBhO,WAAYgP,EAAWhB,OAAOhO,WAC9BiO,qBAAsBe,EAAWhB,OAAOC,qBACxC/N,YAAa8O,EAAWhB,OAAO9N,sDAalEwF,EAAU3F,GAAU,IAAA2G,EAAA/E,KAAAuC,EACWvC,KAAK5C,MAAjCyN,EADiBtI,EACjBsI,aAAc3E,EADG3D,EACH2D,UAChB5H,EAAOsJ,KAAKC,KAAK9D,EAAW8G,GAAgB,GAClD1N,EAAoB+I,EAAUlC,KACzBxD,KAAK,SAAAwB,GACEA,EAAIC,KAAKE,UAAYH,EAAIC,KAAKkL,QAC9BtR,QAAQqG,IAAI,4DACZ/E,EAAoB+I,EAAUlC,IAAK,SAAU1F,EAAMF,GAC9CoC,KACG,WACI3E,QAAQqG,IAAI,oCACZ/E,EAAmB+I,EAAUlC,KAAKxD,KAC9B,SAAA4M,GACI,IAAMC,EAAaD,EAAUnL,KACzBoL,EAAWlL,SAAWkL,EAAWF,OACjCpI,EAAKtE,SAAS,CACV4L,OAAQgB,EAAWhB,OACnBhO,WAAYgP,EAAWhB,OAAOhO,WAC9BiO,qBAAsBe,EAAWhB,OAAOC,qBACxC/N,YAAa8O,EAAWhB,OAAO9N,6DAa3DuG,GAAU,IAAAM,EAAApF,KACtB7C,EAAgB,WAAY2H,EAASG,UAAW,EAAGjF,KAAK5C,MAAMkL,UAAUtE,KACnExD,KACG,WACIrD,EAAuB2H,EAASd,KAC3BxD,KACG,WACI4E,EAAKsH,iBACLvP,EAAqBiI,EAAKhI,MAAMgN,KAAK9B,WAChC9H,KAAK,SAAAwB,GACF,IAAMC,EAAOD,EAAIC,KACbA,EAAKE,SACLiD,EAAK3E,SAAS,CACV6H,UAAWrG,EAAKqG,mEAUnC,IAAA3C,EAAA3F,KAAAuK,EACuBvK,KAAK5C,MAAzCiP,EADa9B,EACb8B,OAAQhO,EADKkM,EACLlM,WAAYE,EADPgM,EACOhM,YACT,WAAfF,EACA2B,KAAK8M,gBAAgBvO,GAED,SAAfF,GACL2B,KAAK+M,cAAcxO,GAEvBpB,EAAuBkP,EAAOrI,KACzBxD,KAAK,SAAAwB,GACWA,EAAIC,KACRE,SACLwD,EAAKlF,SAAS,CACV4L,OAAQ,GACRhO,WAAY,GACZiO,qBAAsB,GACtB/N,YAAa,+CAMjBH,GAAU,IAAA6H,EAAAjG,KACtB7C,EAAqBiB,EAAU4B,KAAK5C,MAAM8I,UAAUlC,KAC/CxD,KAAK,SAAAwB,GACWA,EAAIC,KACRE,UACL8D,EAAKxF,SAAS,CACV2G,oBAAqB,GACrBgF,sBAAuB,KAE3BjP,EAAqB8I,EAAK7I,MAAM8I,UAAUlC,KACrCxD,KAAK,SAAA6F,GACF,IAAMC,EAAgBD,EAAapE,KAC/BqE,EAAcnE,SACd8D,EAAKxF,SAAS,CACV0D,OAAQmC,EAAcJ,UAAU7B,cAChC6H,YAAa5F,EAAcJ,UAAU7B,cAAcC,SACnDlG,SAAUkI,EAAcJ,UAAU7B,cAAcL,iDAQlE7F,GAAe,IAAAiI,EAAApG,KACzB7C,EAA0BgB,EAAe6B,KAAK5C,MAAM8I,UAAUlC,KACzDxD,KAAK,SAAAwB,GACWA,EAAIC,KACRE,UACLiE,EAAK3F,SAAS,CACV0L,qBAAsB,GACtB/E,oBAAqB,GACrBgF,sBAAuB,KAE3BjP,EAAqBiJ,EAAKhJ,MAAM8I,UAAUlC,KACrCxD,KAAK,SAAA6F,GACF,IAAMC,EAAgBD,EAAapE,KAC/BqE,EAAcnE,SACdiE,EAAK3F,SAAS,CACVgD,YAAa6C,EAAcJ,UAAUK,UACrCyF,8BAA+B1F,EAAcJ,UAAUK,UAAUrI,mBACjE+N,iBAAkB3F,EAAcJ,UAAUK,UAAUtI,MACpDE,cAAemI,EAAcJ,UAAUK,UAAUvC,KAEjD,WACI7G,EAAqBiJ,EAAKhJ,MAAMqG,YAAY6D,QAAQ,GAAIlB,EAAKhJ,MAAM8I,UAAUlC,KACxExD,KAAK,SAAAwB,GACWA,EAAIC,KACRE,SACLhF,EAAqBiJ,EAAKhJ,MAAM8I,UAAUlC,KACrCxD,KAAK,SAAA6F,GACF,IAAMC,EAAgBD,EAAapE,KAC/BqE,EAAcnE,SACdiE,EAAK3F,SAAS,CACV0D,OAAQmC,EAAcJ,UAAU7B,cAChC6H,YAAa5F,EAAcJ,UAAU7B,cAAcC,SACnDlG,SAAUkI,EAAcJ,UAAU7B,cAAcL,wDAgBjGnC,GACX7B,KAAKS,SAAS,CACV8L,YAAa1K,IAEjBhG,QAAQqG,IAAI,qEAII,IAAAoL,EAAAtN,KACVpE,EAAMT,EAAe,oBAE3B,GAAIS,GAAOA,EAAI8B,MAAO,KACVA,EAAU9B,EAAV8B,MACRP,EAAoBO,GACf8C,KAAK,SAAAwB,GAEF,GADaA,EAAIC,KACRE,QAKL,GAJAmL,EAAK7M,SAAS,CACV/C,MAAOA,IAEX7B,QAAQqG,IAAI,mBACRtG,EAAIsK,UAAW,KACPA,EAActK,EAAdsK,UACR/I,EAAqB+I,GAChB1F,KAAK,SAAA6F,GACF,IAAMC,EAAgBD,EAAapE,KAC/BqE,EAAcnE,SACdtG,QAAQqG,IAAI,oBACZrG,QAAQqG,IAAI,aAAe1G,KAAKQ,UAAUsK,EAAcJ,YACxDoH,EAAK7M,SAAS,CACVyF,UAAWI,EAAcJ,UACzB6F,kBAAmBzF,EAAcJ,UAAUQ,SAC3C5I,cAAewI,EAAcJ,UAAUpI,cACvC2F,YAAa6C,EAAcJ,UAAUK,UACrCyF,8BAA+B1F,EAAcJ,UAAUK,UAAUrI,mBACjE+N,iBAAkB3F,EAAcJ,UAAUK,UAAUtI,MACpDE,cAAemI,EAAcJ,UAAUK,UAAUvC,IACjDG,OAAQmC,EAAcJ,UAAU7B,cAChC6H,YAAa5F,EAAcJ,UAAU7B,cAAcC,SACnDlG,SAAUkI,EAAcJ,UAAU7B,cAAcL,IAChDoG,KAAM9D,EAAcJ,UAAUM,SAC9BqE,aAAcvE,EAAcJ,UAAUM,SAASqE,aAC/C7M,UAAWsI,EAAcJ,UAAUM,SAASxI,UAC5C0J,eAAgBpB,EAAcJ,UAAUM,SAASkB,eACjDoD,eAAgBxE,EAAcJ,UAAUM,SAASsE,iBAErD3N,EAAqBmQ,EAAKlQ,MAAMgN,KAAK9B,WAChC9H,KAAK,SAAAwB,GACF,IAAMC,EAAOD,EAAIC,KACbA,EAAKE,QACLmL,EAAK7M,SAAS,CACV6H,UAAWrG,EAAKqG,YAGjBzM,QAAQqG,IAAI,mCAG3B/E,EAAmBmJ,EAAcJ,UAAUlC,KACtCxD,KACG,SAAA4M,GACI,IAAMC,EAAaD,EAAUnL,KACzBoL,EAAWlL,SAAWkL,EAAWF,MACjCG,EAAK7M,SAAS,CACV4L,OAAQgB,EAAWhB,OACnBhO,WAAYgP,EAAWhB,OAAOhO,WAC9BiO,qBAAsBe,EAAWhB,OAAOC,qBACxC/N,YAAa8O,EAAWhB,OAAO9N,YAC/B6C,WAAW,IAIfkM,EAAK7M,SAAS,CACVW,WAAW,QAO/BvF,QAAQqG,IAAI,6BACZoL,EAAK7M,SAAS,CACVW,WAAW,YAM3BkM,EAAK7M,SAAS,CACVW,WAAW,SAKnBkM,EAAK7M,SAAS,CACVW,WAAW,WAO3BpB,KAAKS,SAAS,CACVW,WAAW,qCAQd,IAAAmM,EAAAvN,KAAAwN,EACmCxN,KAAK5C,MAArCgE,EADHoM,EACGpM,UAAW1D,EADd8P,EACc9P,MAAOwI,EADrBsH,EACqBtH,UAE1B,OAAI9E,EAEIjF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAIRqB,EAQAwI,EASD/J,EAAAC,EAAAC,cAACmG,GAAD,CAASpC,MAAM,OAAO1C,MAAOsC,KAAK5C,MAAMM,OACpCvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKoR,KAAG,EAAClR,UAAU,YACfJ,EAAAC,EAAAC,cAAA,OAAK6C,MAAM,sBACP/C,EAAAC,EAAAC,cAACqD,GAAD,CAAmBgB,QAAS,kBAAM6M,EAAKP,eAAe,eACtD7Q,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,eAAiB/C,EAAAC,EAAAC,cAAA,WAD1B,aAEAF,EAAAC,EAAAC,cAACqD,GAAD,CAAmBgB,QAAS,kBAAM6M,EAAKP,eAAe,UACtD7Q,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,yBAA2B/C,EAAAC,EAAAC,cAAA,WADpC,QAEAF,EAAAC,EAAAC,cAACqD,GAAD,CAAmBgB,QAAS,kBAAM6M,EAAKP,eAAe,eACtD7Q,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,oBAAsB/C,EAAAC,EAAAC,cAAA,WAD/B,aAEAF,EAAAC,EAAAC,cAACqD,GAAD,CAAmBgB,QAAS,kBAAM6M,EAAKP,eAAe,iBACtD7Q,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,eAAiB/C,EAAAC,EAAAC,cAAA,WAD1B,gBAEAF,EAAAC,EAAAC,cAACqD,GAAD,CAAmBgB,QAAS,kBAAM6M,EAAKP,eAAe,YACtD7Q,EAAAC,EAAAC,cAAA,KAAG6C,MAAM,iBAAmB/C,EAAAC,EAAAC,cAAA,WAD5B,YAKRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEiB,cAA3ByD,KAAK5C,MAAMmP,YACRpQ,EAAAC,EAAAC,cAACmN,GAAD,CACI3M,KAAMmD,KAAK5C,MAAMU,cACjB4I,SAAU1G,KAAK5C,MAAM2O,oBAEzB5P,EAAAC,EAAAC,cAAA,YAGwB,cAA3B2D,KAAK5C,MAAMmP,YACRpQ,EAAAC,EAAAC,cAACqR,GAAD,KACK,CACGtD,KAAMpK,KAAK5C,MAAMgN,OAIzBjO,EAAAC,EAAAC,cAAA,YAGwB,gBAA3B2D,KAAK5C,MAAMmP,YACRpQ,EAAAC,EAAAC,cAACsR,GAAD,KACK,CACGlK,YAAazD,KAAK5C,MAAMqG,cAG9BtH,EAAAC,EAAAC,cAAA,YAEsB,SAA3B2D,KAAK5C,MAAMmP,YACRpQ,EAAAC,EAAAC,cAACuR,GAAD,KACK,CACGxD,KAAMpK,KAAK5C,MAAMgN,OAGvBjO,EAAAC,EAAAC,cAAA,YAGsB,WAA3B2D,KAAK5C,MAAMmP,YACRpQ,EAAAC,EAAAC,cAACwR,GAAD,KACK,CACG1J,OAAQnE,KAAK5C,MAAM+G,SAGzBhI,EAAAC,EAAAC,cAAA,cAKdF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVyD,KAAK5C,MAAMiP,OACRlQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BAAsB2D,KAAK5C,MAAMiB,YACjClC,EAAAC,EAAAC,cAACyR,GAAD,CAAO5C,QAAStD,KAAKmG,MAAM,IAAIC,KAAKhO,KAAK5C,MAAMkP,sBAAsB2B,UAAYD,KAAKE,OAAS,KAC3F9C,SAAUpL,KAAK6M,0BAGvB1Q,EAAAC,EAAAC,cAAA,cAKZF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAK6C,MAAM,YAAYyL,KAAK,SACxBxO,EAAAC,EAAAC,cAAC4C,EAAD,CAAqByB,QAASV,KAAKwM,gBACnCrQ,EAAAC,EAAAC,cAAC8C,EAAD,CAAoBuB,QAASV,KAAKyM,eAClCtQ,EAAAC,EAAAC,cAAC+C,EAAD,CAAsBsB,QAASV,KAAK0M,oBAIhDvQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVyD,KAAK5C,MAAM+O,qBACRhQ,EAAAC,EAAAC,cAAC8R,GAAD,CAAyBtK,KAAM7D,KAAK2M,QAC/B,CACG9F,YAAe7G,KAAK5C,MAAM+O,qBAC1BrF,wBAA2B9G,KAAK5C,MAAM6O,mBAG5C9P,EAAAC,EAAAC,cAAA,cAGdF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVyD,KAAK5C,MAAMgK,oBACRjL,EAAAC,EAAAC,cAAC+R,GAAD,CAAoB5J,OAAQxE,KAAK4M,UAC5B,CACG/F,YAAe7G,KAAK5C,MAAMgK,oBAC1B/C,cAAiBrE,KAAK5C,MAAM+G,SAGlChI,EAAAC,EAAAC,cAAA,cAGdF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVyD,KAAK5C,MAAMgP,sBACRjQ,EAAAC,EAAAC,cAACgS,GAAD,CAAsBrJ,QAAShF,KAAKiN,iBAC/B,CACGpG,YAAe7G,KAAK5C,MAAMgP,sBAC1B1E,eAAkB1H,KAAK5C,MAAMsK,iBAGnCvL,EAAAC,EAAAC,cAAA,eAhIdF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUC,GAAG,sBATjBzE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUC,GAAG,cA9YdC,aCQJyN,OAbf,WACE,OACEnS,EAAAC,EAAAC,cAACkS,EAAA,EAAD,KACApS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAO6N,OAAK,EAACC,KAAK,IAAIC,UAAWvN,KACjChF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAO6N,OAAK,EAACC,KAAK,UAAUC,UAAW7L,KACvC1G,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAO6N,OAAK,EAACC,KAAK,mBAAmBC,UAAW5F,KAChD3M,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAO6N,OAAK,EAACC,KAAK,QAAQC,UAAW5C,QCHrB6C,QACW,cAA7B3F,OAAOC,SAAS2F,UAEe,UAA7B5F,OAAOC,SAAS2F,UAEhB5F,OAAOC,SAAS2F,SAASC,MACvB,2DCZNC,IAASC,OAAO5S,EAAAC,EAAAC,cAAC2S,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7O,KAAK,SAAA8O,GACjCA,EAAaC","file":"static/js/main.6d9d039d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/volcanicPlanet.d04c8861.jpg\";","export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userLogout: function(token){\r\n    return axios.put(\"/api/account/logout/\" + token)\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  },\r\n\r\n  longRangeScan: function(scanRange, coord, distanceFromOrigin){\r\n    return axios.get(\"/api/longRangeScan/\" + scanRange + \"/\" + distanceFromOrigin + \"/\" + coord[0] + \"/\" + coord[1] + \"/\" + coord[2])\r\n  },\r\n\r\n  midRangeScan: function(solarSystemId){\r\n    return axios.get(\"/api/midRangeScan/\" + solarSystemId)\r\n  },\r\n \r\n  shortRangeScan: function(planetId){\r\n    return axios.get(\"/api/shortRangeScan/\" + planetId)\r\n  },\r\n\r\n  checkAction: function(characterId){\r\n    return axios.get(\"/api/checkAction/\" + characterId)\r\n  },\r\n\r\n  queueAction: function(characterId, actionType, time, actionValue){\r\n    return axios.post(\"/api/queueAction\",{\r\n      characterId: characterId,\r\n      actionType: actionType,\r\n      time: time,\r\n      actionValue: actionValue\r\n    } )\r\n  },\r\n\r\n  getActions: function(characterId){\r\n    return axios.get(\"/api/getActions/\" + characterId)\r\n  },\r\n\r\n  changePlanet: function(planetId, characterId){\r\n    return axios.put(\"api/changePlanet/\" + planetId +\"/\" + characterId )\r\n  },\r\n\r\n  changeSolarSystem: function(solarSystemId, characterId){\r\n    return axios.put(\"/api/changeSolarSystem/\" + solarSystemId + \"/\" + characterId)\r\n  },\r\n\r\n  completeAction: function(actionId){\r\n    return axios.put(\"/api/completeAction/\" + actionId)\r\n  },\r\n\r\n  getStar: function(starId){\r\n    return axios.get(\"/api/getStar/\" + starId)\r\n  },\r\n\r\n  getInventory: function(inventoryId){\r\n    return axios.get(\"/api/getInventory/\" + inventoryId)\r\n  },\r\n\r\n  addItem: function(itemName, itemTechLevel, quantity, inventoryId){\r\n    return axios.post(\"/api/createItemInst\",\r\n    {\r\n      name: itemName,\r\n      techLvl: itemTechLevel,\r\n      quantity: quantity,\r\n      inventoryId: inventoryId\r\n    })\r\n  },\r\n\r\n  deleteArtifact: function(artifactId){\r\n    return axios.delete(\"/api/deleteArtifact/\" + artifactId)\r\n  }\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function LongRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}><i class=\"fas fa-satellite-dish\"></i>Long Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function MidRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}><i class=\"fas fa-satellite-dish\"></i>Mid Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function ShortRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}><i class=\"fas fa-satellite-dish\"></i>Short Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\n\r\nexport function LogoutButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" id=\"logoutBtn\" {...props}>Logout</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function WarpToSolarSystem(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Warp</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TravelToPlanetButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Travel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function RetrieveArtifactButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Retrieve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function DockButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Dock</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MainOptionsButton(props){\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-lg btn-dark btn-block\" {...props}>{props.children}</button>        \r\n    )\r\n}\r\n\r\nexport function GenericButton(props){\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>{props.children}</button>        \r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport { LogoutButton } from \"../Buttons\";\r\nimport fetches from \"../../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            login: this.props.login,\r\n            token: this.props.token,\r\n            logout: \"\"\r\n         }\r\n\r\n         this.logout = this.logout.bind(this)\r\n\r\n    }\r\n\r\n    logout(){\r\n        fetches.userLogout(this.state.token)\r\n        .then(this.setState({\r\n            logout: \"true\"\r\n        }))\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div id=\"header\" className=\"container-fluid border-bottom border-dark\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h2>Delve Into The Beyond</h2>\r\n                {this.state.login === \"true\" ? <LogoutButton onClick={this.logout}> </LogoutButton> : <div></div>}\r\n                {this.state.logout === \"true\" ? <Redirect to='/' /> : <div></div>}\r\n              </div>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <footer className=\"footer mt-auto\">\r\n            <p>A game by Ian Theis</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function Container(props){\r\n    return(\r\n        <div className='container' {...props}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ContainerFluid(props){\r\n    return(\r\n        <div className='container-fluid'{...props}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './style.css'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport {Container, ContainerFluid} from \"../Container\"\r\n\r\nfunction Wrapper(props){\r\n    return(\r\n        <div id=\"wrapper\">\r\n             <Header login={props.login} token={props.token}/>\r\n            <Container id=\"mainBody\">\r\n                {props.children}\r\n            </Container>\r\n                    <Footer />                 \r\n</div>\r\n    )}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <Wrapper login=\"false\" token=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Username onChange={this.handleInputChange} />\r\n                            <Password onChange={this.handleInputChange} />\r\n                            <SignInButton onClick={this.onSignIn} />\r\n                            <br/>\r\n                            <p>Don't have an Account?</p>\r\n                            <a href=\"/SignUp\" >Sign Up Here</a>\r\n                        </div>\r\n                    </div>  \r\n                </Wrapper>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Wrapper login=\"false\" token=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Username onChange={this.handleInputChange} />\r\n                        <Email onChange={this.handleInputChange} />\r\n                        <Password onChange={this.handleInputChange} />\r\n                        <ConfirmPassword onChange={this.handleInputChange} />\r\n                        <SignUpButton onClick={this.onSignUp} />\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <p>Already have an Account?</p>\r\n                        <a href=\"/\">Login Here</a>\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React, { Component } from \"react\";\r\nimport { distance } from \"mathjs\"\r\nimport { WarpToSolarSystem, TravelToPlanetButton, RetrieveArtifactButton, DockButton, GenericButton } from \"../Buttons\"\r\nimport fetches from \"../../utils/fetches\";\r\n\r\nexport class NearbySolarSystemsRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystem: props.children.solarSystem,\r\n            currentCoord: props.children.currentCoord\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var warp = this.props.warp\r\n        return (\r\n            <tr>\r\n                <td>X:{this.state.solarSystem.coord[0].toPrecision(5)} Y:{this.state.solarSystem.coord[1].toPrecision(5)} Z:{this.state.solarSystem.coord[2].toPrecision(5)}</td>\r\n                <td>{this.state.solarSystem.distanceFromOrigin.toPrecision(5)}</td>\r\n                <td>{distance(this.state.solarSystem.coord, this.state.currentCoord).toPrecision(5)}</td>\r\n                <td><WarpToSolarSystem value={this.state.solarSystem._id}\r\n                    onClick={() => warp(distance(this.state.solarSystem.coord, this.state.currentCoord) * 149600000000 * 63241, this.state.solarSystem._id)}>\r\n                </WarpToSolarSystem>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class NearbyPlanetRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            planet: props.children.planet,\r\n            currentPlanetCoordLoc: props.children.currentPlanet.coordLoc\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        var travel = this.props.travel\r\n        return (\r\n            <tr>\r\n                <td>X:{this.state.planet.coordLoc[0].toPrecision(5)} Y:{this.state.planet.coordLoc[1].toPrecision(5)}</td>\r\n                <td>{this.state.planet.distanceFromStar.toPrecision(5)}</td>\r\n                <td>{distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc).toPrecision(5)}</td>\r\n                <td>{this.state.planet.planetType}</td>\r\n                <td><TravelToPlanetButton value={this.state.planet._id} onClick={() => travel(distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc) * 149600000000, this.state.planet._id)}></TravelToPlanetButton></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ArtifactRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifact: props.children.artifact,\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        var recover = this.props.recover\r\n        return (\r\n            <tr>\r\n                <td>{this.state.artifact.techLevel}</td>\r\n                <td><RetrieveArtifactButton onClick={() =>{recover(this.state.artifact)}}></RetrieveArtifactButton></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport class StationRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            station: props.children.station,\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        const { station } = this.state\r\n        return (\r\n            <tr>\r\n                <td>{station.stationSize}</td>\r\n                <td>{station.manufacturingLvl}</td>\r\n                <td>{station.labLvl}</td>\r\n                <td><DockButton></DockButton></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ItemRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            item: props.children.item,\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        const { item } = this.state\r\n        return (\r\n            <tr>\r\n                <td>{item.name}</td>\r\n                <td>{item.techLvl}</td>\r\n                <td>{item.volume}</td>\r\n                <td>{item.value}</td>\r\n                <td>{JSON.stringify(item.property)}</td>\r\n                <td>{item.quantity}</td>\r\n                <td><GenericButton>Jettison</GenericButton></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport class CharacterSelectionRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            character: props.children.character,\r\n            shipName: '',\r\n            distanceFromOrigin: '',\r\n            isLoading: true\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetches.getCharacter(this.state.character._id).then(characterRes => {\r\n            const characterData = characterRes.data\r\n            if (characterData.success) {\r\n                this.setState({\r\n                    distanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                    shipName: characterData.character.shipInst.shipName,\r\n                    isLoading: false\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.isLoading){\r\n            return(\r\n                <tr>\r\n                <td>Loading...</td>\r\n                <td>Loading...</td>\r\n                <td>Loading...</td>\r\n                <td>Loading...</td>\r\n                <td>Loading...</td>\r\n            </tr> \r\n            )\r\n        }\r\n        const { character, distanceFromOrigin, shipName } = this.state\r\n        var load = this.props.load\r\n        return (\r\n            <tr>\r\n                <td>{character.characterName}</td>\r\n                <td>$ {character.currency}</td>\r\n                <td>{shipName}</td>\r\n                <td>{distanceFromOrigin.toPrecision(5)} LY</td>\r\n                <td><GenericButton onClick={(event) => load(event)} value={character._id}>Load Game</GenericButton></td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {NearbySolarSystemsRow, NearbyPlanetRow, ArtifactRow, StationRow, ItemRow, CharacterSelectionRow} from \"../Row\"\r\n\r\n\r\nexport class NearbySolarSystemsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystems: props.children.scanResults,\r\n            currentCoord: props.children.currentSolarSystemCoord\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        var {currentCoord} = this.state\r\n        var warp = this.props.warp\r\n        var solarSystemsMap = this.state.solarSystems.map(function(solarSystem){\r\n            return <NearbySolarSystemsRow warp={warp}>\r\n                {{\r\n                    \"solarSystem\": solarSystem,\r\n                    \"currentCoord\": currentCoord\r\n                }}\r\n            </NearbySolarSystemsRow>;\r\n          })\r\n        \r\n        return(\r\n    <table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Origin</th>\r\n          <th scope=\"col\">Distance From Current Solar System</th>\r\n          <th scope=\"col\">Warp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {solarSystemsMap}\r\n      </tbody>\r\n    </table>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            midRangeScanResults: props.children.scanResults,\r\n            currentPlanet: props.children.currentPlanet\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {currentPlanet} = this.state\r\n        var travel = this.props.travel\r\n        var planetsMap = this.state.midRangeScanResults.planets.map(function(planet){\r\n            return <NearbyPlanetRow travel={travel}>\r\n                {{\r\n                    \"planet\": planet,\r\n                    \"currentPlanet\": currentPlanet\r\n                }}\r\n            </NearbyPlanetRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Star</th>\r\n          <th scope=\"col\">Distance From Current Planet</th>\r\n          <th scope=\"col\">Planet Type</th>\r\n          <th scope=\"col\">Travel</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {planetsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class ArtifactsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifacts: props.children.artifacts,\r\n            scanResolution: props.children.scanResolution\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var recover = this.props.recover\r\n        var {artifacts, scanResolution} = this.state\r\n        var artifactsMap = artifacts.map(function(artifact){\r\n            if((Math.sqrt(Math.random()) * scanResolution) > artifact.signal){\r\n                return ( <ArtifactRow recover={recover}>\r\n                    {{\r\n                        \"artifact\": artifact,\r\n                    }}\r\n                </ArtifactRow>\r\n              )\r\n            }\r\n        }) \r\n            \r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Retrieve</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {artifactsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n        }\r\n\r\n}\r\n\r\nexport class StationsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stations: props.children.stations,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {stations} = this.state\r\n        var stationsMap = stations.map(function(station){\r\n            return <StationRow>\r\n                {{\r\n                    \"station\": station\r\n                }}\r\n            </StationRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Station Size</th>\r\n          <th scope=\"col\">Manufactuaring Level</th>\r\n          <th scope=\"col\">Research Level</th>\r\n          <th scope=\"col\">Dock</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {stationsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class InventoryTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            inventory: props.children.inventory,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {inventory} = this.state\r\n        var inventoryMap = inventory.items.map(function(item){\r\n            return <ItemRow>\r\n                {{\r\n                    \"item\": item\r\n                }}\r\n            </ItemRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Volume/Unit</th>\r\n          <th scope=\"col\">Value/Unit</th>\r\n          <th scope=\"col\">Properties</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Jetison</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {inventoryMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class CharacterSelectionTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            characters: props.children.characters,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {characters} = this.state\r\n        var load = this.props.load\r\n        var characterMap = characters.map(function(character){\r\n            return <CharacterSelectionRow load={load}>\r\n                {{\r\n                    \"character\": character\r\n                }}\r\n            </CharacterSelectionRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Character Name</th>\r\n          <th scope=\"col\">Currency</th>\r\n          <th scope=\"col\">Ship</th>\r\n          <th scope=\"col\">Distance From Origin</th>\r\n          <th scope=\"col\">Load Game</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {characterMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\nimport Wrapper from \"../compnents/Wrapper\"\r\nimport {CharacterSelectionTable} from \"../compnents/Tables\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.load = this.load.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    load(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters.length !== 0) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <CharacterName onChange={this.handleInputChange} />\r\n                        <CreateCharacterButton onClick={this.createCharacter} />\r\n                        { this.state.characters ?<CharacterSelectionTable load={this.load}>\r\n                            {{\r\n                                characters: this.state.characters\r\n                            }}\r\n                        </CharacterSelectionTable>\r\n                        : <div></div>}\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React, {Component} from \"react\"\r\nimport './style.css'\r\nimport {ArtifactsTable, StationsTable, InventoryTable} from \"../Tables\"\r\nimport fetches from \"../../utils/fetches\";\r\n\r\nexport function CharacterInformationSection(props){\r\n    return(\r\n    <div id=\"characterInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h3>Character Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <p>Name: {props.name}</p>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>Currency: ${props.currency}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n    export class SolarSystemInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                solarSystem: props.children.solarSystem,\r\n                star: '',\r\n                isloading: true\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n        componentDidMount(){\r\n            fetches.getStar(this.state.solarSystem.star)\r\n            .then(res =>\r\n                {const data = res.data\r\n                    if (data.success){\r\n                        this.setState({\r\n                            star: data.star,\r\n                            isloading: false\r\n                        })\r\n                    }\r\n                \r\n                })\r\n        }\r\n        render(){\r\n            \r\n            if(this.state.isloading){\r\n                return(<div>Loading...</div>)\r\n            }\r\n            const {solarSystem, star} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Solar System Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Distance From Origin: {solarSystem.distanceFromOrigin.toPrecision(5)} LY</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>System Coordinates: (X:{solarSystem.coord[0].toPrecision(5)}, Y:{solarSystem.coord[1].toPrecision(5)}, Z:{solarSystem.coord[2].toPrecision(5)} ) LY</p>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Star Summary</h3>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Star Type: {star.starType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Spectral Type: {star.spectralType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Luminosity: {star.luminosity.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Mass: {star.mass.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Temperature: {star.temp.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class PlanetInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.planet,\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n \r\n        render(){\r\n            const {planet} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Planet Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Type: {planet.planetType}</p>\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Temp: {planet.planetTemp.toPrecision(5)}</p>\r\n                    </div>                   \r\n                </div>\r\n                <div className='row'>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Distance From Star: {planet.distanceFromStar.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Planet Coordinates: ( X:{planet.coordLoc[0].toPrecision(5)} Y:{planet.coordLoc[1].toPrecision(5)} )</p>\r\n                    </div>\r\n                </div>                    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class InventoryInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                ship: props.children.ship,\r\n                inventory: '',\r\n                isloading: true\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n        componentDidMount(){\r\n            fetches.getInventory(this.state.ship.inventory)\r\n            .then(res =>\r\n                {const data = res.data\r\n                    if (data.success){\r\n                        this.setState({\r\n                            inventory: data.inventory,\r\n                            isloading: false\r\n                        })\r\n                    }\r\n                    else{console.log(\"was not able to get inventory\")}\r\n                \r\n                })\r\n        }\r\n        render(){            \r\n            if(this.state.isloading){\r\n                return(<div>Loading</div>)\r\n            }\r\n            const {inventory} = this.state\r\n            return(\r\n                <InventoryTable>\r\n                    {{\r\n                        inventory: inventory\r\n                    }}\r\n                </InventoryTable>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class PlanetSummarySection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.scanResults,\r\n                scanResolution: props.children.scanResolution\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n    \r\n    \r\n        render(){\r\n            const {planet, scanResolution} = this.state\r\n            var recover = this.props.recover\r\n           return(\r\n           <div>\r\n            {planet.artifacts.length > 0 ? \r\n            <ArtifactsTable recover={recover}>\r\n                {{\r\n                    artifacts: planet.artifacts,\r\n                    scanResolution: scanResolution\r\n                }}\r\n            </ArtifactsTable> :\r\n            <div>Scan did not Detect any Signs of an Artifact</div> }\r\n            {planet.stations.length > 0 ? \r\n            <StationsTable>\r\n                {{\r\n                    stations: planet.stations\r\n                    \r\n                }}\r\n            </StationsTable> :\r\n            <div>Scan did not Detect any Signs of an Orbital Station</div> }\r\n            </div>\r\n           )\r\n        \r\n    }\r\n}\r\n\r\nexport class ShipInformationSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ship: props.children.ship\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const {ship} = this.state\r\n       return(\r\n        <div id=\"shipInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-12'>\r\n                <h3>Ship Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Name: {ship.shipName}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Role: {ship.role}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Class: {ship.shipClass}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Tech Level: {ship.techLevel}</p>\r\n            </div>\r\n            <div className='col-md-4'>\r\n                <p>Acceleration: {ship.acceleration} m/s</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Worm Hole Factor: {ship.wormHoleFactor}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Scan Range: {ship.scanRange} LY</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Scan Resolution: {ship.scanResolution}</p>\r\n            </div>\r\n        </div>\r\n        { ship.miningLasers > 0 ?\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining Lasers: {ship.miningLasers} </p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Mining Yield: {ship.miningLaserYield} m3/cycle</p>\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining: No Mining Capabilities</p>\r\n            </div>\r\n        </div>}\r\n    </div>\r\n       )\r\n    \r\n}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          seconds: this.props.seconds,\r\n        }\r\n    }\r\n\r\n    tick() {\r\n      this.setState(prevState => ({\r\n        seconds: prevState.seconds - 1\r\n      })\r\n      )\r\n      if(this.state.seconds <= 0){\r\n          this.props.handeler()\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n      const {seconds} = this.state\r\n      var displaySeconds = (seconds % 60).toString()\r\n      const displayMinutes = Math.floor(seconds / 60).toString()\r\n      if(seconds % 60 < 10){\r\n        displaySeconds = \"0\" + displaySeconds\r\n      }\r\n      return (\r\n        <div>\r\n          Time Until Completion: {displayMinutes + \":\" + displaySeconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Timer","import React from \"react\";\r\nimport volcanicPlanet from './volcanicPlanet.jpg'\r\n\r\nfunction Images(props){\r\n    //const planetType = props.children.planetType\r\n    return(\r\n        <img src={volcanicPlanet} alt=\"volcanicPlanet\"></img>\r\n    )\r\n}\r\n\r\nexport default Images","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { LongRangeScanButton, MidRangeScanButton, ShortRangeScanButton, MainOptionsButton } from '../compnents/Buttons'\r\nimport { CharacterInformationSection, SolarSystemInformationSection, PlanetSummarySection, ShipInformationSection, PlanetInformationSection, InventoryInformationSection } from '../compnents/Sections'\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Container } from '../compnents/Container'\r\nimport { NearbySolarSystemsTable, NearbyPlanetsTable } from '../compnents/Tables'\r\nimport Timer from \"../compnents/Timer\"\r\nimport Images from \"../compnents/Images\"\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n            solarSystem: '',\r\n            solarSystemDistanceFromOrigin: '',\r\n            solarSystemCoord: '',\r\n            solarSystemId: '',\r\n            planet: '',\r\n            planetCoord: '',\r\n            planetId: '',\r\n            ship: '',\r\n            acceleration: '',\r\n            scanRange: '',\r\n            scanResolution: '',\r\n            wormHoleFactor: '',\r\n            longRangeScanResults: '',\r\n            midRangeScanResults: '',\r\n            shortRangeScanResults: '',\r\n            action: '',\r\n            actionType: '',\r\n            actionCompletionTime: '',\r\n            actionValue: '',\r\n            screenFocus: '',\r\n            inventory: ''\r\n\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.longRangeScan = this.longRangeScan.bind(this)\r\n        this.midRangeScan = this.midRangeScan.bind(this)\r\n        this.shortRangeScan = this.shortRangeScan.bind(this)\r\n        this.warpTo = this.warpTo.bind(this)\r\n        this.travelTo = this.travelTo.bind(this)\r\n        this.handleActionCompletion = this.handleActionCompletion.bind(this)\r\n        this.resolveTravelTo = this.resolveTravelTo.bind(this)\r\n        this.resolveWarpTo = this.resolveWarpTo.bind(this)\r\n        this.setScreenFocus = this.setScreenFocus.bind(this)\r\n        this.recoverArtifact = this.recoverArtifact.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    longRangeScan() {\r\n        fetches.longRangeScan(this.state.scanRange, this.state.solarSystemCoord, this.state.solarSystemDistanceFromOrigin)\r\n            .then(\r\n                solarSystems => {\r\n                    this.setState({\r\n                        longRangeScanResults: solarSystems.data\r\n                    })\r\n                    console.log(solarSystems.data)\r\n                }\r\n            )\r\n    }\r\n\r\n    midRangeScan() {\r\n        fetches.midRangeScan(this.state.solarSystemId)\r\n            .then(res => {\r\n                this.setState({\r\n                    midRangeScanResults: res.data.solarSystem\r\n                })\r\n            })\r\n    }\r\n\r\n    shortRangeScan() {\r\n        fetches.shortRangeScan(this.state.planetId)\r\n            .then(\r\n                res => {\r\n                    console.log(\"here is the short scan res \" + res)\r\n                    this.setState({\r\n                        shortRangeScanResults: res.data.planet\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    warpTo(distance, solarSystemId) {\r\n        console.log(\"Here is the distance to be traveled in a warp \" + distance)\r\n        const { character } = this.state\r\n        const acceleration = parseFloat(this.state.acceleration)\r\n        const wormHoleFactor = parseFloat(this.state.wormHoleFactor)\r\n        console.log(\"Here is the acceleration \" + acceleration)\r\n        console.log(\"Here is the wormHole factor \" + wormHoleFactor)\r\n        const time = Math.sqrt((distance / wormHoleFactor) / acceleration) / 30\r\n        console.log(\"Here is the time in seconds it should take to complete the warp \" + time)\r\n        fetches.checkAction(character._id)\r\n            .then(res => {\r\n                if (res.data.success && !res.data.found) {\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Warp\", time, solarSystemId)\r\n                        .then(\r\n                            () => {\r\n                                console.log(\"Completed the queue of an action\")\r\n                                fetches.getActions(character._id).then(\r\n                                    actionRes => {\r\n                                        const actionData = actionRes.data\r\n                                        if (actionData.success && actionData.found) {\r\n                                            this.setState({\r\n                                                action: actionData.action,\r\n                                                actionType: actionData.action.actionType,\r\n                                                actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                actionValue: actionData.action.actionValue\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n\r\n\r\n                        )\r\n                }\r\n            })\r\n    }\r\n\r\n    travelTo(distance, planetId) {\r\n        const { acceleration, character } = this.state\r\n        const time = Math.sqrt(distance / acceleration) / 30\r\n        fetches.checkAction(character._id)\r\n            .then(res => {\r\n                if (res.data.success && !res.data.found) {\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Travel\", time, planetId)\r\n                        .then(\r\n                            () => {\r\n                                console.log(\"Completed the queue of an action\")\r\n                                fetches.getActions(character._id).then(\r\n                                    actionRes => {\r\n                                        const actionData = actionRes.data\r\n                                        if (actionData.success && actionData.found) {\r\n                                            this.setState({\r\n                                                action: actionData.action,\r\n                                                actionType: actionData.action.actionType,\r\n                                                actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                actionValue: actionData.action.actionValue\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n\r\n\r\n                        )\r\n                }\r\n            })\r\n    }\r\n\r\n    recoverArtifact(artifact) {\r\n        fetches.addItem(\"artifact\", artifact.techLevel, 1, this.state.inventory._id)\r\n            .then(\r\n                () => {\r\n                    fetches.deleteArtifact(artifact._id)\r\n                        .then(\r\n                            () => {\r\n                                this.shortRangeScan()\r\n                                fetches.getInventory(this.state.ship.inventory)\r\n                                    .then(res => {\r\n                                        const data = res.data\r\n                                        if (data.success) {\r\n                                            this.setState({\r\n                                                inventory: data.inventory,\r\n                                            })\r\n                                        }\r\n                                    })\r\n                            }\r\n                        )\r\n                }\r\n            )\r\n    }\r\n\r\n    handleActionCompletion() {\r\n        const { action, actionType, actionValue } = this.state\r\n        if (actionType === \"Travel\") {\r\n            this.resolveTravelTo(actionValue)\r\n        }\r\n        else if (actionType === \"Warp\") {\r\n            this.resolveWarpTo(actionValue)\r\n        }\r\n        fetches.completeAction(action._id)\r\n            .then(res => {\r\n                const data = res.data\r\n                if (data.success) {\r\n                    this.setState({\r\n                        action: '',\r\n                        actionType: '',\r\n                        actionCompletionTime: '',\r\n                        actionValue: '',\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    resolveTravelTo(planetId) {\r\n        fetches.changePlanet(planetId, this.state.character._id)\r\n            .then(res => {\r\n                const data = res.data\r\n                if (data.success) {\r\n                    this.setState({\r\n                        midRangeScanResults: '',\r\n                        shortRangeScanResults: '',\r\n                    })\r\n                    fetches.getCharacter(this.state.character._id)\r\n                        .then(characterRes => {\r\n                            const characterData = characterRes.data\r\n                            if (characterData.success) {\r\n                                this.setState({\r\n                                    planet: characterData.character.currentPlanet,\r\n                                    planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                    planetId: characterData.character.currentPlanet._id,\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    resolveWarpTo(solarSystemId) {\r\n        fetches.changeSolarSystem(solarSystemId, this.state.character._id)\r\n            .then(res => {\r\n                const data = res.data\r\n                if (data.success) {\r\n                    this.setState({\r\n                        longRangeScanResults: '',\r\n                        midRangeScanResults: '',\r\n                        shortRangeScanResults: '',\r\n                    })\r\n                    fetches.getCharacter(this.state.character._id)\r\n                        .then(characterRes => {\r\n                            const characterData = characterRes.data\r\n                            if (characterData.success) {\r\n                                this.setState({\r\n                                    solarSystem: characterData.character.currentSS,\r\n                                    solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                    solarSystemCoord: characterData.character.currentSS.coord,\r\n                                    solarSystemId: characterData.character.currentSS._id,\r\n                                },\r\n                                    () => {\r\n                                        fetches.changePlanet(this.state.solarSystem.planets[0], this.state.character._id)\r\n                                            .then(res => {\r\n                                                const data = res.data\r\n                                                if (data.success) {\r\n                                                    fetches.getCharacter(this.state.character._id)\r\n                                                        .then(characterRes => {\r\n                                                            const characterData = characterRes.data\r\n                                                            if (characterData.success) {\r\n                                                                this.setState({\r\n                                                                    planet: characterData.character.currentPlanet,\r\n                                                                    planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                                                    planetId: characterData.character.currentPlanet._id,\r\n                                                                })\r\n                                                            }\r\n                                                        })\r\n                                                }\r\n\r\n                                            })\r\n                                    }\r\n                                )\r\n\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    setScreenFocus(value) {\r\n        this.setState({\r\n            screenFocus: value\r\n        })\r\n        console.log(\"Screen set was called\")\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if (obj.character) {\r\n                            const { character } = obj\r\n                            fetches.getCharacter(character)\r\n                                .then(characterRes => {\r\n                                    const characterData = characterRes.data\r\n                                    if (characterData.success) {\r\n                                        console.log(\"Found Character!\")\r\n                                        console.log(\"Character \" + JSON.stringify(characterData.character))\r\n                                        this.setState({\r\n                                            character: characterData.character,\r\n                                            characterCurrency: characterData.character.currency,\r\n                                            characterName: characterData.character.characterName,\r\n                                            solarSystem: characterData.character.currentSS,\r\n                                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                                            solarSystemId: characterData.character.currentSS._id,\r\n                                            planet: characterData.character.currentPlanet,\r\n                                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                            planetId: characterData.character.currentPlanet._id,\r\n                                            ship: characterData.character.shipInst,\r\n                                            acceleration: characterData.character.shipInst.acceleration,\r\n                                            scanRange: characterData.character.shipInst.scanRange,\r\n                                            scanResolution: characterData.character.shipInst.scanResolution,\r\n                                            wormHoleFactor: characterData.character.shipInst.wormHoleFactor,\r\n                                        })\r\n                                        fetches.getInventory(this.state.ship.inventory)\r\n                                            .then(res => {\r\n                                                const data = res.data\r\n                                                if (data.success) {\r\n                                                    this.setState({\r\n                                                        inventory: data.inventory,\r\n                                                    })\r\n                                                }\r\n                                                else { console.log(\"was not able to get inventory\") }\r\n\r\n                                            })\r\n                                        fetches.getActions(characterData.character._id)\r\n                                            .then(\r\n                                                actionRes => {\r\n                                                    const actionData = actionRes.data\r\n                                                    if (actionData.success && actionData.found) {\r\n                                                        this.setState({\r\n                                                            action: actionData.action,\r\n                                                            actionType: actionData.action.actionType,\r\n                                                            actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                            actionValue: actionData.action.actionValue,\r\n                                                            isLoading: false\r\n                                                        })\r\n                                                    }\r\n                                                    else {\r\n                                                        this.setState({\r\n                                                            isLoading: false\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            )\r\n                                    }\r\n                                    else {\r\n                                        console.log(\"Could NOT find Character!\")\r\n                                        this.setState({\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n        //main game return\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div div className=\"col-md-2\">\r\n                        <div class=\"btn-group-vertical\">\r\n                            <MainOptionsButton onClick={() => this.setScreenFocus(\"Character\")}>\r\n                            <i class=\"fas fa-dna\"></i><br/>Character</MainOptionsButton>\r\n                            <MainOptionsButton onClick={() => this.setScreenFocus(\"Ship\")}>\r\n                            <i class=\"fas fa-space-shuttle\"></i><br/>Ship</MainOptionsButton>\r\n                            <MainOptionsButton onClick={() => this.setScreenFocus(\"Inventory\")}>\r\n                            <i class=\"fas fa-box-open\"></i><br/>Inventory</MainOptionsButton>\r\n                            <MainOptionsButton onClick={() => this.setScreenFocus(\"SolarSystem\")}>\r\n                            <i class=\"fas fa-sun\"></i><br/>Solar System</MainOptionsButton>\r\n                            <MainOptionsButton onClick={() => this.setScreenFocus(\"Planet\")}>\r\n                            <i class=\"fas fa-globe\"></i><br/>Planet</MainOptionsButton>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-md-10'>\r\n\r\n                        {this.state.screenFocus === \"Character\" ?\r\n                            <CharacterInformationSection\r\n                                name={this.state.characterName}\r\n                                currency={this.state.characterCurrency} />\r\n                            :\r\n                            <div></div>\r\n                        }\r\n\r\n                        {this.state.screenFocus === \"Inventory\" ?\r\n                            <InventoryInformationSection>\r\n                                {{\r\n                                    ship: this.state.ship\r\n                                }}\r\n                            </InventoryInformationSection>\r\n                            :\r\n                            <div></div>\r\n                        }\r\n\r\n                        {this.state.screenFocus === \"SolarSystem\" ?\r\n                            <SolarSystemInformationSection>\r\n                                {{\r\n                                    solarSystem: this.state.solarSystem\r\n                                }}\r\n                            </SolarSystemInformationSection>\r\n                            : <div></div>}\r\n\r\n                        {this.state.screenFocus === \"Ship\" ?\r\n                            <ShipInformationSection>\r\n                                {{\r\n                                    ship: this.state.ship\r\n                                }}\r\n                            </ShipInformationSection>\r\n                            : <div></div>\r\n                        }\r\n\r\n                        {this.state.screenFocus === \"Planet\" ?\r\n                            <PlanetInformationSection>\r\n                                {{\r\n                                    planet: this.state.planet\r\n                                }}\r\n                            </PlanetInformationSection>\r\n                            : <div></div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        {this.state.action ?\r\n                            <div>\r\n                                <div>Current Action: {this.state.actionType}</div>\r\n                                <Timer seconds={Math.ceil((new Date(this.state.actionCompletionTime).getTime() - Date.now()) / 1000.0)}\r\n                                    handeler={this.handleActionCompletion}>\r\n                                </Timer>\r\n                            </div> :\r\n                            <div></div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <div class=\"btn-group\" role=\"group\">\r\n                            <LongRangeScanButton onClick={this.longRangeScan} />\r\n                            <MidRangeScanButton onClick={this.midRangeScan} />\r\n                            <ShortRangeScanButton onClick={this.shortRangeScan} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        {this.state.longRangeScanResults ?\r\n                            <NearbySolarSystemsTable warp={this.warpTo}>\r\n                                {{\r\n                                    \"scanResults\": this.state.longRangeScanResults,\r\n                                    \"currentSolarSystemCoord\": this.state.solarSystemCoord\r\n                                }}\r\n                            </NearbySolarSystemsTable>\r\n                            : <div></div>}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        {this.state.midRangeScanResults ?\r\n                            <NearbyPlanetsTable travel={this.travelTo}>\r\n                                {{\r\n                                    \"scanResults\": this.state.midRangeScanResults,\r\n                                    \"currentPlanet\": this.state.planet\r\n                                }}\r\n                            </NearbyPlanetsTable>\r\n                            : <div></div>}\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        {this.state.shortRangeScanResults ?\r\n                            <PlanetSummarySection recover={this.recoverArtifact}>\r\n                                {{\r\n                                    \"scanResults\": this.state.shortRangeScanResults,\r\n                                    \"scanResolution\": this.state.scanResolution\r\n                                }}\r\n                            </PlanetSummarySection>\r\n                            : <div></div>}\r\n                    </div>\r\n                </div>\r\n\r\n            </Wrapper>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}