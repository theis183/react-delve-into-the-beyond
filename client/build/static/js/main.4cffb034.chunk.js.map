{"version":3,"sources":["utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","compnents/Buttons/index.js","compnents/Header/index.js","compnents/Footer/index.js","compnents/Container/index.js","compnents/Wrapper/index.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","pages/CharacterSelect.js","compnents/Sections/index.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","put","get","userId","characterName","characterId","scanRange","coord","distanceFromOrigin","LoadGameButton","LongRangeScanButton","MidRangeScanButton","ShortRangeScanButton","LogoutButton","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","logout","bind","assertThisInitialized","then","setState","onClick","react_router","to","Component","Footer","Container","children","Wrapper","compnents_Header","compnents_Footer","Login","isLoading","signInError","signInUsername","signInPassword","handleInputChange","onSignIn","event","_event$target","target","value","defineProperty","_this2","res","data","log","success","history","push","_this3","_this$state","compnents_Wrapper","onChange","compnents_SignInButton","href","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","CharacterSelect","characters","createCharacter","loadGame","window","location","reload","character","res2","account","compnents_CreateCharacterButton","map","_id","CharacterInformationSection","currency","SolarSystemInformationSection","distance","coordx","coordy","coordz","Game","characterCurrency","solarSystem","solarSystemDistanceFromOrigin","solarSystemCoord","planet","ship","acceleration","scanResolution","longRangeScanResults","longRangeScan","midRangeScan","shortRangeScan","solarSystems","characterRes","characterData","currentSS","currentPlanet","shipInst","class","role","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cffb034.chunk.js","sourcesContent":["export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userLogout: function(token){\r\n    return axios.put(\"/api/account/logout/\" + token)\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  },\r\n\r\n  longRangeScan: function(scanRange, coord, distanceFromOrigin){\r\n    return axios.get(\"/api/longRangeScan/\" + scanRange + \"/\" + distanceFromOrigin + \"/\" + coord[0] + \"/\" + coord[1] + \"/\" + coord[2])\r\n  }\r\n \r\n}\r\n\r\n","import React from \"react\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function LongRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Long Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function MidRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Mid Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function ShortRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Short Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\n\r\nexport function LogoutButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Logout</button>\r\n        </div>\r\n        ) \r\n}","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport { LogoutButton } from \"../Buttons\";\r\nimport fetches from \"../../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            login: this.props.login,\r\n            token: this.props.token,\r\n            logout: \"\"\r\n         }\r\n\r\n         this.logout = this.logout.bind(this)\r\n\r\n    }\r\n\r\n    logout(){\r\n        fetches.userLogout(this.state.token)\r\n        .then(this.setState({\r\n            logout: \"true\"\r\n        }))\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div id=\"header\">\r\n            <h2>Delve Into The Beyond</h2>\r\n            {this.state.login === \"true\" ? <LogoutButton onClick={this.logout}> </LogoutButton> : <div></div>}\r\n            {this.state.logout === \"true\" ? <Redirect to='/' /> : <div></div>}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <footer className=\"footer mt-auto\">\r\n            <p>A game by Ian Theis</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function Container(props){\r\n    return(\r\n        <div className='container'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ContainerFluid(props){\r\n    return(\r\n        <div className='container-fluid'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './style.css'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport {Container, ContainerFluid} from \"../Container\"\r\n\r\nfunction Wrapper(props){\r\n    return(\r\n        <div id=\"wrapper\">\r\n             <Header login={props.login} token={props.token}/>\r\n            <Container>\r\n                {props.children}\r\n            </Container>\r\n                    <Footer />                 \r\n</div>\r\n    )}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <Wrapper login=\"false\" token=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Username onChange={this.handleInputChange} />\r\n                            <Password onChange={this.handleInputChange} />\r\n                    <       SignInButton onClick={this.onSignIn} />\r\n                            <a href=\"/SignUp\" >Sign Up</a>\r\n                        </div>\r\n                    </div>  \r\n                </Wrapper>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Wrapper login=\"false\" token=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Username onChange={this.handleInputChange} />\r\n                        <Email onChange={this.handleInputChange} />\r\n                        <Password onChange={this.handleInputChange} />\r\n                        <ConfirmPassword onChange={this.handleInputChange} />\r\n                        <SignUpButton onClick={this.onSignUp} />\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: []\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.loadGame = this.loadGame.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    loadGame(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <CharacterName onChange={this.handleInputChange} />\r\n                        <CreateCharacterButton onClick={this.createCharacter} />\r\n                        {this.state.characters.map((character) =>\r\n                        <div>{character.characterName}\r\n                            <LoadGameButton onClick={event => this.loadGame(event)} value={character._id} />\r\n                                </div>\r\n                             )}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React from \"react\"\r\nimport './style.css'\r\n\r\nexport function CharacterInformationSection(props){\r\n    return(\r\n    <div id=\"characterInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h2>{props.name}</h2>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>$ {props.currency}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\nexport function SolarSystemInformationSection(props){\r\n    return(\r\n        <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-12'>\r\n                <h3>Solar System Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <p>Distance From Origin: {props.distance}</p>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>System Coordinates( X:{props.coordx}, Y:{props.coordy}, Z:{props.coordz} )</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { LongRangeScanButton, MidRangeScanButton, ShortRangeScanButton } from '../compnents/Buttons'\r\nimport { CharacterInformationSection, SolarSystemInformationSection } from '../compnents/Sections'\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Container } from '../compnents/Container'\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n            solarSystem: '',\r\n            solarSystemDistanceFromOrigin: '',\r\n            solarSystemCoord: '',\r\n            planet: '',\r\n            ship: '',\r\n            acceleration: '',\r\n            scanRange: '',\r\n            scanResolution: '',\r\n            longRangeScanResults: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.longRangeScan = this.longRangeScan.bind(this)\r\n        this.midRangeScan = this.midRangeScan.bind(this)\r\n        this.shortRangeScan = this.shortRangeScan.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    longRangeScan() {\r\n        fetches.longRangeScan(this.state.scanRange, this.state.solarSystemCoord, this.state.solarSystemDistanceFromOrigin)\r\n        .then(\r\n            solarSystems => {\r\n                this.setState({\r\n                    longRangeScanResults: solarSystems\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    midRangeScan() {\r\n        console.log(\"function mid range scan is being worked on\")\r\n    }\r\n\r\n    shortRangeScan() {\r\n        console.log(\"function short range scan is being worked on\")\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if (obj.character) {\r\n                            const { character } = obj\r\n                            fetches.getCharacter(character)\r\n                                .then(characterRes => {\r\n                                    const characterData = characterRes.data\r\n                                    if (characterData.success) {\r\n                                        console.log(\"Found Character!\")\r\n                                        console.log(\"Character \" + JSON.stringify(characterData.character))\r\n                                        this.setState({\r\n                                            character: characterData.character,\r\n                                            characterCurrency: characterData.character.currency,\r\n                                            characterName: characterData.character.characterName,\r\n                                            solarSystem: characterData.character.currentSS,\r\n                                            planet: characterData.character.currentPlanet,\r\n                                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                                            ship: characterData.character.shipInst,\r\n                                            acceleration: characterData.character.shipInst.acceleration,\r\n                                            scanRange: characterData.character.shipInst.scanRange,\r\n                                            scanResolution: characterData.character.shipInst.scanResolution,\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                    else {\r\n                                        console.log(\"Could NOT find Character!\")\r\n                                        this.setState({\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n        //main game return\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                    <div className='row'>\r\n                        <div className='col-md-6'>\r\n                            <CharacterInformationSection\r\n                                name={this.state.characterName}\r\n                                currency={this.state.characterCurrency} />\r\n                            <div className='col-md-6'>\r\n                                <SolarSystemInformationSection\r\n                                    distance={this.state.solarSystemDistanceFromOrigin}\r\n                                    coordx={this.state.solarSystemCoord[0]}\r\n                                    coordy={this.state.solarSystemCoord[1]}\r\n                                    coordz={this.state.solarSystemCoord[2]} />\r\n                                <div>acceleration: {this.state.acceleration}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            <div class=\"btn-group\" role=\"group\">\r\n                                <LongRangeScanButton onClick={this.longRangeScan} />\r\n                                <MidRangeScanButton onClick={this.midRangeScan} />\r\n                                <ShortRangeScanButton onClick={this.shortRangeScan} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.longRangeScanResults ? <h1>longRangeScan found systems</h1> :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n            </Wrapper>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}