{"version":3,"sources":["utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","compnents/Buttons/index.js","compnents/Header/index.js","compnents/Footer/index.js","compnents/Container/index.js","compnents/Wrapper/index.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","pages/CharacterSelect.js","compnents/Row/index.js","compnents/Tables/index.js","compnents/Sections/index.js","compnents/Timer/index.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","put","get","userId","characterName","characterId","scanRange","coord","distanceFromOrigin","solarSystemId","planetId","actionType","time","actionValue","actionId","LoadGameButton","LongRangeScanButton","MidRangeScanButton","ShortRangeScanButton","LogoutButton","WarpToSolarSystem","TravelToPlanetButton","RetrieveArtifactButton","DockButton","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","logout","bind","assertThisInitialized","then","setState","onClick","react_router","to","Component","Footer","Container","children","Wrapper","compnents_Header","compnents_Footer","Login","isLoading","signInError","signInUsername","signInPassword","handleInputChange","onSignIn","event","_event$target","target","value","defineProperty","_this2","res","data","log","success","history","push","_this3","_this$state","compnents_Wrapper","onChange","compnents_SignInButton","href","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","CharacterSelect","characters","createCharacter","loadGame","window","location","reload","character","res2","account","compnents_CreateCharacterButton","map","_id","NearbySolarSystemsRow","_Component","solarSystem","currentCoord","inherits","createClass","warp","toPrecision","distance","NearbyPlanetRow","_Component2","planet","currentPlanetCoordLoc","currentPlanet","coordLoc","_this4","travel","distanceFromStar","planetType","ArtifactRow","_Component3","_this5","artifact","techLevel","StationRow","_Component4","_this6","station","stationSize","manufacturingLvl","labLvl","NearbySolarSystemsTable","solarSystems","scanResults","currentSolarSystemCoord","solarSystemsMap","Row_NearbySolarSystemsRow","scope","NearbyPlanetsTable","midRangeScanResults","planetsMap","planets","Row_NearbyPlanetRow","ArtifactsTable","artifacts","scanResolution","artifactsMap","Math","sqrt","random","signal","Row_ArtifactRow","StationsTable","stations","stationsMap","Row_StationRow","CharacterInformationSection","currency","SolarSystemInformationSection","coordx","coordy","coordz","PlanetSummarySection","length","Tables_ArtifactsTable","Tables_StationsTable","Timer","seconds","prevState","handeler","interval","setInterval","tick","clearInterval","Game","characterCurrency","solarSystemDistanceFromOrigin","solarSystemCoord","planetCoord","ship","acceleration","wormHoleFactor","longRangeScanResults","shortRangeScanResults","action","actionCompletionTime","longRangeScan","midRangeScan","shortRangeScan","warpTo","travelTo","handleActionCompletion","resolveTravelTo","resolveWarpTo","parseFloat","found","actionRes","actionData","_this7","_this$state2","_this8","characterRes","characterData","_this9","currentSS","_this10","shipInst","_this$state3","class","role","Tables_NearbySolarSystemsTable","Tables_NearbyPlanetsTable","Sections_PlanetSummarySection","compnents_Timer","Date","getTime","now","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81ec7029.chunk.js","sourcesContent":["export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userLogout: function(token){\r\n    return axios.put(\"/api/account/logout/\" + token)\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  },\r\n\r\n  longRangeScan: function(scanRange, coord, distanceFromOrigin){\r\n    return axios.get(\"/api/longRangeScan/\" + scanRange + \"/\" + distanceFromOrigin + \"/\" + coord[0] + \"/\" + coord[1] + \"/\" + coord[2])\r\n  },\r\n\r\n  midRangeScan: function(solarSystemId){\r\n    return axios.get(\"/api/midRangeScan/\" + solarSystemId)\r\n  },\r\n \r\n  shortRangeScan: function(planetId){\r\n    return axios.get(\"/api/shortRangeScan/\" + planetId)\r\n  },\r\n\r\n  checkAction: function(characterId){\r\n    return axios.get(\"/api/checkAction/\" + characterId)\r\n  },\r\n\r\n  queueAction: function(characterId, actionType, time, actionValue){\r\n    return axios.post(\"/api/queueAction\",{\r\n      characterId: characterId,\r\n      actionType: actionType,\r\n      time: time,\r\n      actionValue: actionValue\r\n    } )\r\n  },\r\n\r\n  getActions: function(characterId){\r\n    return axios.get(\"/api/getActions/\" + characterId)\r\n  },\r\n\r\n  changePlanet: function(planetId, characterId){\r\n    return axios.put(\"api/changePlanet/\" + planetId +\"/\" + characterId )\r\n  },\r\n\r\n  changeSolarSystem: function(solarSystemId, characterId){\r\n    return axios.put(\"/api/changeSolarSystem/\" + solarSystemId + \"/\" + characterId)\r\n  },\r\n\r\n  completeAction: function(actionId){\r\n    return axios.put(\"/api/completeAction/\" + actionId)\r\n  }\r\n\r\n\r\n}\r\n\r\n","import React from \"react\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function LongRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Long Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function MidRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Mid Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function ShortRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>Short Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\n\r\nexport function LogoutButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Logout</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function WarpToSolarSystem(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Warp</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TravelToPlanetButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Travel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function RetrieveArtifactButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Retrieve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function DockButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Dock</button>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport { LogoutButton } from \"../Buttons\";\r\nimport fetches from \"../../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            login: this.props.login,\r\n            token: this.props.token,\r\n            logout: \"\"\r\n         }\r\n\r\n         this.logout = this.logout.bind(this)\r\n\r\n    }\r\n\r\n    logout(){\r\n        fetches.userLogout(this.state.token)\r\n        .then(this.setState({\r\n            logout: \"true\"\r\n        }))\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div id=\"header\">\r\n            <h2>Delve Into The Beyond</h2>\r\n            {this.state.login === \"true\" ? <LogoutButton onClick={this.logout}> </LogoutButton> : <div></div>}\r\n            {this.state.logout === \"true\" ? <Redirect to='/' /> : <div></div>}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <footer className=\"footer mt-auto\">\r\n            <p>A game by Ian Theis</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function Container(props){\r\n    return(\r\n        <div className='container'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ContainerFluid(props){\r\n    return(\r\n        <div className='container-fluid'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './style.css'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport {Container, ContainerFluid} from \"../Container\"\r\n\r\nfunction Wrapper(props){\r\n    return(\r\n        <div id=\"wrapper\">\r\n             <Header login={props.login} token={props.token}/>\r\n            <Container>\r\n                {props.children}\r\n            </Container>\r\n                    <Footer />                 \r\n</div>\r\n    )}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <Wrapper login=\"false\" token=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Username onChange={this.handleInputChange} />\r\n                            <Password onChange={this.handleInputChange} />\r\n                    <       SignInButton onClick={this.onSignIn} />\r\n                            <a href=\"/SignUp\" >Sign Up</a>\r\n                        </div>\r\n                    </div>  \r\n                </Wrapper>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Wrapper login=\"false\" token=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Username onChange={this.handleInputChange} />\r\n                        <Email onChange={this.handleInputChange} />\r\n                        <Password onChange={this.handleInputChange} />\r\n                        <ConfirmPassword onChange={this.handleInputChange} />\r\n                        <SignUpButton onClick={this.onSignUp} />\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: []\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.loadGame = this.loadGame.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    loadGame(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <CharacterName onChange={this.handleInputChange} />\r\n                        <CreateCharacterButton onClick={this.createCharacter} />\r\n                        {this.state.characters.map((character) =>\r\n                        <div>{character.characterName}\r\n                            <LoadGameButton onClick={event => this.loadGame(event)} value={character._id} />\r\n                                </div>\r\n                             )}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React, { Component } from \"react\";\r\nimport {distance} from \"mathjs\"\r\nimport {WarpToSolarSystem, TravelToPlanetButton, RetrieveArtifactButton, DockButton} from \"../Buttons\"\r\n\r\nexport class NearbySolarSystemsRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystem: props.children.solarSystem,\r\n            currentCoord: props.children.currentCoord\r\n         }\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        var warp = this.props.warp\r\n        return(\r\n          <tr>\r\n            <td>X:{this.state.solarSystem.coord[0].toPrecision(5)} Y:{this.state.solarSystem.coord[1].toPrecision(5)} Z:{this.state.solarSystem.coord[2].toPrecision(5)}</td>\r\n            <td>{this.state.solarSystem.distanceFromOrigin.toPrecision(5)}</td>\r\n            <td>{distance(this.state.solarSystem.coord, this.state.currentCoord).toPrecision(5)}</td>\r\n            <td><WarpToSolarSystem value={this.state.solarSystem._id} \r\n                onClick={() => warp(distance(this.state.solarSystem.coord, this.state.currentCoord) * 149600000000 * 63241, this.state.solarSystem._id)}>\r\n                </WarpToSolarSystem>\r\n            </td>\r\n          </tr>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            planet: props.children.planet,\r\n            currentPlanetCoordLoc: props.children.currentPlanet.coordLoc\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        var travel = this.props.travel\r\n        return(\r\n            <tr>\r\n              <td>X:{this.state.planet.coordLoc[0].toPrecision(5)} Y:{this.state.planet.coordLoc[1].toPrecision(5)})}</td>\r\n              <td>{this.state.planet.distanceFromStar.toPrecision(5)}</td>\r\n              <td>{distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc).toPrecision(5)}</td>\r\n              <td>{this.state.planet.planetType}</td>\r\n              <td><TravelToPlanetButton value={this.state.planet._id} onClick={() => travel(distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc) * 149600000000, this.state.planet._id)}></TravelToPlanetButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class ArtifactRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifact: props.children.artifact,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <tr>\r\n              <td>{this.state.artifact.techLevel}</td>\r\n              <td><RetrieveArtifactButton></RetrieveArtifactButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class StationRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            station: props.children.station,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        const {station} = this.state\r\n        return(\r\n            <tr>\r\n              <td>{station.stationSize}</td>\r\n              <td>{station.manufacturingLvl}</td>\r\n              <td>{station.labLvl}</td>\r\n              <td><DockButton></DockButton></td>\r\n            </tr>\r\n          )}\r\n}","import React, { Component } from \"react\";\r\nimport {NearbySolarSystemsRow, NearbyPlanetRow, ArtifactRow, StationRow} from \"../Row\"\r\n\r\n\r\nexport class NearbySolarSystemsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystems: props.children.scanResults,\r\n            currentCoord: props.children.currentSolarSystemCoord\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        var {currentCoord} = this.state\r\n        var warp = this.props.warp\r\n        var solarSystemsMap = this.state.solarSystems.map(function(solarSystem){\r\n            return <NearbySolarSystemsRow warp={warp}>\r\n                {{\r\n                    \"solarSystem\": solarSystem,\r\n                    \"currentCoord\": currentCoord\r\n                }}\r\n            </NearbySolarSystemsRow>;\r\n          })\r\n        \r\n        return(\r\n    <table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Origin</th>\r\n          <th scope=\"col\">Distance From Current Solar System</th>\r\n          <th scope=\"col\">Warp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {solarSystemsMap}\r\n      </tbody>\r\n    </table>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            midRangeScanResults: props.children.scanResults,\r\n            currentPlanet: props.children.currentPlanet\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {currentPlanet} = this.state\r\n        var travel = this.props.travel\r\n        var planetsMap = this.state.midRangeScanResults.planets.map(function(planet){\r\n            return <NearbyPlanetRow travel={travel}>\r\n                {{\r\n                    \"planet\": planet,\r\n                    \"currentPlanet\": currentPlanet\r\n                }}\r\n            </NearbyPlanetRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Star</th>\r\n          <th scope=\"col\">Distance From Current Planet</th>\r\n          <th scope=\"col\">Planet Type</th>\r\n          <th scope=\"col\">Travel</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {planetsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class ArtifactsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifacts: props.children.artifacts,\r\n            scanResolution: props.children.scanResolution\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {artifacts, scanResolution} = this.state\r\n        var artifactsMap = artifacts.map(function(artifact){\r\n            if((Math.sqrt(Math.random()) * scanResolution) > artifact.signal){\r\n                return ( <ArtifactRow>\r\n                    {{\r\n                        \"artifact\": artifact,\r\n                    }}\r\n                </ArtifactRow>\r\n              )\r\n            }\r\n        }) \r\n            \r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Retrieve</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {artifactsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n        }\r\n\r\n}\r\n\r\nexport class StationsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stations: props.children.stations,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {stations} = this.state\r\n        var stationsMap = stations.map(function(station){\r\n            return <StationRow>\r\n                {{\r\n                    \"station\": station\r\n                }}\r\n            </StationRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Station Size</th>\r\n          <th scope=\"col\">Manufactuaring Level</th>\r\n          <th scope=\"col\">Research Level</th>\r\n          <th scope=\"col\">Dock</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {stationsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\"\r\nimport './style.css'\r\nimport {ArtifactsTable, StationsTable} from \"../Tables\"\r\n\r\nexport function CharacterInformationSection(props){\r\n    return(\r\n    <div id=\"characterInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h2>{props.name}</h2>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>$ {props.currency}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\nexport function SolarSystemInformationSection(props){\r\n    return(\r\n        <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-12'>\r\n                <h3>Solar System Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <p>Distance From Origin: {props.distance}</p>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>System Coordinates( X:{props.coordx}, Y:{props.coordy}, Z:{props.coordz} )</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n    export class PlanetSummarySection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.scanResults,\r\n                scanResolution: props.children.scanResolution\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n    \r\n    \r\n        render(){\r\n            const {planet, scanResolution} = this.state\r\n           return(\r\n           <div>\r\n            {planet.artifacts.length > 0 ? \r\n            <ArtifactsTable>\r\n                {{\r\n                    artifacts: planet.artifacts,\r\n                    scanResolution: scanResolution\r\n                }}\r\n            </ArtifactsTable> :\r\n            <div>Scan did not Detect any Signs of an Artifact</div> }\r\n            {planet.stations.length > 0 ? \r\n            <StationsTable>\r\n                {{\r\n                    stations: planet.stations\r\n                    \r\n                }}\r\n            </StationsTable> :\r\n            <div>Scan did not Detect any Signs of an Orbital Station</div> }\r\n            </div>\r\n           )\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          seconds: this.props.seconds }\r\n    }\r\n\r\n    tick() {\r\n      this.setState(prevState => ({\r\n        seconds: prevState.seconds - 1\r\n      })\r\n      )\r\n      if(this.state.seconds <= 0){\r\n          this.props.handeler()\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          Time Until Completion: {this.state.seconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Timer","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { LongRangeScanButton, MidRangeScanButton, ShortRangeScanButton } from '../compnents/Buttons'\r\nimport { CharacterInformationSection, SolarSystemInformationSection, PlanetSummarySection } from '../compnents/Sections'\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Container } from '../compnents/Container'\r\nimport {NearbySolarSystemsTable, NearbyPlanetsTable} from '../compnents/Tables'\r\nimport Timer from \"../compnents/Timer\"\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n            solarSystem: '',\r\n            solarSystemDistanceFromOrigin: '',\r\n            solarSystemCoord: '',\r\n            solarSystemId: '',\r\n            planet: '',\r\n            planetCoord: '',\r\n            planetId: '',\r\n            ship: '',\r\n            acceleration: '',\r\n            scanRange: '',\r\n            scanResolution: '',\r\n            wormHoleFactor: '',\r\n            longRangeScanResults: '',\r\n            midRangeScanResults: '',\r\n            shortRangeScanResults: '',\r\n            action: '',\r\n            actionType: '',\r\n            actionCompletionTime: '',\r\n            actionValue: '',\r\n            \r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.longRangeScan = this.longRangeScan.bind(this)\r\n        this.midRangeScan = this.midRangeScan.bind(this)\r\n        this.shortRangeScan = this.shortRangeScan.bind(this)\r\n        this.warpTo = this.warpTo.bind(this)\r\n        this.travelTo = this.travelTo.bind(this)\r\n        this.handleActionCompletion = this.handleActionCompletion.bind(this)\r\n        this.resolveTravelTo = this.resolveTravelTo.bind(this)\r\n        this.resolveWarpTo = this.resolveWarpTo.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    longRangeScan() {\r\n        fetches.longRangeScan(this.state.scanRange, this.state.solarSystemCoord, this.state.solarSystemDistanceFromOrigin)\r\n        .then(\r\n            solarSystems => {\r\n                this.setState({\r\n                    longRangeScanResults: solarSystems.data\r\n                })\r\n                console.log(solarSystems.data)\r\n            }\r\n        )\r\n    }\r\n\r\n    midRangeScan() {\r\n        fetches.midRangeScan(this.state.solarSystemId)\r\n        .then( res => {\r\n            this.setState({\r\n            midRangeScanResults: res.data.solarSystem\r\n            })\r\n        })\r\n    }\r\n\r\n    shortRangeScan() {\r\n        fetches.shortRangeScan(this.state.planetId)\r\n        .then(\r\n            res => {\r\n                console.log(\"here is the short scan res \" + res)\r\n                this.setState({\r\n                shortRangeScanResults: res.data.planet\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    warpTo(distance, solarSystemId) {\r\n        console.log(\"Here is the distance to be traveled in a warp \" + distance )\r\n        const {character} = this.state\r\n        const acceleration = parseFloat(this.state.acceleration)\r\n        const wormHoleFactor = parseFloat(this.state.wormHoleFactor)\r\n        console.log(\"Here is the acceleration \" + acceleration)\r\n        console.log(\"Here is the wormHole factor \" + wormHoleFactor)\r\n        const time = Math.sqrt((distance/wormHoleFactor)/acceleration) / 30\r\n        console.log(\"Here is the time in seconds it should take to complete the warp \" + time)\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Warp\", time, solarSystemId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    travelTo(distance, planetId) {\r\n        const {acceleration, character} = this.state\r\n        const time = Math.sqrt(distance/acceleration) / 30\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Travel\", time, planetId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    handleActionCompletion(){\r\n        const {action, actionType, actionValue} = this.state\r\n        if(actionType===\"Travel\"){\r\n            this.resolveTravelTo(actionValue)\r\n        }\r\n        else if(actionType === \"Warp\"){\r\n            this.resolveWarpTo(actionValue)\r\n        }\r\n        fetches.completeAction(action._id)\r\n        .then(res => {\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    action: '',\r\n                    actionType: '',\r\n                    actionCompletionTime: '',\r\n                    actionValue: '',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveTravelTo(planetId){\r\n        fetches.changePlanet(planetId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            planet: characterData.character.currentPlanet,\r\n                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                            planetId: characterData.character.currentPlanet._id,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveWarpTo(solarSystemId){\r\n        fetches.changeSolarSystem(solarSystemId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    longRangeScanResults: '',\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            solarSystem: characterData.character.currentSS,\r\n                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                            solarSystemId: characterData.character.currentSS._id,\r\n                        }, \r\n                        () => {\r\n                            fetches.changePlanet(this.state.solarSystem.planets[0], this.state.character._id)\r\n                            .then(res =>{\r\n                                const data = res.data\r\n                                if(data.success){\r\n                                    fetches.getCharacter(this.state.character._id)\r\n                                    .then(characterRes => {\r\n                                        const characterData = characterRes.data\r\n                                        if (characterData.success) {\r\n                                            this.setState({\r\n                                                planet: characterData.character.currentPlanet,\r\n                                                planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                                planetId: characterData.character.currentPlanet._id,\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                                \r\n                             })\r\n                        }\r\n                        )\r\n                            \r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n                        \r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if (obj.character) {\r\n                            const { character } = obj\r\n                            fetches.getCharacter(character)\r\n                                .then(characterRes => {\r\n                                    const characterData = characterRes.data\r\n                                    if (characterData.success) {\r\n                                        console.log(\"Found Character!\")\r\n                                        console.log(\"Character \" + JSON.stringify(characterData.character))\r\n                                        this.setState({\r\n                                            character: characterData.character,\r\n                                            characterCurrency: characterData.character.currency,\r\n                                            characterName: characterData.character.characterName,\r\n                                            solarSystem: characterData.character.currentSS,\r\n                                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                                            solarSystemId: characterData.character.currentSS._id,\r\n                                            planet: characterData.character.currentPlanet,\r\n                                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                            planetId: characterData.character.currentPlanet._id,\r\n                                            ship: characterData.character.shipInst,\r\n                                            acceleration: characterData.character.shipInst.acceleration,\r\n                                            scanRange: characterData.character.shipInst.scanRange,\r\n                                            scanResolution: characterData.character.shipInst.scanResolution,\r\n                                            wormHoleFactor: characterData.character.shipInst.wormHoleFactor,\r\n                                        })\r\n                                       fetches.getActions(characterData.character._id)\r\n                                       .then(\r\n                                           actionRes => {\r\n                                               const actionData = actionRes.data\r\n                                               if(actionData.success && actionData.found){\r\n                                                    this.setState({\r\n                                                        action: actionData.action,\r\n                                                        actionType: actionData.action.actionType,\r\n                                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                        actionValue: actionData.action.actionValue,\r\n                                                        isLoading: false\r\n                                                    }) \r\n                                               }\r\n                                               else{ this.setState({\r\n                                                   isLoading: false\r\n                                               })} \r\n                                           }\r\n                                       ) \r\n                                    }\r\n                                    else {\r\n                                        console.log(\"Could NOT find Character!\")\r\n                                        this.setState({\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n        //main game return\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                    <div className='row'>\r\n                        <div className='col-md-6'>\r\n                            <CharacterInformationSection\r\n                                name={this.state.characterName}\r\n                                currency={this.state.characterCurrency} />\r\n                            <div className='col-md-6'>\r\n                                <SolarSystemInformationSection\r\n                                    distance={this.state.solarSystemDistanceFromOrigin}\r\n                                    coordx={this.state.solarSystemCoord[0]}\r\n                                    coordy={this.state.solarSystemCoord[1]}\r\n                                    coordz={this.state.solarSystemCoord[2]} />\r\n                                <div>acceleration: {this.state.acceleration}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            <div class=\"btn-group\" role=\"group\">\r\n                                <LongRangeScanButton onClick={this.longRangeScan} />\r\n                                <MidRangeScanButton onClick={this.midRangeScan} />\r\n                                <ShortRangeScanButton onClick={this.shortRangeScan} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.longRangeScanResults ? \r\n                                <NearbySolarSystemsTable warp={this.warpTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.longRangeScanResults,\r\n                                        \"currentSolarSystemCoord\": this.state.solarSystemCoord}}\r\n                                </NearbySolarSystemsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.midRangeScanResults ? \r\n                                <NearbyPlanetsTable travel={this.travelTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.midRangeScanResults,\r\n                                        \"currentPlanet\": this.state.planet}}\r\n                                </NearbyPlanetsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.shortRangeScanResults ? \r\n                                <PlanetSummarySection>\r\n                                    {{\r\n                                        \"scanResults\":this.state.shortRangeScanResults,\r\n                                        \"scanResolution\": this.state.scanResolution\r\n                                        }}\r\n                                </PlanetSummarySection> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                        <div>{this.state.actionCompletionTime}</div>\r\n                        <div>{this.state.actionType}</div>\r\n                        <div>{this.state.actionValue}</div>\r\n                        {this.state.action ? \r\n                        <Timer seconds={(new Date(this.state.actionCompletionTime).getTime() - Date.now()) / 1000.0}\r\n                        handeler={this.handleActionCompletion}>\r\n                        </Timer> :\r\n                        <div></div>\r\n                        }\r\n                            \r\n                        </div>\r\n                    </div>\r\n            </Wrapper>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}