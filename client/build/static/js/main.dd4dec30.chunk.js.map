{"version":3,"sources":["utils/storage.js","compnents/TextBoxes/index.js","compnents/SignInButton/index.js","utils/fetches.js","compnents/Buttons/index.js","compnents/Header/index.js","compnents/Footer/index.js","compnents/Container/index.js","compnents/Wrapper/index.js","pages/Login.js","compnents/SignUpButton/index.js","pages/SignUp.js","compnents/CreateCharacterButton/index.js","pages/CharacterSelect.js","compnents/Row/index.js","compnents/Tables/index.js","compnents/Sections/index.js","compnents/Timer/index.js","pages/Game.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","Username","props","react_default","a","createElement","for","className","Object","assign","type","id","aria-describedby","name","Email","Password","ConfirmPassword","CharacterName","SignInButton","fetches","state","axios","post","username","email","password","token","put","get","userId","characterName","characterId","scanRange","coord","distanceFromOrigin","solarSystemId","planetId","actionType","time","actionValue","actionId","starId","inventoryId","LoadGameButton","LongRangeScanButton","MidRangeScanButton","ShortRangeScanButton","LogoutButton","WarpToSolarSystem","TravelToPlanetButton","RetrieveArtifactButton","DockButton","MainOptionsButton","children","GenericButton","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","logout","bind","assertThisInitialized","then","setState","onClick","react_router","to","Component","Footer","Container","Wrapper","compnents_Header","compnents_Footer","Login","isLoading","signInError","signInUsername","signInPassword","handleInputChange","onSignIn","event","_event$target","target","value","defineProperty","_this2","res","data","log","success","history","push","_this3","_this$state","compnents_Wrapper","onChange","compnents_SignInButton","href","SignUpButton","SignUp","signUpError","confirmPassword","signUpUsername","signUpPassword","signUpConfirmPassword","onSignUp","TextBoxes_Email","compnents_SignUpButton","CreateCharacterButton","CharacterSelect","characters","createCharacter","loadGame","window","location","reload","character","res2","account","compnents_CreateCharacterButton","map","_id","NearbySolarSystemsRow","_Component","solarSystem","currentCoord","inherits","createClass","warp","toPrecision","distance","NearbyPlanetRow","_Component2","planet","currentPlanetCoordLoc","currentPlanet","coordLoc","_this4","travel","distanceFromStar","planetType","ArtifactRow","_Component3","_this5","artifact","techLevel","StationRow","_Component4","_this6","station","stationSize","manufacturingLvl","labLvl","ItemRow","_Component5","_this7","item","volume","property","quantity","NearbySolarSystemsTable","solarSystems","scanResults","currentSolarSystemCoord","solarSystemsMap","Row_NearbySolarSystemsRow","scope","NearbyPlanetsTable","midRangeScanResults","planetsMap","planets","Row_NearbyPlanetRow","ArtifactsTable","artifacts","scanResolution","artifactsMap","Math","sqrt","random","signal","Row_ArtifactRow","StationsTable","stations","stationsMap","Row_StationRow","InventoryTable","inventory","inventoryMap","items","Row_ItemRow","CharacterInformationSection","currency","SolarSystemInformationSection","star","isloading","starType","spectralType","luminosity","mass","temp","PlanetInformationSection","planetTemp","InventoryInformationSection","ship","Tables_InventoryTable","PlanetSummarySection","_this$state2","length","Tables_ArtifactsTable","Tables_StationsTable","ShipInformationSection","shipName","role","shipClass","acceleration","wormHoleFactor","miningLasers","miningLaserYield","Timer","seconds","prevState","handeler","interval","setInterval","tick","clearInterval","Game","characterCurrency","solarSystemDistanceFromOrigin","solarSystemCoord","planetCoord","longRangeScanResults","shortRangeScanResults","action","actionCompletionTime","screenFocus","longRangeScan","midRangeScan","shortRangeScan","warpTo","travelTo","handleActionCompletion","resolveTravelTo","resolveWarpTo","setScreenFocus","parseFloat","found","actionRes","actionData","_this8","characterRes","characterData","_this9","currentSS","_this10","shipInst","_this11","_this$state3","div","class","Sections_InventoryInformationSection","Sections_SolarSystemInformationSection","Sections_ShipInformationSection","Sections_PlanetInformationSection","compnents_Timer","Date","getTime","now","Tables_NearbySolarSystemsTable","Tables_NearbyPlanetsTable","Sections_PlanetSummarySection","App","react_router_dom","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd4dec30.chunk.js","sourcesContent":["export function getFromStorage(key){\r\n    if(!key){\r\n        return null\r\n    }\r\n\r\n    try{\r\n        const valueStr = localStorage.getItem(key)\r\n        if( valueStr){\r\n            return JSON.parse(valueStr)\r\n        }\r\n        return null\r\n    }\r\n    catch(err){\r\n        return null\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj){\r\n    if(!key){\r\n        console.error(\"Key is missing\")\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj))\r\n    }\r\n\r\n    catch(err){\r\n        console.error(err)\r\n    }\r\n}","import React from \"react\"\r\n\r\nexport function Username(props){\r\n    return(\r\n    <div>\r\n<label for=\"Username\">Username</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control\"\r\n         id=\"Username\" aria-describedby=\"Username\"\r\n         name=\"username\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Email(props){\r\n    return(\r\n    <div>\r\n<label for=\"Email\">Email</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"email\" className=\"form-control\"\r\n         id=\"Email\" aria-describedby=\"Email\"\r\n         name=\"email\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function Password(props){\r\n    return(\r\n    <div>\r\n    <label for=\"Password\">Password</label>\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"password\" className=\"form-control\"\r\n         id=\"Password\" aria-describedby=\"Password\"\r\n         name=\"password\"\r\n         {...props}>\r\n         </input>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport function ConfirmPassword(props){\r\n    return(\r\n    <div>\r\n<label for=\"ConfirmPassword\">Confirm Password</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"password\" className=\"form-control\"\r\n     id=\"ConfirmPassword\" aria-describedby=\"Confirm Password\"\r\n     name=\"confirmPassword\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport function CharacterName(props){\r\n    return(\r\n    <div>\r\n<label for=\"CharacterName\">Character Name</label>\r\n<div className=\"input-group mb-3\">\r\n    <input type=\"text\" className=\"form-control\"\r\n     id=\"CharacterName\" aria-describedby=\"Character Name\"\r\n     name=\"characterName\"\r\n     {...props}>\r\n     </input>\r\n</div>\r\n</div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\n\r\nfunction SignInButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>LogIn</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignInButton","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  userSignUp: function(state) {\r\n    return axios.post(\"/api/account/signup\", {\r\n        username: state.username,\r\n        email: state.email,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userSignIn: function(state) {\r\n    return axios.post(\"/api/account/signin\", {\r\n        username: state.username,\r\n        password: state.password\r\n    });\r\n  },\r\n\r\n  userLogout: function(token){\r\n    return axios.put(\"/api/account/logout/\" + token)\r\n  },\r\n\r\n  verifyToken: function(token){\r\n    return axios.get(\"/api/account/verify/\" + token, {\r\n    })\r\n  },\r\n\r\n  getUser: function(userId){\r\n    return axios.get(\"/api/account/user/\" + userId)\r\n  },\r\n\r\n  createCharacter: function(state){\r\n    return axios.post(\"/api/createCharacter/\",{\r\n      characterName: state.characterName,\r\n      userId: state.userId\r\n    } )\r\n  },\r\n\r\n  getCharacter: function(characterId){\r\n    return axios.get(\"/api/character/\" + characterId)\r\n  },\r\n\r\n  longRangeScan: function(scanRange, coord, distanceFromOrigin){\r\n    return axios.get(\"/api/longRangeScan/\" + scanRange + \"/\" + distanceFromOrigin + \"/\" + coord[0] + \"/\" + coord[1] + \"/\" + coord[2])\r\n  },\r\n\r\n  midRangeScan: function(solarSystemId){\r\n    return axios.get(\"/api/midRangeScan/\" + solarSystemId)\r\n  },\r\n \r\n  shortRangeScan: function(planetId){\r\n    return axios.get(\"/api/shortRangeScan/\" + planetId)\r\n  },\r\n\r\n  checkAction: function(characterId){\r\n    return axios.get(\"/api/checkAction/\" + characterId)\r\n  },\r\n\r\n  queueAction: function(characterId, actionType, time, actionValue){\r\n    return axios.post(\"/api/queueAction\",{\r\n      characterId: characterId,\r\n      actionType: actionType,\r\n      time: time,\r\n      actionValue: actionValue\r\n    } )\r\n  },\r\n\r\n  getActions: function(characterId){\r\n    return axios.get(\"/api/getActions/\" + characterId)\r\n  },\r\n\r\n  changePlanet: function(planetId, characterId){\r\n    return axios.put(\"api/changePlanet/\" + planetId +\"/\" + characterId )\r\n  },\r\n\r\n  changeSolarSystem: function(solarSystemId, characterId){\r\n    return axios.put(\"/api/changeSolarSystem/\" + solarSystemId + \"/\" + characterId)\r\n  },\r\n\r\n  completeAction: function(actionId){\r\n    return axios.put(\"/api/completeAction/\" + actionId)\r\n  },\r\n\r\n  getStar: function(starId){\r\n    return axios.get(\"/api/getStar/\" + starId)\r\n  },\r\n\r\n  getInventory: function(inventoryId){\r\n    return axios.get(\"/api/getInventory/\" + inventoryId)\r\n  }\r\n\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function LoadGameButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Load Game</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function LongRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" {...props}>Long Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function MidRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-info\" {...props}>Mid Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function ShortRangeScanButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn btn-info\" {...props}>Short Range Scan</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\n\r\nexport function LogoutButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Logout</button>\r\n        </div>\r\n        ) \r\n}\r\n\r\nexport function WarpToSolarSystem(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Warp</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TravelToPlanetButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Travel</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function RetrieveArtifactButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Retrieve</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function DockButton(props){\r\n    return(\r\n        <div>\r\n        <button type=\"button\" className=\"btn\" {...props}>Dock</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function MainOptionsButton(props){\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-lg btn-dark btn-block\" {...props}>{props.children}</button>        \r\n    )\r\n}\r\n\r\nexport function GenericButton(props){\r\n    return(\r\n        <button type=\"button\" className=\"btn btn-dark\" {...props}>{props.children}</button>        \r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport { LogoutButton } from \"../Buttons\";\r\nimport fetches from \"../../utils/fetches\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            login: this.props.login,\r\n            token: this.props.token,\r\n            logout: \"\"\r\n         }\r\n\r\n         this.logout = this.logout.bind(this)\r\n\r\n    }\r\n\r\n    logout(){\r\n        fetches.userLogout(this.state.token)\r\n        .then(this.setState({\r\n            logout: \"true\"\r\n        }))\r\n    }\r\n\r\nrender(){\r\n    return(\r\n        <div id=\"header\">\r\n            <h2>Delve Into The Beyond</h2>\r\n            {this.state.login === \"true\" ? <LogoutButton onClick={this.logout}> </LogoutButton> : <div></div>}\r\n            {this.state.logout === \"true\" ? <Redirect to='/' /> : <div></div>}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <footer className=\"footer mt-auto\">\r\n            <p>A game by Ian Theis</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nexport function Container(props){\r\n    return(\r\n        <div className='container'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ContainerFluid(props){\r\n    return(\r\n        <div className='container-fluid'>\r\n        {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport './style.css'\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport {Container, ContainerFluid} from \"../Container\"\r\n\r\nfunction Wrapper(props){\r\n    return(\r\n        <div id=\"wrapper\">\r\n             <Header login={props.login} token={props.token}/>\r\n            <Container>\r\n                {props.children}\r\n            </Container>\r\n                    <Footer />                 \r\n</div>\r\n    )}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport { Username, Password } from \"../compnents/TextBoxes\"\r\nimport SignInButton from \"../compnents/SignInButton\";\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signInError: '',\r\n            signInUsername: '',\r\n            signInPassword: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignIn = this.onSignIn.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        fetches.userSignIn(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the login data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    setInStorage('Delve_Into_Space', { \r\n                        token: data.token,\r\n                        userId: data.userId\r\n                     })\r\n                    this.props.history.push('/CharacterSelect')\r\n                }\r\n            }\r\n            )\r\n\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        console.log(\"Here is the get from storage\" + obj)\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            console.log(\"Here is a token \" + token)\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    console.log(\"Here is a the return call\" + res)\r\n                    const data = res.data\r\n                    console.log(\"Here is data \" + JSON.stringify(data))\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <Wrapper login=\"false\" token=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Username onChange={this.handleInputChange} />\r\n                            <Password onChange={this.handleInputChange} />\r\n                    <       SignInButton onClick={this.onSignIn} />\r\n                            <a href=\"/SignUp\" >Sign Up</a>\r\n                        </div>\r\n                    </div>  \r\n                </Wrapper>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <Redirect to='/CharacterSelect' />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from \"react\";\r\n\r\nfunction SignUpButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Sign Up</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SignUpButton","import React, { Component } from \"react\"\r\nimport { Username, Email, Password, ConfirmPassword } from \"../compnents/TextBoxes\"\r\nimport SignUpButton from \"../compnents/SignUpButton\";\r\nimport fetches from \"../utils/fetches\"\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signUpError: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n\r\n\r\n        const {\r\n            signUpError,\r\n            signUpUsername,\r\n            Email,\r\n            signUpPassword,\r\n            signUpConfirmPassword,\r\n        } = this.state\r\n\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.onSignUp = this.onSignUp.bind(this)\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSignUp() {\r\n        console.log(\"Clicked Sign Up\")\r\n        fetches.userSignUp(this.state)\r\n            .then(res => {\r\n                const data = res.data\r\n                console.log(\"Here is the data\" + JSON.stringify(data))\r\n                if (data.success) {\r\n                    console.log(\"Succes\")\r\n                    this.props.history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Wrapper login=\"false\" token=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Username onChange={this.handleInputChange} />\r\n                        <Email onChange={this.handleInputChange} />\r\n                        <Password onChange={this.handleInputChange} />\r\n                        <ConfirmPassword onChange={this.handleInputChange} />\r\n                        <SignUpButton onClick={this.onSignUp} />\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nfunction CreateCharacterButton(props){\r\nreturn(\r\n<div>\r\n<button type=\"button\" className=\"btn btn-dark\" {...props}>Create Character</button>\r\n</div>\r\n)\r\n}\r\n\r\nexport default CreateCharacterButton","import React, { Component } from \"react\"\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport CreateCharacterButton from \"../compnents/CreateCharacterButton\"\r\nimport { CharacterName } from \"../compnents/TextBoxes\"\r\nimport { LoadGameButton } from \"../compnents/Buttons\"\r\nimport Wrapper from \"../compnents/Wrapper\"\r\n\r\nclass CharacterSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            userId: '',\r\n            characterName: '',\r\n            characters: []\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.createCharacter = this.createCharacter.bind(this)\r\n        this.loadGame = this.loadGame.bind(this)\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    createCharacter() {\r\n        fetches.createCharacter(this.state)\r\n            .then(window.location.reload())\r\n    }\r\n\r\n    loadGame(event) {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        const { token, userId } = obj\r\n        const characterId = event.target.value\r\n        console.log(\"here is the event target \" + event.target)\r\n        console.log(\"Here is the character from the button click \" + characterId)\r\n        setInStorage('Delve_Into_Space', {\r\n            token: token,\r\n            userId: userId,\r\n            character: characterId\r\n        })\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n        if (obj && obj.token && obj.userId) {\r\n            const { token, userId } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                            userId: userId,\r\n                            isLoading: false\r\n                        })\r\n                        fetches.getUser(userId)\r\n                            .then(res2 => {\r\n                                const userData = res2.data\r\n                                const characters = userData.account.characters\r\n                                if (characters) {\r\n                                    this.setState({\r\n                                        characters: characters\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading,\r\n            token,\r\n            userId\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token || !userId) {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <CharacterName onChange={this.handleInputChange} />\r\n                        <CreateCharacterButton onClick={this.createCharacter} />\r\n                        {this.state.characters.map((character) =>\r\n                        <div>{character.characterName}\r\n                            <LoadGameButton onClick={event => this.loadGame(event)} value={character._id} />\r\n                                </div>\r\n                             )}\r\n                    </div>\r\n                </div>\r\n                \r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterSelect","import React, { Component } from \"react\";\r\nimport {distance} from \"mathjs\"\r\nimport {WarpToSolarSystem, TravelToPlanetButton, RetrieveArtifactButton, DockButton, GenericButton} from \"../Buttons\"\r\n\r\nexport class NearbySolarSystemsRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystem: props.children.solarSystem,\r\n            currentCoord: props.children.currentCoord\r\n         }\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        var warp = this.props.warp\r\n        return(\r\n          <tr>\r\n            <td>X:{this.state.solarSystem.coord[0].toPrecision(5)} Y:{this.state.solarSystem.coord[1].toPrecision(5)} Z:{this.state.solarSystem.coord[2].toPrecision(5)}</td>\r\n            <td>{this.state.solarSystem.distanceFromOrigin.toPrecision(5)}</td>\r\n            <td>{distance(this.state.solarSystem.coord, this.state.currentCoord).toPrecision(5)}</td>\r\n            <td><WarpToSolarSystem value={this.state.solarSystem._id} \r\n                onClick={() => warp(distance(this.state.solarSystem.coord, this.state.currentCoord) * 149600000000 * 63241, this.state.solarSystem._id)}>\r\n                </WarpToSolarSystem>\r\n            </td>\r\n          </tr>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            planet: props.children.planet,\r\n            currentPlanetCoordLoc: props.children.currentPlanet.coordLoc\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        var travel = this.props.travel\r\n        return(\r\n            <tr>\r\n              <td>X:{this.state.planet.coordLoc[0].toPrecision(5)} Y:{this.state.planet.coordLoc[1].toPrecision(5)})}</td>\r\n              <td>{this.state.planet.distanceFromStar.toPrecision(5)}</td>\r\n              <td>{distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc).toPrecision(5)}</td>\r\n              <td>{this.state.planet.planetType}</td>\r\n              <td><TravelToPlanetButton value={this.state.planet._id} onClick={() => travel(distance(this.state.planet.coordLoc, this.state.currentPlanetCoordLoc) * 149600000000, this.state.planet._id)}></TravelToPlanetButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class ArtifactRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifact: props.children.artifact,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <tr>\r\n              <td>{this.state.artifact.techLevel}</td>\r\n              <td><RetrieveArtifactButton></RetrieveArtifactButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class StationRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            station: props.children.station,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        const {station} = this.state\r\n        return(\r\n            <tr>\r\n              <td>{station.stationSize}</td>\r\n              <td>{station.manufacturingLvl}</td>\r\n              <td>{station.labLvl}</td>\r\n              <td><DockButton></DockButton></td>\r\n            </tr>\r\n          )}\r\n}\r\n\r\nexport class ItemRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            item: props.children.item,\r\n         }\r\n         \r\n\r\n    }\r\n    render(){\r\n        const {item} = this.state\r\n        return(\r\n            <tr>\r\n              <td>{item.name}</td>\r\n              <td>{item.techLevel}</td>\r\n              <td>{item.volume}</td>\r\n              <td>{item.value}</td>\r\n              <td>{JSON.stringify(item.property)}</td>\r\n              <td>{item.quantity}</td>\r\n              <td><GenericButton>Jettison</GenericButton></td>\r\n            </tr>\r\n          )}\r\n}","import React, { Component } from \"react\";\r\nimport {NearbySolarSystemsRow, NearbyPlanetRow, ArtifactRow, StationRow, ItemRow} from \"../Row\"\r\n\r\n\r\nexport class NearbySolarSystemsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            solarSystems: props.children.scanResults,\r\n            currentCoord: props.children.currentSolarSystemCoord\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        var {currentCoord} = this.state\r\n        var warp = this.props.warp\r\n        var solarSystemsMap = this.state.solarSystems.map(function(solarSystem){\r\n            return <NearbySolarSystemsRow warp={warp}>\r\n                {{\r\n                    \"solarSystem\": solarSystem,\r\n                    \"currentCoord\": currentCoord\r\n                }}\r\n            </NearbySolarSystemsRow>;\r\n          })\r\n        \r\n        return(\r\n    <table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Origin</th>\r\n          <th scope=\"col\">Distance From Current Solar System</th>\r\n          <th scope=\"col\">Warp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {solarSystemsMap}\r\n      </tbody>\r\n    </table>\r\n        )}\r\n    \r\n}\r\n\r\nexport class NearbyPlanetsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            midRangeScanResults: props.children.scanResults,\r\n            currentPlanet: props.children.currentPlanet\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {currentPlanet} = this.state\r\n        var travel = this.props.travel\r\n        var planetsMap = this.state.midRangeScanResults.planets.map(function(planet){\r\n            return <NearbyPlanetRow travel={travel}>\r\n                {{\r\n                    \"planet\": planet,\r\n                    \"currentPlanet\": currentPlanet\r\n                }}\r\n            </NearbyPlanetRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Coordinates</th>\r\n          <th scope=\"col\">Distances From Star</th>\r\n          <th scope=\"col\">Distance From Current Planet</th>\r\n          <th scope=\"col\">Planet Type</th>\r\n          <th scope=\"col\">Travel</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {planetsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class ArtifactsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            artifacts: props.children.artifacts,\r\n            scanResolution: props.children.scanResolution\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {artifacts, scanResolution} = this.state\r\n        var artifactsMap = artifacts.map(function(artifact){\r\n            if((Math.sqrt(Math.random()) * scanResolution) > artifact.signal){\r\n                return ( <ArtifactRow>\r\n                    {{\r\n                        \"artifact\": artifact,\r\n                    }}\r\n                </ArtifactRow>\r\n              )\r\n            }\r\n        }) \r\n            \r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Retrieve</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {artifactsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n        }\r\n\r\n}\r\n\r\nexport class StationsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            stations: props.children.stations,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {stations} = this.state\r\n        var stationsMap = stations.map(function(station){\r\n            return <StationRow>\r\n                {{\r\n                    \"station\": station\r\n                }}\r\n            </StationRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Station Size</th>\r\n          <th scope=\"col\">Manufactuaring Level</th>\r\n          <th scope=\"col\">Research Level</th>\r\n          <th scope=\"col\">Dock</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {stationsMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport class InventoryTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            inventory: props.children.inventory,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        var {inventory} = this.state\r\n        var inventoryMap = inventory.items.map(function(item){\r\n            return <ItemRow>\r\n                {{\r\n                    \"item\": item\r\n                }}\r\n            </ItemRow>;\r\n          })\r\n        return(\r\n<table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">TechLevel</th>\r\n          <th scope=\"col\">Volume/Unit</th>\r\n          <th scope=\"col\">Value/Unit</th>\r\n          <th scope=\"col\">Properties</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Jetison</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          {inventoryMap}\r\n      </tbody>\r\n    </table>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from \"react\"\r\nimport './style.css'\r\nimport {ArtifactsTable, StationsTable, InventoryTable} from \"../Tables\"\r\nimport fetches from \"../../utils/fetches\";\r\n\r\nexport function CharacterInformationSection(props){\r\n    return(\r\n    <div id=\"characterInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <h3>Character Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-6'>\r\n                <p>Name: {props.name}</p>\r\n            </div>\r\n            <div className = 'col-md-6'>\r\n                <p>Currency: ${props.currency}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )}\r\n\r\n    export class SolarSystemInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                solarSystem: props.children.solarSystem,\r\n                star: '',\r\n                isloading: true\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n        componentDidMount(){\r\n            fetches.getStar(this.state.solarSystem.star)\r\n            .then(res =>\r\n                {const data = res.data\r\n                    if (data.success){\r\n                        this.setState({\r\n                            star: data.star,\r\n                            isloading: false\r\n                        })\r\n                    }\r\n                \r\n                })\r\n        }\r\n        render(){\r\n            \r\n            if(this.state.isloading){\r\n                return(<div>Loading...</div>)\r\n            }\r\n            const {solarSystem, star} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Solar System Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Distance From Origin: {solarSystem.distanceFromOrigin.toPrecision(5)} LY</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>System Coordinates: (X:{solarSystem.coord[0].toPrecision(5)}, Y:{solarSystem.coord[1].toPrecision(5)}, Z:{solarSystem.coord[2].toPrecision(5)} ) LY</p>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Star Summary</h3>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Star Type: {star.starType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Spectral Type: {star.spectralType}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Luminosity: {star.luminosity.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className='col-md-4'>\r\n                        <p>Mass: {star.mass.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <p>Temperature: {star.temp.toPrecision(5)}</p>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class PlanetInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.planet,\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n \r\n        render(){\r\n            const {planet} = this.state\r\n            return(\r\n            <div id=\"solarSysteInfoSection\" className=\"sectionBox container\">\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <h3>Planet Summary</h3>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Type: {planet.planetType}</p>\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        <p>Planet Temp: {planet.planetTemp.toPrecision(5)}</p>\r\n                    </div>                   \r\n                </div>\r\n                <div className='row'>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Distance From Star: {planet.distanceFromStar.toPrecision(5)}</p>\r\n                    </div>\r\n                    <div className = 'col-md-6'>\r\n                        <p>Planet Coordinates: ( X:{planet.coordLoc[0].toPrecision(5)} Y:{planet.coordLoc[1].toPrecision(5)} )</p>\r\n                    </div>\r\n                </div>                    \r\n            </div>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class InventoryInformationSection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                ship: props.children.ship,\r\n                inventory: '',\r\n                isloading: true\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n        componentDidMount(){\r\n            fetches.getInventory(this.state.ship.inventory)\r\n            .then(res =>\r\n                {const data = res.data\r\n                    if (data.success){\r\n                        this.setState({\r\n                            inventory: data.inventory,\r\n                            isloading: false\r\n                        })\r\n                    }\r\n                    else{console.log(\"was not able to get inventory\")}\r\n                \r\n                })\r\n        }\r\n        render(){            \r\n            if(this.state.isloading){\r\n                return(<div>Loading</div>)\r\n            }\r\n            const {inventory} = this.state\r\n            return(\r\n                <InventoryTable>\r\n                    {{\r\n                        inventory: inventory\r\n                    }}\r\n                </InventoryTable>\r\n            )\r\n            }    \r\n    }\r\n\r\n    export class PlanetSummarySection extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                planet: props.children.scanResults,\r\n                scanResolution: props.children.scanResolution\r\n             }\r\n    \r\n    \r\n    \r\n        }\r\n    \r\n    \r\n        render(){\r\n            const {planet, scanResolution} = this.state\r\n           return(\r\n           <div>\r\n            {planet.artifacts.length > 0 ? \r\n            <ArtifactsTable>\r\n                {{\r\n                    artifacts: planet.artifacts,\r\n                    scanResolution: scanResolution\r\n                }}\r\n            </ArtifactsTable> :\r\n            <div>Scan did not Detect any Signs of an Artifact</div> }\r\n            {planet.stations.length > 0 ? \r\n            <StationsTable>\r\n                {{\r\n                    stations: planet.stations\r\n                    \r\n                }}\r\n            </StationsTable> :\r\n            <div>Scan did not Detect any Signs of an Orbital Station</div> }\r\n            </div>\r\n           )\r\n        \r\n    }\r\n}\r\n\r\nexport class ShipInformationSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ship: props.children.ship\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const {ship} = this.state\r\n       return(\r\n        <div id=\"shipInfoSection\" className=\"sectionBox container\">\r\n        <div className='row'>\r\n            <div className='col-md-12'>\r\n                <h3>Ship Summary</h3>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Name: {ship.shipName}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Role: {ship.role}</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Class: {ship.shipClass}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Tech Level: {ship.techLevel}</p>\r\n            </div>\r\n            <div className='col-md-4'>\r\n                <p>Acceleration: {ship.acceleration} m/s</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Worm Hole Factor: {ship.wormHoleFactor}</p>\r\n            </div>\r\n        </div>\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Scan Range: {ship.scanRange} m/s</p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Scan Resolution: {ship.scanResolution}</p>\r\n            </div>\r\n        </div>\r\n        { ship.miningLasers > 0 ?\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining Lasers: {ship.miningLasers} </p>\r\n            </div>\r\n            <div className = 'col-md-4'>\r\n                <p>Mining Yield: {ship.miningLaserYield} m3/cycle</p>\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className='row'>\r\n            <div className='col-md-4'>\r\n                <p>Mining: No Mining Capabilities</p>\r\n            </div>\r\n        </div>}\r\n    </div>\r\n       )\r\n    \r\n}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n          seconds: this.props.seconds }\r\n    }\r\n\r\n    tick() {\r\n      this.setState(prevState => ({\r\n        seconds: prevState.seconds - 1\r\n      })\r\n      )\r\n      if(this.state.seconds <= 0){\r\n          this.props.handeler()\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          Time Until Completion: {this.state.seconds}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Timer","import React, { Component } from \"react\";\r\nimport { getFromStorage, setInStorage } from \"../utils/storage\"\r\nimport fetches from \"../utils/fetches\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { LongRangeScanButton, MidRangeScanButton, ShortRangeScanButton, MainOptionsButton } from '../compnents/Buttons'\r\nimport { CharacterInformationSection, SolarSystemInformationSection, PlanetSummarySection, ShipInformationSection, PlanetInformationSection, InventoryInformationSection } from '../compnents/Sections'\r\nimport Wrapper from '../compnents/Wrapper'\r\nimport { Container } from '../compnents/Container'\r\nimport {NearbySolarSystemsTable, NearbyPlanetsTable} from '../compnents/Tables'\r\nimport Timer from \"../compnents/Timer\"\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            character: '',\r\n            characterName: '',\r\n            characterCurrency: '',\r\n            solarSystem: '',\r\n            solarSystemDistanceFromOrigin: '',\r\n            solarSystemCoord: '',\r\n            solarSystemId: '',\r\n            planet: '',\r\n            planetCoord: '',\r\n            planetId: '',\r\n            ship: '',\r\n            acceleration: '',\r\n            scanRange: '',\r\n            scanResolution: '',\r\n            wormHoleFactor: '',\r\n            longRangeScanResults: '',\r\n            midRangeScanResults: '',\r\n            shortRangeScanResults: '',\r\n            action: '',\r\n            actionType: '',\r\n            actionCompletionTime: '',\r\n            actionValue: '',\r\n            screenFocus: '',\r\n            \r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.longRangeScan = this.longRangeScan.bind(this)\r\n        this.midRangeScan = this.midRangeScan.bind(this)\r\n        this.shortRangeScan = this.shortRangeScan.bind(this)\r\n        this.warpTo = this.warpTo.bind(this)\r\n        this.travelTo = this.travelTo.bind(this)\r\n        this.handleActionCompletion = this.handleActionCompletion.bind(this)\r\n        this.resolveTravelTo = this.resolveTravelTo.bind(this)\r\n        this.resolveWarpTo = this.resolveWarpTo.bind(this)\r\n        this.setScreenFocus = this.setScreenFocus.bind(this)\r\n\r\n\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    longRangeScan() {\r\n        fetches.longRangeScan(this.state.scanRange, this.state.solarSystemCoord, this.state.solarSystemDistanceFromOrigin)\r\n        .then(\r\n            solarSystems => {\r\n                this.setState({\r\n                    longRangeScanResults: solarSystems.data\r\n                })\r\n                console.log(solarSystems.data)\r\n            }\r\n        )\r\n    }\r\n\r\n    midRangeScan() {\r\n        fetches.midRangeScan(this.state.solarSystemId)\r\n        .then( res => {\r\n            this.setState({\r\n            midRangeScanResults: res.data.solarSystem\r\n            })\r\n        })\r\n    }\r\n\r\n    shortRangeScan() {\r\n        fetches.shortRangeScan(this.state.planetId)\r\n        .then(\r\n            res => {\r\n                console.log(\"here is the short scan res \" + res)\r\n                this.setState({\r\n                shortRangeScanResults: res.data.planet\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    warpTo(distance, solarSystemId) {\r\n        console.log(\"Here is the distance to be traveled in a warp \" + distance )\r\n        const {character} = this.state\r\n        const acceleration = parseFloat(this.state.acceleration)\r\n        const wormHoleFactor = parseFloat(this.state.wormHoleFactor)\r\n        console.log(\"Here is the acceleration \" + acceleration)\r\n        console.log(\"Here is the wormHole factor \" + wormHoleFactor)\r\n        const time = Math.sqrt((distance/wormHoleFactor)/acceleration) / 30\r\n        console.log(\"Here is the time in seconds it should take to complete the warp \" + time)\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Warp\", time, solarSystemId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    travelTo(distance, planetId) {\r\n        const {acceleration, character} = this.state\r\n        const time = Math.sqrt(distance/acceleration) / 30\r\n        fetches.checkAction(character._id)\r\n        .then(res =>\r\n            {\r\n                if (res.data.success && !res.data.found){\r\n                    console.log(\"In the if success and not having any uncompleted actions\")\r\n                    fetches.queueAction(character._id, \"Travel\", time, planetId)\r\n                    .then(\r\n                        () =>{\r\n                        console.log(\"Completed the queue of an action\")\r\n                        fetches.getActions(character._id).then(\r\n                            actionRes => {\r\n                                const actionData = actionRes.data\r\n                                if(actionData.success && actionData.found){\r\n                                    this.setState({\r\n                                        action: actionData.action,\r\n                                        actionType: actionData.action.actionType,\r\n                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                        actionValue: actionData.action.actionValue\r\n                                    }) \r\n                                }\r\n                            }\r\n                        )\r\n                        }\r\n                        \r\n                        \r\n                    )\r\n                }\r\n            })\r\n    }\r\n\r\n    handleActionCompletion(){\r\n        const {action, actionType, actionValue} = this.state\r\n        if(actionType===\"Travel\"){\r\n            this.resolveTravelTo(actionValue)\r\n        }\r\n        else if(actionType === \"Warp\"){\r\n            this.resolveWarpTo(actionValue)\r\n        }\r\n        fetches.completeAction(action._id)\r\n        .then(res => {\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    action: '',\r\n                    actionType: '',\r\n                    actionCompletionTime: '',\r\n                    actionValue: '',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveTravelTo(planetId){\r\n        fetches.changePlanet(planetId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            planet: characterData.character.currentPlanet,\r\n                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                            planetId: characterData.character.currentPlanet._id,\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveWarpTo(solarSystemId){\r\n        fetches.changeSolarSystem(solarSystemId, this.state.character._id)\r\n        .then(res =>{\r\n            const data = res.data\r\n            if(data.success){\r\n                this.setState({\r\n                    longRangeScanResults: '',\r\n                    midRangeScanResults: '',\r\n                    shortRangeScanResults: '',\r\n                 })\r\n                 fetches.getCharacter(this.state.character._id)\r\n                 .then(characterRes => {\r\n                    const characterData = characterRes.data\r\n                    if (characterData.success) {\r\n                        this.setState({\r\n                            solarSystem: characterData.character.currentSS,\r\n                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                            solarSystemId: characterData.character.currentSS._id,\r\n                        }, \r\n                        () => {\r\n                            fetches.changePlanet(this.state.solarSystem.planets[0], this.state.character._id)\r\n                            .then(res =>{\r\n                                const data = res.data\r\n                                if(data.success){\r\n                                    fetches.getCharacter(this.state.character._id)\r\n                                    .then(characterRes => {\r\n                                        const characterData = characterRes.data\r\n                                        if (characterData.success) {\r\n                                            this.setState({\r\n                                                planet: characterData.character.currentPlanet,\r\n                                                planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                                planetId: characterData.character.currentPlanet._id,\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                                \r\n                             })\r\n                        }\r\n                        )\r\n                            \r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setScreenFocus(value){\r\n        this.setState({\r\n            screenFocus: value\r\n        })\r\n        console.log(\"Screen set was called\")\r\n    }\r\n                        \r\n\r\n    componentDidMount() {\r\n        const obj = getFromStorage(\"Delve_Into_Space\")\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj\r\n            fetches.verifyToken(token)\r\n                .then(res => {\r\n                    const data = res.data\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            token: token,\r\n                        })\r\n                        console.log(\"validated token\")\r\n                        if (obj.character) {\r\n                            const { character } = obj\r\n                            fetches.getCharacter(character)\r\n                                .then(characterRes => {\r\n                                    const characterData = characterRes.data\r\n                                    if (characterData.success) {\r\n                                        console.log(\"Found Character!\")\r\n                                        console.log(\"Character \" + JSON.stringify(characterData.character))\r\n                                        this.setState({\r\n                                            character: characterData.character,\r\n                                            characterCurrency: characterData.character.currency,\r\n                                            characterName: characterData.character.characterName,\r\n                                            solarSystem: characterData.character.currentSS,\r\n                                            solarSystemDistanceFromOrigin: characterData.character.currentSS.distanceFromOrigin,\r\n                                            solarSystemCoord: characterData.character.currentSS.coord,\r\n                                            solarSystemId: characterData.character.currentSS._id,\r\n                                            planet: characterData.character.currentPlanet,\r\n                                            planetCoord: characterData.character.currentPlanet.coordLoc,\r\n                                            planetId: characterData.character.currentPlanet._id,\r\n                                            ship: characterData.character.shipInst,\r\n                                            acceleration: characterData.character.shipInst.acceleration,\r\n                                            scanRange: characterData.character.shipInst.scanRange,\r\n                                            scanResolution: characterData.character.shipInst.scanResolution,\r\n                                            wormHoleFactor: characterData.character.shipInst.wormHoleFactor,\r\n                                        })\r\n                                       fetches.getActions(characterData.character._id)\r\n                                       .then(\r\n                                           actionRes => {\r\n                                               const actionData = actionRes.data\r\n                                               if(actionData.success && actionData.found){\r\n                                                    this.setState({\r\n                                                        action: actionData.action,\r\n                                                        actionType: actionData.action.actionType,\r\n                                                        actionCompletionTime: actionData.action.actionCompletionTime,\r\n                                                        actionValue: actionData.action.actionValue,\r\n                                                        isLoading: false\r\n                                                    }) \r\n                                               }\r\n                                               else{ this.setState({\r\n                                                   isLoading: false\r\n                                               })} \r\n                                           }\r\n                                       ) \r\n                                    }\r\n                                    else {\r\n                                        console.log(\"Could NOT find Character!\")\r\n                                        this.setState({\r\n                                            isLoading: false\r\n                                        })\r\n                                    }\r\n                                })\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, token, character } = this.state\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div><p>Loading...</p></div>\r\n            )\r\n        }\r\n\r\n        if (!token) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (!character) {\r\n            return (\r\n                <div>\r\n                    <Redirect to='/CharacterSelect' />\r\n                </div>\r\n            )\r\n        }\r\n        //main game return\r\n        return (\r\n            <Wrapper login=\"true\" token={this.state.token}>\r\n                    <div className=\"row\">\r\n                        <div div className=\"col-md-2\">\r\n                            <div class=\"btn-group-vertical\">\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Character\")}>Character</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Ship\")}>Ship</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Inventory\")}>Inventory</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"SolarSystem\")}>Solar System</MainOptionsButton>\r\n                                <MainOptionsButton onClick={() => this.setScreenFocus(\"Planet\")}>Planet</MainOptionsButton>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                            <div className= 'col-md-10'>\r\n\r\n                            {this.state.screenFocus===\"Character\" ?\r\n                            <CharacterInformationSection\r\n                            name={this.state.characterName}\r\n                            currency={this.state.characterCurrency} />\r\n                            :\r\n                            <div></div>\r\n                            }\r\n\r\n                             {this.state.screenFocus===\"Inventory\" ?\r\n                            <InventoryInformationSection>\r\n                                {{\r\n                                    ship: this.state.ship\r\n                                }}\r\n                            </InventoryInformationSection>\r\n                            :\r\n                            <div></div>\r\n                            }\r\n\r\n                            {this.state.screenFocus === \"SolarSystem\" ?\r\n                            <SolarSystemInformationSection>\r\n                            {{\r\n                                solarSystem: this.state.solarSystem\r\n                            }}\r\n                            </SolarSystemInformationSection>    \r\n                            : <div></div>}\r\n\r\n                            {this.state.screenFocus === \"Ship\" ?\r\n                            <ShipInformationSection>\r\n                                {{\r\n                                    ship: this.state.ship\r\n                                }}\r\n                            </ShipInformationSection>\r\n                            : <div></div>\r\n                            }\r\n\r\n                            {this.state.screenFocus === \"Planet\" ?\r\n                            <PlanetInformationSection>\r\n                                {{\r\n                                    planet: this.state.planet\r\n                                }}\r\n                            </PlanetInformationSection>\r\n                            : <div></div>\r\n                            }\r\n\r\n                            </div>\r\n                        </div>    \r\n                        <div className='row'>\r\n                        <div className='col-md-12'>\r\n                        <div>{this.state.actionCompletionTime}</div>\r\n                        <div>{this.state.actionType}</div>\r\n                        <div>{this.state.actionValue}</div>\r\n                        {this.state.action ? \r\n                        <Timer seconds={(new Date(this.state.actionCompletionTime).getTime() - Date.now()) / 1000.0}\r\n                        handeler={this.handleActionCompletion}>\r\n                        </Timer> :\r\n                        <div></div>\r\n                        }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            <div class=\"btn-group\" role=\"group\">\r\n                                <LongRangeScanButton onClick={this.longRangeScan} />  \r\n                                <MidRangeScanButton onClick={this.midRangeScan} />\r\n                                <ShortRangeScanButton onClick={this.shortRangeScan} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.longRangeScanResults ? \r\n                                <NearbySolarSystemsTable warp={this.warpTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.longRangeScanResults,\r\n                                        \"currentSolarSystemCoord\": this.state.solarSystemCoord}}\r\n                                </NearbySolarSystemsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.midRangeScanResults ? \r\n                                <NearbyPlanetsTable travel={this.travelTo}>\r\n                                    {{\r\n                                        \"scanResults\":this.state.midRangeScanResults,\r\n                                        \"currentPlanet\": this.state.planet}}\r\n                                </NearbyPlanetsTable> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-12'>\r\n                            {this.state.shortRangeScanResults ? \r\n                                <PlanetSummarySection>\r\n                                    {{\r\n                                        \"scanResults\":this.state.shortRangeScanResults,\r\n                                        \"scanResolution\": this.state.scanResolution\r\n                                        }}\r\n                                </PlanetSummarySection> \r\n                                :  <div></div>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n            </Wrapper>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport CharacterSelect from './pages/CharacterSelect'\nimport Game from './pages/Game'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/SignUp\" component={SignUp} />\n    <Route exact path=\"/CharacterSelect\" component={CharacterSelect} />\n    <Route exact path=\"/Game\" component={Game} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}